{
  "activeGraphId":3,
  "authors":"BeamLR",
  "currentGraphID":3,
  "date":1665933003,
  "debugEnabled":false,
  "description":"Race crappy cars to earn money!",
  "difficulty":100,
  "frecency":{},
  "graphs":{
    "1":{
      "description":"This is the description for graph New State",
      "dirty":false,
      "links":[
        [
          118,
          "d",
          9,
          "flow",
          false
        ],
        [
          7,
          "flow",
          10,
          "flow",
          true
        ],
        [
          99,
          "match_4",
          11,
          "flow",
          false
        ],
        [
          99,
          "match_3",
          11,
          "flow",
          false
        ],
        [
          99,
          "match_2",
          11,
          "flow",
          false
        ],
        [
          99,
          "match_5",
          11,
          "flow",
          false
        ],
        [
          128,
          "flow",
          11,
          "reset",
          false
        ],
        [
          9887,
          "val",
          11,
          "position",
          false
        ],
        [
          1124,
          "vehId",
          12,
          "veid",
          false
        ],
        [
          26,
          "value",
          12,
          "toFetch",
          false
        ],
        [
          142,
          "value",
          12,
          "fetchID",
          false
        ],
        [
          7,
          "flow",
          13,
          "flow",
          true
        ],
        [
          94,
          "flow",
          14,
          "flow",
          false
        ],
        [
          81,
          "vehId",
          14,
          "veid",
          true
        ],
        [
          14,
          "flow",
          15,
          "flow",
          false
        ],
        [
          14,
          "output",
          15,
          "fetch",
          false
        ],
        [
          118,
          "f",
          17,
          "flow",
          false
        ],
        [
          60,
          "flow",
          18,
          "flow",
          false
        ],
        [
          57,
          "false",
          18,
          "flow",
          false
        ],
        [
          106,
          "val",
          18,
          "A",
          false
        ],
        [
          38,
          "val",
          18,
          "B",
          false
        ],
        [
          9915,
          "flow",
          20,
          "flow",
          false
        ],
        [
          9915,
          "flow",
          20,
          "flow",
          false
        ],
        [
          9915,
          "flow",
          20,
          "flow",
          false
        ],
        [
          901,
          "vehId",
          20,
          "veid",
          false
        ],
        [
          9915,
          "bsfile",
          20,
          "filename",
          false
        ],
        [
          3059,
          "down",
          21,
          "flow",
          false
        ],
        [
          124,
          "flow",
          21,
          "flow",
          false
        ],
        [
          355,
          "spawnids",
          21,
          "idtable",
          false
        ],
        [
          7,
          "flow",
          22,
          "flow",
          true
        ],
        [
          390,
          "down",
          22,
          "on",
          true
        ],
        [
          17,
          "flow",
          23,
          "flow",
          false
        ],
        [
          27,
          "flow",
          24,
          "flow",
          false
        ],
        [
          12,
          "flow",
          25,
          "flow",
          false
        ],
        [
          12,
          "output",
          25,
          "valStr",
          false
        ],
        [
          43,
          "flow",
          27,
          "flow",
          false
        ],
        [
          240,
          "flow",
          28,
          "flow",
          false
        ],
        [
          5002,
          "val",
          28,
          "value",
          false
        ],
        [
          4992,
          "value",
          28,
          "value_1",
          false
        ],
        [
          10227,
          "flow",
          29,
          "flow",
          false
        ],
        [
          58,
          "flow",
          31,
          "flow",
          false
        ],
        [
          446,
          "flow",
          32,
          "flow",
          false
        ],
        [
          446,
          "w",
          32,
          "width",
          false
        ],
        [
          446,
          "h",
          32,
          "height",
          false
        ],
        [
          446,
          "x",
          32,
          "posX",
          false
        ],
        [
          446,
          "y",
          32,
          "posY",
          false
        ],
        [
          7,
          "enterState",
          33,
          "flow",
          true
        ],
        [
          365,
          "down",
          34,
          "flow",
          false
        ],
        [
          56,
          "vehId",
          34,
          "veid",
          false
        ],
        [
          365,
          "down",
          35,
          "flow",
          false
        ],
        [
          27,
          "down",
          37,
          "flow",
          false
        ],
        [
          112,
          "flow",
          38,
          "flow",
          false
        ],
        [
          66,
          "True",
          39,
          "flow",
          false
        ],
        [
          35,
          "val",
          39,
          "x",
          false
        ],
        [
          1123,
          "val",
          39,
          "dx",
          false
        ],
        [
          1118,
          "flow",
          40,
          "flow",
          true
        ],
        [
          40,
          "flow",
          41,
          "flow",
          false
        ],
        [
          40,
          "val",
          41,
          "A",
          false
        ],
        [
          28,
          "match_1",
          43,
          "flow",
          false
        ],
        [
          433,
          "w",
          43,
          "width",
          false
        ],
        [
          433,
          "h",
          43,
          "height",
          false
        ],
        [
          433,
          "x",
          43,
          "posX",
          false
        ],
        [
          433,
          "y",
          43,
          "posY",
          false
        ],
        [
          526,
          "flow",
          44,
          "flow",
          true
        ],
        [
          342,
          "veid",
          44,
          "vehId",
          true
        ],
        [
          4995,
          "match_1",
          45,
          "flow",
          false
        ],
        [
          9870,
          "val",
          45,
          "text",
          false
        ],
        [
          20,
          "flow",
          46,
          "flow",
          false
        ],
        [
          5009,
          "flow",
          47,
          "flow",
          false
        ],
        [
          5008,
          "flow",
          47,
          "flow",
          false
        ],
        [
          4999,
          "flow",
          48,
          "flow",
          false
        ],
        [
          113,
          "flow",
          49,
          "flow",
          false
        ],
        [
          47,
          "flow",
          50,
          "flow",
          false
        ],
        [
          24,
          "flow",
          50,
          "flow",
          false
        ],
        [
          48,
          "flow",
          50,
          "flow",
          false
        ],
        [
          7,
          "flow",
          52,
          "flow",
          true
        ],
        [
          105,
          "flow",
          53,
          "flow",
          false
        ],
        [
          38,
          "val",
          53,
          "A",
          false
        ],
        [
          105,
          "Y",
          53,
          "B",
          false
        ],
        [
          34,
          "flow",
          54,
          "flow",
          false
        ],
        [
          34,
          "flow",
          54,
          "flow",
          false
        ],
        [
          56,
          "vehId",
          54,
          "veid",
          false
        ],
        [
          1123,
          "val",
          54,
          "gasCost",
          false
        ],
        [
          35,
          "val",
          54,
          "money",
          false
        ],
        [
          34,
          "gasVal",
          54,
          "currentGas",
          false
        ],
        [
          51,
          "value",
          54,
          "addedGas",
          false
        ],
        [
          436,
          "flow",
          55,
          "flow",
          false
        ],
        [
          53,
          "false",
          57,
          "flow",
          false
        ],
        [
          64,
          "flow",
          57,
          "flow",
          false
        ],
        [
          38,
          "val",
          57,
          "A",
          false
        ],
        [
          118,
          "e",
          58,
          "flow",
          false
        ],
        [
          31,
          "flow",
          59,
          "flow",
          false
        ],
        [
          57,
          "true",
          60,
          "flow",
          false
        ],
        [
          32,
          "flow",
          61,
          "flow",
          false
        ],
        [
          53,
          "true",
          64,
          "flow",
          false
        ],
        [
          114,
          "btn",
          64,
          "text",
          false
        ],
        [
          5008,
          "down",
          65,
          "flow",
          false
        ],
        [
          54,
          "flow",
          66,
          "flow",
          false
        ],
        [
          54,
          "paid",
          66,
          "condition",
          false
        ],
        [
          364,
          "flow",
          67,
          "flow",
          false
        ],
        [
          364,
          "val",
          67,
          "carid",
          false
        ],
        [
          546,
          "flow",
          68,
          "flow",
          false
        ],
        [
          546,
          "output",
          68,
          "dataTable",
          false
        ],
        [
          365,
          "flow",
          69,
          "flow",
          false
        ],
        [
          1114,
          "flow",
          69,
          "flow",
          false
        ],
        [
          679,
          "flow",
          72,
          "flow",
          false
        ],
        [
          81,
          "vehId",
          72,
          "veid",
          false
        ],
        [
          679,
          "value",
          72,
          "hasGas",
          false
        ],
        [
          129,
          "rdy",
          72,
          "vehRdy",
          true
        ],
        [
          174,
          "flow",
          74,
          "flow",
          false
        ],
        [
          9901,
          "config",
          74,
          "filename",
          true
        ],
        [
          99,
          "match_5",
          75,
          "flow_1",
          false
        ],
        [
          59,
          "flow",
          75,
          "flow_2",
          false
        ],
        [
          99,
          "match_2",
          76,
          "flow_1",
          false
        ],
        [
          99,
          "match_3",
          76,
          "flow_1",
          false
        ],
        [
          59,
          "flow",
          76,
          "flow_2",
          false
        ],
        [
          613,
          "flow",
          77,
          "flow",
          false
        ],
        [
          585,
          "false",
          77,
          "flow",
          false
        ],
        [
          10235,
          "flow",
          78,
          "flow_1",
          false
        ],
        [
          1112,
          "match_3",
          78,
          "flow_2",
          false
        ],
        [
          306,
          "flow",
          79,
          "flow",
          false
        ],
        [
          306,
          "w",
          79,
          "width",
          false
        ],
        [
          306,
          "h",
          79,
          "height",
          false
        ],
        [
          306,
          "x",
          79,
          "posX",
          false
        ],
        [
          306,
          "y",
          79,
          "posY",
          false
        ],
        [
          99,
          "match_4",
          80,
          "flow_1",
          false
        ],
        [
          59,
          "flow",
          80,
          "flow_2",
          false
        ],
        [
          92,
          "flow",
          82,
          "flow",
          false
        ],
        [
          92,
          "Y",
          82,
          "val",
          false
        ],
        [
          60,
          "down",
          83,
          "flow",
          false
        ],
        [
          38,
          "val",
          83,
          "X",
          false
        ],
        [
          96,
          "value",
          83,
          "DX",
          false
        ],
        [
          375,
          "flow",
          84,
          "flow",
          false
        ],
        [
          516,
          "veid",
          84,
          "veid",
          true
        ],
        [
          68,
          "carUsed",
          84,
          "gid",
          true
        ],
        [
          61,
          "flow",
          85,
          "flow",
          false
        ],
        [
          61,
          "val",
          85,
          "value",
          false
        ],
        [
          87,
          "value",
          85,
          "value_1",
          false
        ],
        [
          9892,
          "value",
          85,
          "value_2",
          false
        ],
        [
          9893,
          "value",
          85,
          "value_3",
          false
        ],
        [
          7,
          "flow",
          89,
          "flow",
          true
        ],
        [
          409,
          "flow",
          90,
          "flow",
          false
        ],
        [
          409,
          "w",
          90,
          "width",
          false
        ],
        [
          409,
          "h",
          90,
          "height",
          false
        ],
        [
          409,
          "x",
          90,
          "posX",
          false
        ],
        [
          409,
          "y",
          90,
          "posY",
          false
        ],
        [
          10053,
          "flow",
          91,
          "flow",
          false
        ],
        [
          9915,
          "config",
          91,
          "filename",
          false
        ],
        [
          64,
          "down",
          92,
          "flow",
          false
        ],
        [
          38,
          "val",
          92,
          "X",
          false
        ],
        [
          96,
          "value",
          92,
          "DX",
          false
        ],
        [
          85,
          "match_1",
          93,
          "flow",
          false
        ],
        [
          79,
          "flow",
          94,
          "flow",
          false
        ],
        [
          98,
          "formatted",
          94,
          "text",
          false
        ],
        [
          93,
          "flow",
          95,
          "flow",
          false
        ],
        [
          109,
          "flow",
          95,
          "flow",
          false
        ],
        [
          52,
          "flow",
          97,
          "flow",
          true
        ],
        [
          320,
          "flow",
          98,
          "flow",
          false
        ],
        [
          149,
          "val",
          98,
          "money",
          false
        ],
        [
          1121,
          "val",
          98,
          "carCount",
          false
        ],
        [
          72,
          "gasVal",
          98,
          "gasVal",
          false
        ],
        [
          320,
          "damage",
          98,
          "damage",
          false
        ],
        [
          479,
          "length",
          98,
          "accel",
          false
        ],
        [
          10076,
          "val",
          98,
          "gmax",
          false
        ],
        [
          10077,
          "val",
          98,
          "health",
          false
        ],
        [
          55,
          "flow",
          99,
          "flow",
          false
        ],
        [
          55,
          "val",
          99,
          "value",
          false
        ],
        [
          10083,
          "flow",
          100,
          "flow",
          false
        ],
        [
          44,
          "flow",
          102,
          "flow",
          false
        ],
        [
          97,
          "flow",
          103,
          "flow",
          false
        ],
        [
          643,
          "flow",
          103,
          "on",
          false
        ],
        [
          135,
          "flow",
          104,
          "flow",
          false
        ],
        [
          238,
          "stock",
          104,
          "input",
          false
        ],
        [
          135,
          "val",
          104,
          "selected",
          false
        ],
        [
          117,
          "flow",
          105,
          "flow",
          false
        ],
        [
          112,
          "val",
          105,
          "X",
          false
        ],
        [
          96,
          "value",
          105,
          "DX",
          false
        ],
        [
          38,
          "flow",
          106,
          "flow",
          false
        ],
        [
          624,
          "false",
          107,
          "flow",
          false
        ],
        [
          93,
          "down",
          108,
          "flow",
          false
        ],
        [
          107,
          "flow",
          109,
          "flow",
          false
        ],
        [
          18,
          "false",
          109,
          "flow",
          false
        ],
        [
          10130,
          "flow",
          109,
          "flow",
          false
        ],
        [
          85,
          "match_3",
          110,
          "flow",
          false
        ],
        [
          68,
          "flow",
          111,
          "flow",
          false
        ],
        [
          68,
          "carUsed",
          111,
          "val",
          false
        ],
        [
          85,
          "match_2",
          112,
          "flow",
          false
        ],
        [
          107,
          "down",
          113,
          "flow",
          false
        ],
        [
          38,
          "val",
          113,
          "val",
          false
        ],
        [
          418,
          "flow",
          114,
          "flow",
          false
        ],
        [
          515,
          "true",
          114,
          "flow",
          false
        ],
        [
          112,
          "val",
          114,
          "carCount",
          false
        ],
        [
          38,
          "val",
          114,
          "shownCar",
          false
        ],
        [
          418,
          "output",
          114,
          "carTable",
          false
        ],
        [
          106,
          "val",
          114,
          "currentCar",
          false
        ],
        [
          874,
          "flow",
          115,
          "flow",
          false
        ],
        [
          104,
          "output",
          115,
          "data",
          false
        ],
        [
          355,
          "rpaints",
          115,
          "rpaints",
          false
        ],
        [
          355,
          "randpaint",
          115,
          "randpaint",
          false
        ],
        [
          104,
          "sid",
          115,
          "sid",
          false
        ],
        [
          355,
          "seed",
          115,
          "seed",
          false
        ],
        [
          9917,
          "flow",
          116,
          "flow",
          false
        ],
        [
          238,
          "slotCount",
          116,
          "X",
          false
        ],
        [
          121,
          "value",
          116,
          "DX",
          false
        ],
        [
          114,
          "flow",
          117,
          "flow",
          false
        ],
        [
          114,
          "str",
          117,
          "text",
          false
        ],
        [
          77,
          "flow",
          118,
          "flow",
          true
        ],
        [
          358,
          "flow",
          118,
          "enableA",
          false
        ],
        [
          1122,
          "flow",
          118,
          "enableB",
          false
        ],
        [
          78,
          "flow",
          118,
          "enableC",
          false
        ],
        [
          119,
          "flow",
          118,
          "enableD",
          false
        ],
        [
          41,
          "false",
          118,
          "enableE",
          false
        ],
        [
          9891,
          "flow",
          118,
          "enableF",
          false
        ],
        [
          10008,
          "flow",
          118,
          "enableG",
          false
        ],
        [
          10234,
          "flow",
          118,
          "enableH",
          false
        ],
        [
          10235,
          "flow",
          119,
          "flow_1",
          false
        ],
        [
          844,
          "mflow",
          119,
          "flow_1",
          false
        ],
        [
          844,
          "mflow",
          119,
          "flow_2",
          false
        ],
        [
          1112,
          "match_4",
          119,
          "flow_2",
          false
        ],
        [
          7,
          "flow",
          122,
          "flow",
          true
        ],
        [
          9884,
          "flow",
          123,
          "flow",
          false
        ],
        [
          183,
          "flow",
          123,
          "flow",
          false
        ],
        [
          9885,
          "flow",
          123,
          "flow",
          false
        ],
        [
          9879,
          "flow",
          123,
          "flow",
          false
        ],
        [
          292,
          "flow",
          124,
          "flow",
          false
        ],
        [
          292,
          "val",
          124,
          "count",
          false
        ],
        [
          115,
          "type",
          124,
          "model",
          false
        ],
        [
          115,
          "config",
          124,
          "config",
          false
        ],
        [
          115,
          "baseprice",
          124,
          "baseprice",
          false
        ],
        [
          115,
          "partprice",
          124,
          "partprice",
          false
        ],
        [
          115,
          "scrapval",
          124,
          "scrapval",
          false
        ],
        [
          115,
          "paintdata",
          124,
          "paintdata",
          false
        ],
        [
          115,
          "odometer",
          124,
          "odometer",
          false
        ],
        [
          160,
          "flow",
          125,
          "flow",
          false
        ],
        [
          160,
          "val",
          125,
          "value",
          false
        ],
        [
          125,
          "match_1",
          126,
          "flow",
          false
        ],
        [
          122,
          "flow",
          127,
          "flow",
          false
        ],
        [
          319,
          "flow",
          127,
          "on",
          false
        ],
        [
          123,
          "flow",
          128,
          "flow",
          false
        ],
        [
          7,
          "flow",
          129,
          "flow",
          true
        ],
        [
          7,
          "enterState",
          130,
          "flow",
          true
        ],
        [
          220,
          "flow",
          131,
          "flow",
          false
        ],
        [
          220,
          "val",
          131,
          "A",
          false
        ],
        [
          115,
          "cost",
          131,
          "B",
          false
        ],
        [
          355,
          "flow",
          132,
          "flow",
          false
        ],
        [
          355,
          "spawnids",
          132,
          "idtable",
          false
        ],
        [
          233,
          "flow",
          135,
          "flow",
          false
        ],
        [
          7,
          "flow",
          136,
          "flow",
          true
        ],
        [
          99,
          "match_2",
          137,
          "flow",
          false
        ],
        [
          99,
          "match_3",
          137,
          "flow",
          false
        ],
        [
          10210,
          "match_1",
          139,
          "flow",
          false
        ],
        [
          10209,
          "extras",
          139,
          "filename",
          false
        ],
        [
          150,
          "completed",
          140,
          "flow",
          false
        ],
        [
          144,
          "value",
          140,
          "message",
          false
        ],
        [
          68,
          "flow",
          145,
          "flow",
          false
        ],
        [
          68,
          "money",
          145,
          "val",
          false
        ],
        [
          126,
          "flow",
          146,
          "flow",
          false
        ],
        [
          131,
          "true",
          148,
          "flow",
          false
        ],
        [
          1118,
          "flow",
          149,
          "flow",
          true
        ],
        [
          7,
          "flow",
          150,
          "flow",
          true
        ],
        [
          512,
          "false",
          151,
          "flow",
          false
        ],
        [
          10086,
          "flow",
          151,
          "flow",
          false
        ],
        [
          129,
          "model",
          151,
          "val",
          false
        ],
        [
          234,
          "flow",
          152,
          "flow",
          false
        ],
        [
          148,
          "flow",
          152,
          "flow",
          false
        ],
        [
          346,
          "loaded",
          153,
          "flow",
          false
        ],
        [
          591,
          "false",
          153,
          "reset",
          true
        ],
        [
          346,
          "vehicleIds",
          153,
          "data",
          false
        ],
        [
          7,
          "flow",
          155,
          "flow",
          false
        ],
        [
          383,
          "flow",
          156,
          "flow",
          false
        ],
        [
          383,
          "count",
          156,
          "rangeEnd",
          false
        ],
        [
          452,
          "flow",
          157,
          "flow",
          false
        ],
        [
          452,
          "output",
          157,
          "mdata",
          false
        ],
        [
          39,
          "flow",
          158,
          "flow",
          false
        ],
        [
          39,
          "y",
          158,
          "val",
          false
        ],
        [
          90,
          "flow",
          160,
          "flow",
          false
        ],
        [
          274,
          "flow",
          161,
          "flow",
          false
        ],
        [
          274,
          "val",
          161,
          "type",
          false
        ],
        [
          877,
          "flow",
          162,
          "flow",
          false
        ],
        [
          591,
          "false",
          162,
          "reset",
          true
        ],
        [
          846,
          "pool",
          162,
          "poolAmount",
          false
        ],
        [
          97,
          "flow",
          163,
          "flow",
          false
        ],
        [
          286,
          "flow",
          163,
          "on",
          false
        ],
        [
          157,
          "flow",
          164,
          "flow",
          false
        ],
        [
          157,
          "flow",
          164,
          "flow",
          false
        ],
        [
          157,
          "desc",
          164,
          "val",
          false
        ],
        [
          785,
          "flow",
          165,
          "flow",
          false
        ],
        [
          163,
          "flow",
          166,
          "flow",
          false
        ],
        [
          286,
          "flow",
          166,
          "reset",
          false
        ],
        [
          791,
          "true",
          167,
          "flow",
          false
        ],
        [
          168,
          "val",
          167,
          "A",
          false
        ],
        [
          137,
          "triggerId",
          167,
          "B",
          false
        ],
        [
          244,
          "flow",
          169,
          "flow",
          false
        ],
        [
          254,
          "true",
          171,
          "flow",
          false
        ],
        [
          76,
          "flow",
          172,
          "flow",
          false
        ],
        [
          436,
          "w",
          172,
          "width",
          true
        ],
        [
          436,
          "h",
          172,
          "height",
          true
        ],
        [
          436,
          "x",
          172,
          "posX",
          true
        ],
        [
          436,
          "y",
          172,
          "posY",
          true
        ],
        [
          165,
          "flow",
          173,
          "flow",
          false
        ],
        [
          226,
          "vehId",
          173,
          "veid",
          false
        ],
        [
          165,
          "devices",
          173,
          "devices",
          false
        ],
        [
          166,
          "flow",
          174,
          "flow",
          false
        ],
        [
          286,
          "flow",
          174,
          "reset",
          false
        ],
        [
          4024,
          "flow",
          175,
          "flow",
          false
        ],
        [
          146,
          "flow",
          175,
          "flow",
          false
        ],
        [
          172,
          "flow",
          176,
          "flow",
          false
        ],
        [
          182,
          "val",
          176,
          "text",
          false
        ],
        [
          201,
          "False",
          177,
          "flow",
          false
        ],
        [
          206,
          "flow",
          177,
          "flow",
          false
        ],
        [
          177,
          "flow",
          178,
          "flow",
          false
        ],
        [
          49,
          "flow",
          180,
          "flow",
          false
        ],
        [
          49,
          "val",
          180,
          "A",
          false
        ],
        [
          177,
          "down",
          183,
          "flow",
          false
        ],
        [
          9876,
          "down",
          184,
          "flow",
          false
        ],
        [
          110,
          "flow",
          185,
          "flow",
          false
        ],
        [
          394,
          "down",
          186,
          "flow",
          false
        ],
        [
          457,
          "over",
          186,
          "condition",
          false
        ],
        [
          125,
          "match_2",
          187,
          "flow",
          false
        ],
        [
          118,
          "b",
          188,
          "flow",
          false
        ],
        [
          188,
          "flow",
          189,
          "flow",
          false
        ],
        [
          376,
          "down",
          190,
          "flow",
          false
        ],
        [
          447,
          "flow",
          191,
          "flow",
          false
        ],
        [
          447,
          "w",
          191,
          "width",
          false
        ],
        [
          447,
          "h",
          191,
          "height",
          false
        ],
        [
          447,
          "x",
          191,
          "posX",
          false
        ],
        [
          447,
          "y",
          191,
          "posY",
          false
        ],
        [
          690,
          "flow",
          192,
          "flow",
          false
        ],
        [
          690,
          "output",
          192,
          "data",
          false
        ],
        [
          235,
          "true",
          193,
          "flow",
          false
        ],
        [
          271,
          "flow",
          194,
          "flow",
          false
        ],
        [
          193,
          "flow",
          194,
          "flow",
          false
        ],
        [
          283,
          "flow",
          195,
          "flow",
          false
        ],
        [
          283,
          "flow",
          195,
          "flow",
          false
        ],
        [
          283,
          "flow",
          195,
          "reset",
          false
        ],
        [
          283,
          "flow",
          195,
          "reset",
          false
        ],
        [
          198,
          "vehId",
          195,
          "vehId",
          false
        ],
        [
          7,
          "flow",
          196,
          "flow",
          true
        ],
        [
          562,
          "flow",
          197,
          "flow",
          false
        ],
        [
          10095,
          "val",
          197,
          "X",
          false
        ],
        [
          10223,
          "flow",
          199,
          "flow",
          false
        ],
        [
          10223,
          "val",
          199,
          "A",
          false
        ],
        [
          176,
          "flow",
          201,
          "flow",
          false
        ],
        [
          167,
          "value",
          201,
          "condition",
          false
        ],
        [
          555,
          "flow",
          203,
          "flow",
          false
        ],
        [
          555,
          "txt",
          203,
          "text",
          false
        ],
        [
          10014,
          "flow",
          204,
          "flow",
          false
        ],
        [
          457,
          "won",
          204,
          "condition",
          false
        ],
        [
          4986,
          "match_1",
          205,
          "flow",
          false
        ],
        [
          201,
          "True",
          206,
          "flow",
          false
        ],
        [
          9882,
          "flow",
          207,
          "flow",
          false
        ],
        [
          208,
          "val",
          207,
          "x",
          false
        ],
        [
          9882,
          "val",
          207,
          "dx",
          false
        ],
        [
          206,
          "down",
          208,
          "flow",
          false
        ],
        [
          75,
          "flow",
          209,
          "flow",
          false
        ],
        [
          436,
          "w",
          209,
          "width",
          true
        ],
        [
          436,
          "h",
          209,
          "height",
          true
        ],
        [
          436,
          "x",
          209,
          "posX",
          true
        ],
        [
          436,
          "y",
          209,
          "posY",
          true
        ],
        [
          211,
          "flow",
          210,
          "flow",
          false
        ],
        [
          216,
          "flow",
          211,
          "flow",
          false
        ],
        [
          216,
          "text",
          211,
          "text",
          false
        ],
        [
          4024,
          "down",
          212,
          "flow",
          false
        ],
        [
          124,
          "flow",
          212,
          "flow",
          false
        ],
        [
          3059,
          "down",
          212,
          "flow",
          false
        ],
        [
          273,
          "flow",
          213,
          "flow",
          false
        ],
        [
          497,
          "veid",
          213,
          "veid",
          false
        ],
        [
          38,
          "val",
          213,
          "gid",
          false
        ],
        [
          783,
          "flow",
          214,
          "flow",
          false
        ],
        [
          783,
          "output",
          214,
          "data",
          false
        ],
        [
          209,
          "flow",
          215,
          "flow",
          false
        ],
        [
          215,
          "flow",
          216,
          "flow",
          false
        ],
        [
          215,
          "val",
          216,
          "rew",
          false
        ],
        [
          210,
          "flow",
          217,
          "flow",
          false
        ],
        [
          7,
          "enterState",
          218,
          "flow",
          true
        ],
        [
          7,
          "flow",
          219,
          "flow",
          false
        ],
        [
          236,
          "flow",
          220,
          "flow",
          false
        ],
        [
          210,
          "down",
          221,
          "flow",
          false
        ],
        [
          10050,
          "flow",
          222,
          "flow",
          false
        ],
        [
          180,
          "false",
          222,
          "flow",
          false
        ],
        [
          38,
          "val",
          222,
          "id",
          false
        ],
        [
          224,
          "flow",
          223,
          "flow",
          false
        ],
        [
          224,
          "val",
          223,
          "A",
          false
        ],
        [
          228,
          "value",
          223,
          "B",
          false
        ],
        [
          433,
          "flow",
          224,
          "flow",
          false
        ],
        [
          190,
          "flow",
          227,
          "flow",
          false
        ],
        [
          685,
          "rrange",
          227,
          "rangeEnd",
          false
        ],
        [
          253,
          "flow",
          229,
          "flow",
          false
        ],
        [
          173,
          "damageData",
          229,
          "dmgTable",
          false
        ],
        [
          785,
          "output",
          229,
          "priceTable",
          false
        ],
        [
          309,
          "damage",
          229,
          "extDmg",
          false
        ],
        [
          204,
          "True",
          230,
          "flow",
          false
        ],
        [
          302,
          "flow",
          232,
          "flow",
          false
        ],
        [
          10003,
          "Y",
          232,
          "val",
          false
        ],
        [
          412,
          "flow",
          233,
          "flow",
          false
        ],
        [
          412,
          "w",
          233,
          "width",
          false
        ],
        [
          412,
          "h",
          233,
          "height",
          false
        ],
        [
          412,
          "x",
          233,
          "posX",
          false
        ],
        [
          412,
          "y",
          233,
          "posY",
          false
        ],
        [
          131,
          "false",
          234,
          "flow",
          false
        ],
        [
          267,
          "flow",
          235,
          "flow",
          false
        ],
        [
          267,
          "val",
          235,
          "A",
          false
        ],
        [
          270,
          "val",
          235,
          "B",
          false
        ],
        [
          104,
          "flow",
          236,
          "flow",
          false
        ],
        [
          115,
          "fulldesc",
          236,
          "text",
          false
        ],
        [
          259,
          "flow",
          237,
          "flow",
          false
        ],
        [
          173,
          "ready",
          237,
          "condition",
          false
        ],
        [
          242,
          "flow",
          238,
          "flow",
          false
        ],
        [
          242,
          "output",
          238,
          "shopData",
          false
        ],
        [
          223,
          "true",
          240,
          "flow_1",
          false
        ],
        [
          4988,
          "flow",
          240,
          "flow_2",
          false
        ],
        [
          139,
          "flow",
          241,
          "flow",
          false
        ],
        [
          139,
          "output",
          241,
          "dtable",
          false
        ],
        [
          245,
          "flow",
          242,
          "flow",
          false
        ],
        [
          245,
          "file",
          242,
          "filename",
          false
        ],
        [
          230,
          "flow",
          243,
          "flow",
          false
        ],
        [
          230,
          "val",
          243,
          "X",
          false
        ],
        [
          10029,
          "val",
          243,
          "DX",
          false
        ],
        [
          856,
          "flow",
          244,
          "flow",
          false
        ],
        [
          740,
          "flow",
          245,
          "flow",
          false
        ],
        [
          740,
          "shopFile",
          245,
          "name",
          false
        ],
        [
          122,
          "flow",
          246,
          "flow",
          false
        ],
        [
          46,
          "flow",
          246,
          "on",
          false
        ],
        [
          387,
          "flow",
          247,
          "flow",
          false
        ],
        [
          291,
          "canPay",
          247,
          "condition",
          false
        ],
        [
          187,
          "flow",
          248,
          "flow",
          false
        ],
        [
          238,
          "cams",
          248,
          "data",
          false
        ],
        [
          187,
          "val",
          248,
          "selected",
          false
        ],
        [
          10054,
          "flow",
          249,
          "flow",
          false
        ],
        [
          281,
          "flow",
          250,
          "flow",
          false
        ],
        [
          281,
          "flow",
          250,
          "flowA",
          false
        ],
        [
          403,
          "true",
          250,
          "flowB",
          false
        ],
        [
          10045,
          "true",
          250,
          "flowC",
          false
        ],
        [
          241,
          "flow",
          251,
          "flow",
          false
        ],
        [
          241,
          "club",
          251,
          "club",
          false
        ],
        [
          229,
          "flow",
          252,
          "flow",
          false
        ],
        [
          229,
          "totalCost",
          252,
          "val",
          false
        ],
        [
          237,
          "True",
          253,
          "flow",
          false
        ],
        [
          173,
          "flow",
          253,
          "reset",
          false
        ],
        [
          116,
          "flow",
          254,
          "flow",
          false
        ],
        [
          187,
          "val",
          254,
          "A",
          false
        ],
        [
          116,
          "Y",
          254,
          "B",
          false
        ],
        [
          171,
          "flow",
          255,
          "flow",
          false
        ],
        [
          254,
          "false",
          255,
          "flow",
          false
        ],
        [
          187,
          "val",
          255,
          "A",
          false
        ],
        [
          171,
          "down",
          256,
          "flow",
          false
        ],
        [
          187,
          "val",
          256,
          "X",
          false
        ],
        [
          260,
          "value",
          256,
          "DX",
          false
        ],
        [
          259,
          "flow",
          257,
          "flow",
          false
        ],
        [
          124,
          "flow",
          258,
          "flow",
          false
        ],
        [
          3059,
          "down",
          258,
          "flow",
          false
        ],
        [
          3059,
          "down",
          258,
          "reset",
          false
        ],
        [
          124,
          "flow",
          258,
          "reset",
          false
        ],
        [
          4994,
          "flow",
          259,
          "flow",
          false
        ],
        [
          1131,
          "down",
          261,
          "flow",
          false
        ],
        [
          187,
          "val",
          261,
          "X",
          false
        ],
        [
          260,
          "value",
          261,
          "DX",
          false
        ],
        [
          256,
          "flow",
          262,
          "flow",
          false
        ],
        [
          256,
          "Y",
          262,
          "val",
          false
        ],
        [
          3059,
          "flow",
          263,
          "flow",
          false
        ],
        [
          279,
          "flow",
          264,
          "flow",
          false
        ],
        [
          325,
          "vehId",
          264,
          "veid",
          false
        ],
        [
          279,
          "devices",
          264,
          "devices",
          false
        ],
        [
          360,
          "value",
          264,
          "uid",
          false
        ],
        [
          275,
          "flow",
          265,
          "flow",
          false
        ],
        [
          275,
          "destid",
          265,
          "val",
          true
        ],
        [
          270,
          "flow",
          266,
          "flow",
          false
        ],
        [
          270,
          "val",
          266,
          "value",
          false
        ],
        [
          9931,
          "flow",
          267,
          "flow",
          false
        ],
        [
          10177,
          "flow",
          268,
          "flow",
          false
        ],
        [
          9910,
          "vehId",
          268,
          "veid",
          false
        ],
        [
          10177,
          "devices",
          268,
          "devices",
          false
        ],
        [
          10224,
          "flow",
          269,
          "flow",
          false
        ],
        [
          10224,
          "val",
          269,
          "A",
          false
        ],
        [
          191,
          "flow",
          270,
          "flow",
          false
        ],
        [
          235,
          "false",
          271,
          "flow",
          false
        ],
        [
          716,
          "flow",
          272,
          "flow",
          false
        ],
        [
          267,
          "val",
          272,
          "X",
          false
        ],
        [
          270,
          "val",
          272,
          "DX",
          false
        ],
        [
          396,
          "flow",
          273,
          "flow",
          false
        ],
        [
          497,
          "veid",
          273,
          "veid",
          false
        ],
        [
          214,
          "ifile",
          273,
          "file",
          false
        ],
        [
          250,
          "flowA",
          274,
          "flow",
          false
        ],
        [
          329,
          "flow",
          275,
          "flow",
          false
        ],
        [
          329,
          "output",
          275,
          "raceData",
          false
        ],
        [
          511,
          "flow",
          276,
          "flow",
          false
        ],
        [
          497,
          "veid",
          276,
          "veid",
          false
        ],
        [
          214,
          "bsfile",
          276,
          "filename",
          false
        ],
        [
          1112,
          "match_3",
          278,
          "flow",
          false
        ],
        [
          1112,
          "match_4",
          278,
          "flow",
          false
        ],
        [
          322,
          "flow",
          279,
          "flow",
          false
        ],
        [
          7,
          "flow",
          281,
          "flow",
          true
        ],
        [
          272,
          "flow",
          282,
          "flow",
          false
        ],
        [
          272,
          "Y",
          282,
          "val",
          false
        ],
        [
          282,
          "flow",
          283,
          "flow",
          false
        ],
        [
          272,
          "Y",
          283,
          "money",
          false
        ],
        [
          9901,
          "flow",
          286,
          "flow",
          false
        ],
        [
          9910,
          "vehId",
          286,
          "veid",
          false
        ],
        [
          9901,
          "bsfile",
          286,
          "filename",
          false
        ],
        [
          637,
          "false",
          288,
          "flow",
          false
        ],
        [
          68,
          "carUsed",
          288,
          "id",
          false
        ],
        [
          102,
          "flow",
          289,
          "flow",
          false
        ],
        [
          102,
          "val",
          289,
          "A",
          false
        ],
        [
          441,
          "match_1",
          290,
          "flow",
          false
        ],
        [
          10106,
          "flow",
          291,
          "flow",
          false
        ],
        [
          296,
          "val",
          291,
          "desc",
          false
        ],
        [
          10029,
          "val",
          291,
          "wager",
          false
        ],
        [
          10030,
          "val",
          291,
          "slips",
          false
        ],
        [
          10035,
          "val",
          291,
          "pcash",
          false
        ],
        [
          10105,
          "val",
          291,
          "ebp",
          false
        ],
        [
          10106,
          "val",
          291,
          "epp",
          false
        ],
        [
          275,
          "laps",
          291,
          "laps",
          true
        ],
        [
          275,
          "cpcount",
          291,
          "cpc",
          true
        ],
        [
          275,
          "reputation",
          291,
          "reputation",
          false
        ],
        [
          275,
          "parts",
          291,
          "parts",
          false
        ],
        [
          275,
          "opModel",
          291,
          "opmodel",
          false
        ],
        [
          148,
          "down",
          292,
          "flow",
          false
        ],
        [
          7,
          "enterState",
          293,
          "flow",
          true
        ],
        [
          410,
          "flow",
          294,
          "flow",
          false
        ],
        [
          784,
          "flow",
          295,
          "flow",
          false
        ],
        [
          784,
          "output",
          295,
          "data",
          false
        ],
        [
          377,
          "match_2",
          296,
          "flow",
          false
        ],
        [
          289,
          "true",
          297,
          "flow",
          false
        ],
        [
          124,
          "flow",
          298,
          "flow",
          false
        ],
        [
          292,
          "val",
          298,
          "X",
          false
        ],
        [
          300,
          "value",
          298,
          "DX",
          false
        ],
        [
          72,
          "flow",
          299,
          "flow",
          false
        ],
        [
          72,
          "gasVal",
          299,
          "val",
          true
        ],
        [
          10003,
          "flow",
          302,
          "flow",
          false
        ],
        [
          10003,
          "flow",
          302,
          "flow",
          false
        ],
        [
          298,
          "Y",
          302,
          "val",
          false
        ],
        [
          138,
          "flow",
          303,
          "flow",
          false
        ],
        [
          10,
          "flow",
          303,
          "flow",
          false
        ],
        [
          1118,
          "flow",
          306,
          "flow",
          true
        ],
        [
          407,
          "output",
          306,
          "data",
          true
        ],
        [
          664,
          "flow",
          308,
          "flow",
          false
        ],
        [
          257,
          "flow",
          309,
          "flow",
          false
        ],
        [
          226,
          "vehId",
          309,
          "vehId",
          false
        ],
        [
          250,
          "flowC",
          310,
          "flow",
          false
        ],
        [
          552,
          "flow",
          311,
          "flow",
          false
        ],
        [
          552,
          "flag",
          311,
          "condition",
          false
        ],
        [
          7,
          "flow",
          312,
          "flow",
          true
        ],
        [
          328,
          "flow",
          313,
          "flow",
          false
        ],
        [
          264,
          "integrityData",
          313,
          "iteg",
          false
        ],
        [
          685,
          "flow",
          314,
          "flow",
          false
        ],
        [
          700,
          "flow",
          315,
          "flow",
          false
        ],
        [
          702,
          "false",
          315,
          "reset",
          false
        ],
        [
          759,
          "true",
          316,
          "flow",
          false
        ],
        [
          7,
          "flow",
          318,
          "flow",
          true
        ],
        [
          295,
          "flow",
          319,
          "flow",
          false
        ],
        [
          295,
          "flow",
          319,
          "flow",
          false
        ],
        [
          295,
          "flow",
          319,
          "flow",
          false
        ],
        [
          295,
          "flow",
          319,
          "flow",
          false
        ],
        [
          901,
          "vehId",
          319,
          "vehId",
          false
        ],
        [
          72,
          "flow",
          320,
          "flow",
          false
        ],
        [
          81,
          "vehId",
          320,
          "vehId",
          false
        ],
        [
          214,
          "flow",
          321,
          "flow",
          false
        ],
        [
          202,
          "vehId",
          321,
          "vehId",
          false
        ],
        [
          10047,
          "flow",
          322,
          "flow",
          false
        ],
        [
          7,
          "flow",
          323,
          "flow",
          true
        ],
        [
          322,
          "flow",
          324,
          "flow",
          false
        ],
        [
          325,
          "vehId",
          324,
          "veid",
          false
        ],
        [
          322,
          "devices",
          324,
          "devices",
          false
        ],
        [
          360,
          "value",
          324,
          "uid",
          false
        ],
        [
          330,
          "flow",
          327,
          "flow",
          false
        ],
        [
          330,
          "val",
          327,
          "val",
          false
        ],
        [
          398,
          "flow",
          328,
          "flow",
          false
        ],
        [
          324,
          "damageData",
          328,
          "dmg",
          false
        ],
        [
          352,
          "value",
          328,
          "file",
          false
        ],
        [
          691,
          "flow",
          329,
          "flow",
          false
        ],
        [
          691,
          "fullpath",
          329,
          "filename",
          false
        ],
        [
          381,
          "flow",
          330,
          "flow",
          false
        ],
        [
          327,
          "flow",
          331,
          "flow",
          false
        ],
        [
          334,
          "flow",
          333,
          "flow",
          false
        ],
        [
          334,
          "val",
          333,
          "A",
          false
        ],
        [
          555,
          "cost",
          333,
          "B",
          false
        ],
        [
          542,
          "flow",
          334,
          "flow",
          false
        ],
        [
          10060,
          "flow",
          335,
          "flow",
          false
        ],
        [
          304,
          "value",
          335,
          "title",
          false
        ],
        [
          10060,
          "w",
          335,
          "width",
          false
        ],
        [
          10060,
          "h",
          335,
          "height",
          false
        ],
        [
          10060,
          "x",
          335,
          "posX",
          false
        ],
        [
          10060,
          "y",
          335,
          "posY",
          false
        ],
        [
          341,
          "flow",
          336,
          "flow",
          false
        ],
        [
          325,
          "vehId",
          336,
          "veid",
          false
        ],
        [
          399,
          "flow",
          337,
          "flow",
          false
        ],
        [
          516,
          "veid",
          337,
          "veid",
          false
        ],
        [
          295,
          "ifile",
          337,
          "file",
          false
        ],
        [
          390,
          "down",
          339,
          "flow",
          false
        ],
        [
          10046,
          "flow",
          341,
          "flow",
          false
        ],
        [
          325,
          "vehId",
          341,
          "vid",
          false
        ],
        [
          352,
          "value",
          341,
          "file",
          false
        ],
        [
          470,
          "flow",
          342,
          "flow",
          false
        ],
        [
          10041,
          "val",
          342,
          "model",
          false
        ],
        [
          10042,
          "val",
          342,
          "config",
          false
        ],
        [
          10201,
          "val",
          342,
          "pos",
          false
        ],
        [
          10202,
          "val",
          342,
          "rot",
          false
        ],
        [
          10204,
          "val",
          342,
          "paintdata",
          false
        ],
        [
          541,
          "completed",
          343,
          "flow",
          false
        ],
        [
          334,
          "val",
          343,
          "X",
          false
        ],
        [
          555,
          "cost",
          343,
          "DX",
          true
        ],
        [
          349,
          "flow",
          344,
          "flow",
          false
        ],
        [
          604,
          "flow",
          346,
          "flow",
          false
        ],
        [
          591,
          "false",
          346,
          "reset",
          false
        ],
        [
          604,
          "data",
          346,
          "group",
          false
        ],
        [
          846,
          "traffic",
          346,
          "quantity",
          false
        ],
        [
          343,
          "flow",
          347,
          "flow",
          false
        ],
        [
          343,
          "Y",
          347,
          "val",
          false
        ],
        [
          374,
          "flow",
          349,
          "flow",
          false
        ],
        [
          174,
          "flow",
          349,
          "on",
          false
        ],
        [
          351,
          "flow",
          349,
          "off",
          false
        ],
        [
          380,
          "flow",
          350,
          "flow",
          false
        ],
        [
          374,
          "flow",
          351,
          "flow",
          false
        ],
        [
          174,
          "flow",
          351,
          "reset",
          false
        ],
        [
          396,
          "flow",
          353,
          "flow",
          false
        ],
        [
          497,
          "veid",
          353,
          "veid",
          false
        ],
        [
          214,
          "gas",
          353,
          "gas",
          false
        ],
        [
          52,
          "flow",
          354,
          "flow",
          true
        ],
        [
          238,
          "flow",
          355,
          "flow",
          false
        ],
        [
          238,
          "stock",
          355,
          "stock",
          false
        ],
        [
          238,
          "slotCount",
          355,
          "slotCount",
          false
        ],
        [
          238,
          "slots",
          355,
          "slots",
          false
        ],
        [
          445,
          "enter",
          356,
          "flow",
          false
        ],
        [
          568,
          "vehId",
          356,
          "oid",
          false
        ],
        [
          10235,
          "flow",
          358,
          "flow_1",
          false
        ],
        [
          1112,
          "match_1",
          358,
          "flow_2",
          false
        ],
        [
          347,
          "flow",
          361,
          "flow",
          false
        ],
        [
          332,
          "vehId",
          361,
          "vid",
          false
        ],
        [
          284,
          "value",
          361,
          "pos",
          false
        ],
        [
          10049,
          "flow",
          362,
          "flow",
          false
        ],
        [
          174,
          "flow",
          362,
          "reset",
          false
        ],
        [
          744,
          "flow",
          363,
          "flow",
          false
        ],
        [
          668,
          "flow",
          364,
          "flow",
          false
        ],
        [
          335,
          "flow",
          365,
          "flow",
          false
        ],
        [
          368,
          "value",
          365,
          "text",
          false
        ],
        [
          118,
          "g",
          366,
          "flow",
          false
        ],
        [
          594,
          "True",
          367,
          "flow",
          false
        ],
        [
          609,
          "btntxt",
          367,
          "text",
          true
        ],
        [
          366,
          "flow",
          369,
          "flow",
          false
        ],
        [
          443,
          "flow",
          371,
          "flow",
          false
        ],
        [
          443,
          "w",
          371,
          "width",
          true
        ],
        [
          443,
          "h",
          371,
          "height",
          true
        ],
        [
          443,
          "x",
          371,
          "posX",
          true
        ],
        [
          443,
          "y",
          371,
          "posY",
          true
        ],
        [
          158,
          "flow",
          372,
          "flow",
          false
        ],
        [
          1113,
          "value",
          372,
          "message",
          false
        ],
        [
          362,
          "flow",
          373,
          "flow",
          false
        ],
        [
          174,
          "flow",
          373,
          "reset",
          false
        ],
        [
          97,
          "flow",
          374,
          "flow",
          true
        ],
        [
          337,
          "flow",
          375,
          "flow",
          false
        ],
        [
          516,
          "veid",
          375,
          "veid",
          false
        ],
        [
          295,
          "gas",
          375,
          "gas",
          false
        ],
        [
          706,
          "flow",
          376,
          "flow",
          false
        ],
        [
          382,
          "flow",
          377,
          "flow",
          false
        ],
        [
          382,
          "val",
          377,
          "value",
          false
        ],
        [
          394,
          "flow",
          378,
          "flow",
          false
        ],
        [
          376,
          "flow",
          378,
          "flow",
          false
        ],
        [
          377,
          "none",
          378,
          "flow",
          false
        ],
        [
          10017,
          "flow",
          378,
          "flow",
          false
        ],
        [
          10011,
          "flow",
          378,
          "flow",
          false
        ],
        [
          246,
          "flow",
          380,
          "flow",
          false
        ],
        [
          318,
          "flow",
          381,
          "flow",
          false
        ],
        [
          371,
          "flow",
          382,
          "flow",
          false
        ],
        [
          775,
          "flow",
          383,
          "flow",
          false
        ],
        [
          775,
          "missionFile",
          383,
          "gid",
          false
        ],
        [
          480,
          "flow",
          384,
          "flow",
          false
        ],
        [
          480,
          "trig",
          384,
          "condition",
          false
        ],
        [
          10158,
          "flow",
          385,
          "flow",
          false
        ],
        [
          776,
          "flow",
          386,
          "flow",
          false
        ],
        [
          782,
          "output",
          386,
          "current",
          false
        ],
        [
          72,
          "gasVal",
          386,
          "gas",
          true
        ],
        [
          776,
          "val",
          386,
          "damage",
          false
        ],
        [
          291,
          "flow",
          387,
          "flow",
          false
        ],
        [
          291,
          "full",
          387,
          "text",
          false
        ],
        [
          386,
          "flow",
          388,
          "flow",
          false
        ],
        [
          386,
          "output",
          388,
          "data",
          false
        ],
        [
          9909,
          "filename",
          388,
          "filename",
          true
        ],
        [
          780,
          "flow",
          389,
          "flow",
          false
        ],
        [
          9914,
          "output",
          389,
          "current",
          false
        ],
        [
          72,
          "gasVal",
          389,
          "gas",
          true
        ],
        [
          780,
          "val",
          389,
          "damage",
          false
        ],
        [
          247,
          "True",
          390,
          "flow",
          false
        ],
        [
          162,
          "flow",
          391,
          "flow",
          false
        ],
        [
          591,
          "false",
          391,
          "reset",
          true
        ],
        [
          389,
          "flow",
          392,
          "flow",
          false
        ],
        [
          389,
          "output",
          392,
          "data",
          false
        ],
        [
          9913,
          "filename",
          392,
          "filename",
          false
        ],
        [
          457,
          "flow",
          393,
          "flow",
          false
        ],
        [
          457,
          "text",
          393,
          "text",
          false
        ],
        [
          393,
          "flow",
          394,
          "flow",
          false
        ],
        [
          457,
          "btntxt",
          394,
          "text",
          false
        ],
        [
          377,
          "match_4",
          395,
          "flow",
          false
        ],
        [
          762,
          "flow",
          396,
          "flow",
          false
        ],
        [
          763,
          "false",
          396,
          "flow",
          false
        ],
        [
          10217,
          "false",
          396,
          "flow",
          false
        ],
        [
          497,
          "veid",
          396,
          "vid",
          false
        ],
        [
          214,
          "mfile",
          396,
          "file",
          false
        ],
        [
          400,
          "flow",
          398,
          "flow",
          false
        ],
        [
          354,
          "flow",
          398,
          "reset",
          false
        ],
        [
          769,
          "false",
          399,
          "flow",
          false
        ],
        [
          10218,
          "false",
          399,
          "flow",
          false
        ],
        [
          758,
          "flow",
          399,
          "flow",
          false
        ],
        [
          516,
          "veid",
          399,
          "vid",
          false
        ],
        [
          295,
          "mfile",
          399,
          "file",
          false
        ],
        [
          324,
          "flow",
          400,
          "flow",
          false
        ],
        [
          354,
          "flow",
          400,
          "reset",
          false
        ],
        [
          193,
          "down",
          402,
          "flow",
          false
        ],
        [
          72,
          "gasVal",
          402,
          "input",
          true
        ],
        [
          281,
          "enter",
          403,
          "flow",
          false
        ],
        [
          281,
          "vehId",
          403,
          "A",
          false
        ],
        [
          280,
          "vehId",
          403,
          "B",
          false
        ],
        [
          125,
          "match_3",
          404,
          "flow",
          false
        ],
        [
          521,
          "flow",
          405,
          "flow",
          false
        ],
        [
          7,
          "enterState",
          407,
          "flow",
          true
        ],
        [
          118,
          "c",
          409,
          "flow",
          false
        ],
        [
          407,
          "output",
          409,
          "data",
          true
        ],
        [
          695,
          "flow",
          410,
          "flow",
          false
        ],
        [
          198,
          "vehId",
          410,
          "veid",
          false
        ],
        [
          402,
          "output",
          410,
          "gas",
          false
        ],
        [
          294,
          "flow",
          411,
          "flow",
          false
        ],
        [
          198,
          "vehId",
          411,
          "veid",
          false
        ],
        [
          294,
          "val",
          411,
          "gid",
          false
        ],
        [
          263,
          "flow",
          412,
          "flow",
          false
        ],
        [
          407,
          "output",
          412,
          "data",
          true
        ],
        [
          425,
          "flow",
          413,
          "flow",
          false
        ],
        [
          424,
          "baseprice",
          413,
          "baseprice",
          false
        ],
        [
          424,
          "partprice",
          413,
          "partprice",
          false
        ],
        [
          424,
          "scrapval",
          413,
          "scrapval",
          false
        ],
        [
          425,
          "val",
          413,
          "dmgcost",
          false
        ],
        [
          416,
          "flow",
          414,
          "flow",
          false
        ],
        [
          416,
          "val",
          414,
          "carid",
          false
        ],
        [
          331,
          "flow",
          415,
          "flow",
          false
        ],
        [
          331,
          "flag",
          415,
          "condition",
          false
        ],
        [
          429,
          "flow",
          416,
          "flow",
          false
        ],
        [
          414,
          "flow",
          417,
          "flow",
          false
        ],
        [
          414,
          "filename",
          417,
          "filename",
          false
        ],
        [
          420,
          "flow",
          418,
          "flow",
          false
        ],
        [
          420,
          "filename",
          418,
          "filename",
          false
        ],
        [
          10017,
          "down",
          419,
          "flow",
          false
        ],
        [
          342,
          "veid",
          419,
          "id",
          false
        ],
        [
          515,
          "false",
          420,
          "flow",
          false
        ],
        [
          38,
          "val",
          420,
          "carid",
          false
        ],
        [
          437,
          "flow",
          421,
          "flow",
          false
        ],
        [
          403,
          "true",
          422,
          "flow",
          false
        ],
        [
          281,
          "triggerId",
          422,
          "val",
          false
        ],
        [
          250,
          "flowC",
          423,
          "flow",
          false
        ],
        [
          417,
          "flow",
          424,
          "flow",
          false
        ],
        [
          417,
          "output",
          424,
          "data",
          false
        ],
        [
          424,
          "flow",
          425,
          "flow",
          false
        ],
        [
          415,
          "True",
          426,
          "flow",
          false
        ],
        [
          331,
          "val",
          426,
          "val",
          false
        ],
        [
          721,
          "flow",
          427,
          "flow",
          false
        ],
        [
          10190,
          "flow",
          427,
          "reset",
          false
        ],
        [
          413,
          "flow",
          428,
          "flow",
          false
        ],
        [
          413,
          "sellval",
          428,
          "value",
          false
        ],
        [
          413,
          "isScrap",
          428,
          "showSuf",
          false
        ],
        [
          125,
          "match_3",
          429,
          "flow",
          false
        ],
        [
          146,
          "down",
          429,
          "reset",
          true
        ],
        [
          7,
          "flow",
          430,
          "flow",
          true
        ],
        [
          636,
          "flow",
          431,
          "flow",
          false
        ],
        [
          636,
          "val",
          431,
          "A",
          false
        ],
        [
          430,
          "flow",
          432,
          "flow",
          false
        ],
        [
          459,
          "flow",
          432,
          "on",
          false
        ],
        [
          10017,
          "down",
          432,
          "off",
          false
        ],
        [
          4988,
          "flow",
          433,
          "flow",
          false
        ],
        [
          407,
          "output",
          433,
          "data",
          true
        ],
        [
          249,
          "flow",
          434,
          "flow",
          false
        ],
        [
          5002,
          "flow",
          435,
          "flow",
          false
        ],
        [
          433,
          "w",
          435,
          "width",
          true
        ],
        [
          433,
          "h",
          435,
          "height",
          true
        ],
        [
          433,
          "x",
          435,
          "posX",
          true
        ],
        [
          433,
          "y",
          435,
          "posY",
          true
        ],
        [
          5006,
          "flow",
          436,
          "flow",
          false
        ],
        [
          407,
          "output",
          436,
          "data",
          true
        ],
        [
          250,
          "flowA",
          437,
          "flow",
          false
        ],
        [
          250,
          "flowB",
          437,
          "on",
          false
        ],
        [
          250,
          "flowC",
          437,
          "off",
          false
        ],
        [
          7,
          "flow",
          438,
          "flow",
          true
        ],
        [
          290,
          "flow",
          440,
          "flow",
          false
        ],
        [
          438,
          "triggerId",
          440,
          "A",
          false
        ],
        [
          290,
          "val",
          440,
          "B",
          false
        ],
        [
          449,
          "flow",
          441,
          "flow",
          false
        ],
        [
          438,
          "vehId",
          441,
          "value",
          false
        ],
        [
          444,
          "vehId",
          441,
          "value_1",
          false
        ],
        [
          449,
          "val",
          441,
          "value_2",
          false
        ],
        [
          232,
          "flow",
          442,
          "flow",
          false
        ],
        [
          10003,
          "Y",
          442,
          "money",
          false
        ],
        [
          298,
          "Y",
          442,
          "carCount",
          false
        ],
        [
          369,
          "flow",
          443,
          "flow",
          false
        ],
        [
          407,
          "output",
          443,
          "data",
          true
        ],
        [
          10171,
          "true",
          445,
          "flow",
          false
        ],
        [
          23,
          "flow",
          446,
          "flow",
          false
        ],
        [
          407,
          "output",
          446,
          "data",
          true
        ],
        [
          189,
          "flow",
          447,
          "flow",
          false
        ],
        [
          407,
          "output",
          447,
          "data",
          true
        ],
        [
          10225,
          "true",
          448,
          "flow",
          false
        ],
        [
          445,
          "vehId",
          448,
          "A",
          false
        ],
        [
          566,
          "output",
          448,
          "B",
          false
        ],
        [
          451,
          "true",
          449,
          "flow",
          false
        ],
        [
          199,
          "true",
          450,
          "flow",
          false
        ],
        [
          438,
          "enter",
          451,
          "flow",
          false
        ],
        [
          10023,
          "val",
          451,
          "A",
          false
        ],
        [
          460,
          "flow",
          452,
          "flow",
          false
        ],
        [
          460,
          "filename",
          452,
          "filename",
          false
        ],
        [
          7,
          "flow",
          453,
          "flow",
          false
        ],
        [
          743,
          "vehId",
          453,
          "vid",
          false
        ],
        [
          462,
          "flow",
          454,
          "flow",
          false
        ],
        [
          462,
          "val",
          454,
          "A",
          false
        ],
        [
          448,
          "true",
          455,
          "flow_1",
          false
        ],
        [
          10064,
          "true",
          455,
          "flow_2",
          false
        ],
        [
          377,
          "match_3",
          456,
          "flow",
          false
        ],
        [
          10163,
          "flow",
          457,
          "flow",
          false
        ],
        [
          456,
          "val",
          457,
          "winner",
          false
        ],
        [
          10068,
          "val",
          457,
          "plyrdy",
          false
        ],
        [
          10030,
          "val",
          457,
          "slips",
          false
        ],
        [
          10163,
          "val",
          457,
          "clap",
          false
        ],
        [
          275,
          "laps",
          457,
          "laps",
          true
        ],
        [
          652,
          "nextId",
          457,
          "cpid",
          false
        ],
        [
          275,
          "cpcount",
          457,
          "cpc",
          true
        ],
        [
          10067,
          "flow",
          458,
          "flow",
          false
        ],
        [
          342,
          "veid",
          458,
          "val",
          false
        ],
        [
          10065,
          "flow",
          459,
          "flow",
          false
        ],
        [
          566,
          "output",
          459,
          "vehId",
          false
        ],
        [
          156,
          "flow",
          460,
          "flow",
          false
        ],
        [
          383,
          "missions",
          460,
          "missions",
          false
        ],
        [
          156,
          "random",
          460,
          "mid",
          false
        ],
        [
          811,
          "true",
          461,
          "flow",
          false
        ],
        [
          10107,
          "True",
          462,
          "flow",
          true
        ],
        [
          752,
          "flow",
          463,
          "flow",
          false
        ],
        [
          493,
          "true",
          463,
          "flow",
          false
        ],
        [
          465,
          "flow",
          464,
          "flow",
          false
        ],
        [
          459,
          "flow",
          464,
          "reset",
          false
        ],
        [
          432,
          "flow",
          465,
          "flow",
          true
        ],
        [
          44,
          "flow",
          465,
          "on",
          false
        ],
        [
          459,
          "flow",
          465,
          "off",
          false
        ],
        [
          467,
          "flow",
          466,
          "flow",
          false
        ],
        [
          483,
          "flow",
          466,
          "reset",
          false
        ],
        [
          7,
          "flow",
          467,
          "flow",
          true
        ],
        [
          483,
          "flow",
          467,
          "on",
          false
        ],
        [
          432,
          "flow",
          470,
          "flow",
          false
        ],
        [
          390,
          "down",
          470,
          "reset",
          false
        ],
        [
          7,
          "flow",
          471,
          "flow",
          true
        ],
        [
          323,
          "flow",
          472,
          "flow",
          false
        ],
        [
          323,
          "flag",
          472,
          "condition",
          false
        ],
        [
          494,
          "flow",
          473,
          "flow",
          false
        ],
        [
          474,
          "val",
          473,
          "carCount",
          false
        ],
        [
          500,
          "flow",
          474,
          "flow",
          false
        ],
        [
          7,
          "flow",
          477,
          "flow",
          true
        ],
        [
          478,
          "vehId",
          477,
          "veid",
          false
        ],
        [
          10074,
          "flow",
          479,
          "flow",
          false
        ],
        [
          477,
          "output",
          479,
          "gx",
          false
        ],
        [
          10073,
          "output",
          479,
          "gy",
          false
        ],
        [
          10074,
          "output",
          479,
          "gz",
          false
        ],
        [
          481,
          "flow",
          480,
          "flow",
          false
        ],
        [
          479,
          "length",
          480,
          "cval",
          false
        ],
        [
          481,
          "val",
          480,
          "cmax",
          false
        ],
        [
          479,
          "flow",
          481,
          "flow",
          false
        ],
        [
          480,
          "flow",
          482,
          "flow",
          false
        ],
        [
          480,
          "update",
          482,
          "condition",
          false
        ],
        [
          7,
          "flow",
          483,
          "flow",
          true
        ],
        [
          466,
          "ongoing",
          484,
          "flow",
          false
        ],
        [
          7,
          "flow",
          487,
          "flow",
          true
        ],
        [
          432,
          "flow",
          488,
          "flow",
          false
        ],
        [
          470,
          "flow",
          488,
          "reset",
          false
        ],
        [
          765,
          "flow",
          490,
          "flow",
          false
        ],
        [
          492,
          "val",
          490,
          "chp",
          false
        ],
        [
          479,
          "length",
          490,
          "fval",
          false
        ],
        [
          474,
          "flow",
          491,
          "flow",
          false
        ],
        [
          502,
          "flow",
          491,
          "reset",
          false
        ],
        [
          384,
          "True",
          492,
          "flow",
          false
        ],
        [
          10080,
          "flow",
          493,
          "flow",
          false
        ],
        [
          10080,
          "val",
          493,
          "A",
          false
        ],
        [
          474,
          "flow",
          494,
          "flow",
          false
        ],
        [
          502,
          "flow",
          494,
          "reset",
          false
        ],
        [
          353,
          "flow",
          495,
          "flow",
          false
        ],
        [
          38,
          "val",
          495,
          "carUsed",
          true
        ],
        [
          491,
          "flow",
          496,
          "flow",
          false
        ],
        [
          506,
          "flow",
          497,
          "flow",
          false
        ],
        [
          214,
          "type",
          497,
          "model",
          false
        ],
        [
          214,
          "config",
          497,
          "config",
          false
        ],
        [
          321,
          "position",
          497,
          "pos",
          false
        ],
        [
          321,
          "rotation",
          497,
          "rot",
          false
        ],
        [
          214,
          "paintdata",
          497,
          "paintdata",
          false
        ],
        [
          465,
          "flow",
          498,
          "flow",
          false
        ],
        [
          44,
          "flow",
          498,
          "reset",
          false
        ],
        [
          503,
          "flow",
          499,
          "flow",
          false
        ],
        [
          503,
          "ot",
          499,
          "time",
          false
        ],
        [
          7,
          "flow",
          500,
          "flow",
          true
        ],
        [
          502,
          "flow",
          500,
          "on",
          false
        ],
        [
          463,
          "completed",
          502,
          "flow",
          true
        ],
        [
          533,
          "completed",
          503,
          "flow",
          false
        ],
        [
          501,
          "time",
          503,
          "ct",
          false
        ],
        [
          494,
          "flow",
          504,
          "flow",
          false
        ],
        [
          476,
          "vehId",
          504,
          "vehId",
          false
        ],
        [
          7,
          "flow",
          505,
          "flow",
          true
        ],
        [
          644,
          "flow",
          506,
          "flow",
          false
        ],
        [
          643,
          "flow",
          506,
          "reset",
          false
        ],
        [
          103,
          "flow",
          507,
          "flow",
          false
        ],
        [
          497,
          "flow",
          507,
          "on",
          false
        ],
        [
          499,
          "flow",
          508,
          "flow",
          false
        ],
        [
          507,
          "flow",
          509,
          "flow",
          false
        ],
        [
          497,
          "flow",
          509,
          "reset",
          false
        ],
        [
          504,
          "flow",
          510,
          "flow",
          false
        ],
        [
          509,
          "flow",
          511,
          "flow",
          false
        ],
        [
          497,
          "flow",
          511,
          "reset",
          false
        ],
        [
          10087,
          "flow",
          512,
          "flow",
          false
        ],
        [
          129,
          "walking",
          512,
          "A",
          false
        ],
        [
          10087,
          "val",
          512,
          "B",
          false
        ],
        [
          129,
          "model",
          513,
          "message",
          false
        ],
        [
          106,
          "flow",
          515,
          "flow",
          false
        ],
        [
          38,
          "val",
          515,
          "A",
          false
        ],
        [
          517,
          "flow",
          516,
          "flow",
          false
        ],
        [
          295,
          "type",
          516,
          "model",
          false
        ],
        [
          295,
          "config",
          516,
          "config",
          false
        ],
        [
          319,
          "position",
          516,
          "pos",
          false
        ],
        [
          319,
          "rotation",
          516,
          "rot",
          false
        ],
        [
          295,
          "paintdata",
          516,
          "paintdata",
          false
        ],
        [
          127,
          "flow",
          517,
          "flow",
          false
        ],
        [
          319,
          "flow",
          517,
          "reset",
          false
        ],
        [
          527,
          "flow",
          518,
          "flow",
          false
        ],
        [
          416,
          "val",
          518,
          "carid",
          true
        ],
        [
          527,
          "val",
          518,
          "count",
          false
        ],
        [
          127,
          "flow",
          519,
          "flow",
          false
        ],
        [
          516,
          "flow",
          519,
          "reset",
          false
        ],
        [
          519,
          "flow",
          520,
          "flow",
          false
        ],
        [
          516,
          "flow",
          520,
          "reset",
          false
        ],
        [
          518,
          "flow",
          521,
          "flow",
          false
        ],
        [
          522,
          "vehId",
          521,
          "vehId",
          false
        ],
        [
          524,
          "flow",
          523,
          "flow",
          false
        ],
        [
          524,
          "val",
          523,
          "X",
          false
        ],
        [
          413,
          "sellval",
          523,
          "DX",
          true
        ],
        [
          405,
          "flow",
          524,
          "flow",
          false
        ],
        [
          10058,
          "flow",
          525,
          "flow",
          false
        ],
        [
          523,
          "Y",
          525,
          "money",
          false
        ],
        [
          528,
          "Y",
          525,
          "carCount",
          false
        ],
        [
          488,
          "flow",
          526,
          "flow",
          false
        ],
        [
          470,
          "flow",
          526,
          "reset",
          false
        ],
        [
          1134,
          "down",
          527,
          "flow",
          false
        ],
        [
          523,
          "flow",
          528,
          "flow",
          false
        ],
        [
          527,
          "val",
          528,
          "X",
          false
        ],
        [
          529,
          "value",
          528,
          "DX",
          false
        ],
        [
          517,
          "flow",
          530,
          "flow",
          false
        ],
        [
          901,
          "vehId",
          530,
          "vehId",
          true
        ],
        [
          10254,
          "flow",
          531,
          "flow",
          false
        ],
        [
          461,
          "triggerName",
          531,
          "ctrig",
          false
        ],
        [
          798,
          "val",
          531,
          "ccp",
          false
        ],
        [
          829,
          "type",
          531,
          "type",
          false
        ],
        [
          829,
          "trigs",
          531,
          "triggers",
          false
        ],
        [
          829,
          "targetSpd",
          531,
          "targetSpd",
          false
        ],
        [
          829,
          "timeLimit",
          531,
          "timeLimit",
          false
        ],
        [
          829,
          "driftPoints",
          531,
          "driftPoints",
          false
        ],
        [
          829,
          "targetTime",
          531,
          "targetTime",
          false
        ],
        [
          10254,
          "val",
          531,
          "completed",
          false
        ],
        [
          67,
          "flow",
          532,
          "flow",
          false
        ],
        [
          67,
          "filename",
          532,
          "filename",
          false
        ],
        [
          534,
          "flow",
          533,
          "flow",
          false
        ],
        [
          505,
          "flow",
          533,
          "reset",
          false
        ],
        [
          539,
          "flow",
          533,
          "reset",
          false
        ],
        [
          7,
          "flow",
          534,
          "flow",
          true
        ],
        [
          539,
          "flow",
          534,
          "on",
          false
        ],
        [
          505,
          "flow",
          534,
          "on",
          false
        ],
        [
          533,
          "flow",
          535,
          "flow",
          false
        ],
        [
          508,
          "flow",
          535,
          "on",
          false
        ],
        [
          535,
          "flow",
          536,
          "flow",
          false
        ],
        [
          508,
          "flow",
          536,
          "reset",
          false
        ],
        [
          539,
          "flow",
          537,
          "flow",
          false
        ],
        [
          505,
          "flow",
          537,
          "flow",
          false
        ],
        [
          538,
          "vehId",
          537,
          "vehId",
          false
        ],
        [
          10083,
          "down",
          539,
          "flow",
          true
        ],
        [
          7,
          "flow",
          540,
          "flow",
          true
        ],
        [
          333,
          "true",
          540,
          "on",
          false
        ],
        [
          540,
          "flow",
          541,
          "flow",
          false
        ],
        [
          333,
          "true",
          541,
          "reset",
          false
        ],
        [
          203,
          "down",
          542,
          "flow",
          false
        ],
        [
          10091,
          "flow",
          543,
          "flow",
          false
        ],
        [
          547,
          "val",
          543,
          "money",
          false
        ],
        [
          10089,
          "val",
          543,
          "carCount",
          false
        ],
        [
          10091,
          "val",
          543,
          "health",
          false
        ],
        [
          10090,
          "val",
          543,
          "carUsed",
          false
        ],
        [
          548,
          "time",
          543,
          "time",
          false
        ],
        [
          892,
          "flow",
          544,
          "flow",
          false
        ],
        [
          361,
          "flow",
          544,
          "reset",
          false
        ],
        [
          333,
          "true",
          545,
          "flow",
          false
        ],
        [
          332,
          "vehId",
          545,
          "vehId",
          false
        ],
        [
          7,
          "enterState",
          546,
          "flow",
          true
        ],
        [
          392,
          "flow",
          547,
          "flow",
          false
        ],
        [
          9883,
          "flow",
          549,
          "flow",
          false
        ],
        [
          207,
          "y",
          549,
          "money",
          false
        ],
        [
          10032,
          "flow",
          550,
          "flow",
          false
        ],
        [
          10037,
          "Y",
          550,
          "money",
          false
        ],
        [
          9929,
          "flow",
          551,
          "flow",
          false
        ],
        [
          7,
          "flow",
          552,
          "flow",
          true
        ],
        [
          367,
          "flow",
          553,
          "flow",
          false
        ],
        [
          508,
          "flow",
          554,
          "flow",
          false
        ],
        [
          501,
          "time",
          554,
          "time",
          false
        ],
        [
          551,
          "flow",
          555,
          "flow",
          false
        ],
        [
          551,
          "val",
          555,
          "walking",
          false
        ],
        [
          10095,
          "flow",
          557,
          "flow",
          false
        ],
        [
          558,
          "val",
          557,
          "carid",
          false
        ],
        [
          10095,
          "val",
          557,
          "count",
          false
        ],
        [
          454,
          "false",
          558,
          "flow",
          false
        ],
        [
          561,
          "flow",
          559,
          "flow",
          false
        ],
        [
          641,
          "output",
          559,
          "vehId",
          false
        ],
        [
          641,
          "flow",
          561,
          "flow",
          false
        ],
        [
          559,
          "flow",
          562,
          "flow",
          false
        ],
        [
          608,
          "arrest",
          563,
          "flow",
          true
        ],
        [
          10228,
          "flow",
          564,
          "flow",
          false
        ],
        [
          10096,
          "val",
          564,
          "count",
          false
        ],
        [
          10041,
          "val",
          564,
          "model",
          true
        ],
        [
          10042,
          "val",
          564,
          "config",
          true
        ],
        [
          10101,
          "val",
          564,
          "baseprice",
          true
        ],
        [
          10102,
          "val",
          564,
          "partprice",
          true
        ],
        [
          10104,
          "val",
          564,
          "scrapval",
          false
        ],
        [
          10228,
          "val",
          564,
          "paintdata",
          false
        ],
        [
          10181,
          "val",
          564,
          "ifile",
          false
        ],
        [
          339,
          "flow",
          566,
          "flow",
          true
        ],
        [
          568,
          "vehId",
          566,
          "input",
          false
        ],
        [
          563,
          "flow",
          567,
          "flow",
          false
        ],
        [
          608,
          "offensesList",
          567,
          "olist",
          false
        ],
        [
          10124,
          "output",
          567,
          "cdata",
          true
        ],
        [
          10127,
          "output",
          567,
          "nlib",
          true
        ],
        [
          564,
          "flow",
          569,
          "flow",
          false
        ],
        [
          10096,
          "val",
          569,
          "X",
          false
        ],
        [
          569,
          "flow",
          570,
          "flow",
          false
        ],
        [
          569,
          "Y",
          570,
          "val",
          false
        ],
        [
          570,
          "flow",
          571,
          "flow",
          false
        ],
        [
          569,
          "Y",
          571,
          "carCount",
          false
        ],
        [
          585,
          "true",
          572,
          "flow",
          false
        ],
        [
          367,
          "down",
          573,
          "flow",
          false
        ],
        [
          572,
          "val",
          573,
          "A",
          false
        ],
        [
          575,
          "flow",
          574,
          "flow",
          false
        ],
        [
          575,
          "val",
          574,
          "A",
          false
        ],
        [
          567,
          "cost",
          574,
          "B",
          false
        ],
        [
          573,
          "true",
          575,
          "flow",
          false
        ],
        [
          472,
          "True",
          576,
          "flow",
          false
        ],
        [
          574,
          "true",
          577,
          "flow",
          false
        ],
        [
          575,
          "val",
          577,
          "X",
          false
        ],
        [
          567,
          "cost",
          577,
          "DX",
          false
        ],
        [
          577,
          "flow",
          578,
          "flow",
          false
        ],
        [
          577,
          "Y",
          578,
          "val",
          false
        ],
        [
          578,
          "flow",
          579,
          "flow",
          false
        ],
        [
          577,
          "Y",
          579,
          "money",
          false
        ],
        [
          631,
          "flow",
          580,
          "flow",
          false
        ],
        [
          10131,
          "Y",
          580,
          "val",
          false
        ],
        [
          572,
          "flow",
          581,
          "flow",
          false
        ],
        [
          136,
          "flow",
          582,
          "flow",
          false
        ],
        [
          581,
          "flow",
          583,
          "flow",
          false
        ],
        [
          608,
          "flow",
          584,
          "flow",
          false
        ],
        [
          584,
          "flow",
          585,
          "flow",
          false
        ],
        [
          584,
          "val",
          585,
          "A",
          false
        ],
        [
          155,
          "flow",
          586,
          "flow",
          false
        ],
        [
          10153,
          "flow",
          586,
          "on",
          false
        ],
        [
          10017,
          "down",
          586,
          "off",
          true
        ],
        [
          608,
          "active",
          587,
          "flow",
          false
        ],
        [
          608,
          "evade",
          587,
          "reset",
          false
        ],
        [
          608,
          "arrest",
          587,
          "reset",
          false
        ],
        [
          719,
          "flow",
          588,
          "flow",
          false
        ],
        [
          582,
          "flag",
          588,
          "A",
          false
        ],
        [
          719,
          "val",
          588,
          "B",
          false
        ],
        [
          582,
          "flow",
          589,
          "flow",
          false
        ],
        [
          588,
          "false",
          590,
          "flow",
          false
        ],
        [
          588,
          "true",
          590,
          "reset",
          false
        ],
        [
          590,
          "flow",
          591,
          "flow",
          false
        ],
        [
          582,
          "flag",
          591,
          "A",
          false
        ],
        [
          10125,
          "flow",
          593,
          "flow",
          false
        ],
        [
          612,
          "flow",
          594,
          "flow",
          false
        ],
        [
          609,
          "oticket",
          594,
          "condition",
          true
        ],
        [
          598,
          "true",
          596,
          "flow",
          false
        ],
        [
          81,
          "vehId",
          596,
          "vehId",
          false
        ],
        [
          602,
          "flow",
          597,
          "flow",
          false
        ],
        [
          614,
          "output",
          597,
          "veid",
          false
        ],
        [
          602,
          "bsfile",
          597,
          "filename",
          false
        ],
        [
          572,
          "flow",
          598,
          "flow",
          false
        ],
        [
          572,
          "val",
          598,
          "A",
          false
        ],
        [
          608,
          "evade",
          599,
          "flow",
          false
        ],
        [
          645,
          "flow",
          600,
          "flow",
          false
        ],
        [
          619,
          "damageData",
          600,
          "dmg",
          false
        ],
        [
          602,
          "mfile",
          600,
          "file",
          false
        ],
        [
          606,
          "flow",
          601,
          "flow",
          false
        ],
        [
          606,
          "val",
          601,
          "carid",
          false
        ],
        [
          603,
          "flow",
          602,
          "flow",
          false
        ],
        [
          603,
          "output",
          602,
          "data",
          false
        ],
        [
          614,
          "flow",
          603,
          "flow",
          false
        ],
        [
          601,
          "filename",
          603,
          "filename",
          false
        ],
        [
          653,
          "flow",
          604,
          "flow",
          false
        ],
        [
          526,
          "flow",
          605,
          "flow",
          false
        ],
        [
          342,
          "veid",
          605,
          "vehId",
          false
        ],
        [
          553,
          "down",
          606,
          "flow",
          false
        ],
        [
          653,
          "flow",
          607,
          "flow",
          false
        ],
        [
          153,
          "flow",
          607,
          "on",
          false
        ],
        [
          591,
          "false",
          607,
          "off",
          false
        ],
        [
          100,
          "flow",
          608,
          "flow",
          false
        ],
        [
          81,
          "vehId",
          608,
          "vehId",
          false
        ],
        [
          583,
          "flow",
          609,
          "flow",
          false
        ],
        [
          608,
          "mode",
          609,
          "mode",
          false
        ],
        [
          608,
          "score",
          609,
          "score",
          false
        ],
        [
          608,
          "sightValue",
          609,
          "sight",
          false
        ],
        [
          608,
          "offenses",
          609,
          "offenses",
          false
        ],
        [
          608,
          "offensesList",
          609,
          "olist",
          false
        ],
        [
          572,
          "val",
          609,
          "gottkt",
          false
        ],
        [
          608,
          "timeElapsed",
          609,
          "time",
          false
        ],
        [
          581,
          "val",
          609,
          "tktcost",
          false
        ],
        [
          583,
          "val",
          609,
          "tkttxt",
          false
        ],
        [
          611,
          "flow",
          610,
          "flow",
          false
        ],
        [
          611,
          "w",
          610,
          "width",
          true
        ],
        [
          611,
          "h",
          610,
          "height",
          true
        ],
        [
          611,
          "x",
          610,
          "posX",
          true
        ],
        [
          611,
          "y",
          610,
          "posY",
          true
        ],
        [
          609,
          "flow",
          611,
          "flow",
          false
        ],
        [
          407,
          "output",
          611,
          "data",
          true
        ],
        [
          610,
          "flow",
          612,
          "flow",
          false
        ],
        [
          609,
          "text",
          612,
          "text",
          true
        ],
        [
          553,
          "flow",
          613,
          "flow",
          false
        ],
        [
          594,
          "False",
          613,
          "flow",
          false
        ],
        [
          10216,
          "flow",
          614,
          "flow",
          false
        ],
        [
          615,
          "vehId",
          614,
          "input",
          false
        ],
        [
          10184,
          "flow",
          616,
          "flow",
          false
        ],
        [
          616,
          "flow",
          617,
          "flow",
          false
        ],
        [
          614,
          "output",
          617,
          "vehId",
          false
        ],
        [
          634,
          "flow",
          618,
          "flow",
          false
        ],
        [
          618,
          "flow",
          619,
          "flow",
          false
        ],
        [
          614,
          "output",
          619,
          "veid",
          false
        ],
        [
          618,
          "devices",
          619,
          "devices",
          false
        ],
        [
          10141,
          "False",
          620,
          "flow",
          false
        ],
        [
          10150,
          "val",
          620,
          "A",
          false
        ],
        [
          10140,
          "nextId",
          620,
          "B",
          true
        ],
        [
          617,
          "flow",
          622,
          "flow",
          false
        ],
        [
          10129,
          "flow",
          623,
          "flow",
          false
        ],
        [
          18,
          "true",
          624,
          "flow",
          false
        ],
        [
          114,
          "imcost",
          624,
          "A",
          false
        ],
        [
          626,
          "flow",
          625,
          "flow",
          false
        ],
        [
          626,
          "val",
          625,
          "A",
          false
        ],
        [
          114,
          "imcost",
          625,
          "B",
          false
        ],
        [
          10130,
          "down",
          626,
          "flow",
          false
        ],
        [
          652,
          "flow",
          627,
          "flow",
          false
        ],
        [
          652,
          "finished",
          627,
          "condition",
          false
        ],
        [
          629,
          "flow",
          628,
          "flow",
          false
        ],
        [
          629,
          "filename",
          628,
          "file",
          false
        ],
        [
          625,
          "true",
          629,
          "flow",
          false
        ],
        [
          38,
          "val",
          629,
          "carid",
          false
        ],
        [
          781,
          "flow",
          630,
          "flow",
          false
        ],
        [
          601,
          "filename",
          630,
          "file",
          false
        ],
        [
          567,
          "cost",
          630,
          "tval",
          false
        ],
        [
          10131,
          "flow",
          631,
          "flow",
          false
        ],
        [
          10131,
          "Y",
          631,
          "money",
          false
        ],
        [
          635,
          "flow",
          632,
          "flow",
          false
        ],
        [
          597,
          "flow",
          632,
          "on",
          false
        ],
        [
          652,
          "nextTrig",
          633,
          "name",
          false
        ],
        [
          777,
          "flow",
          634,
          "flow",
          false
        ],
        [
          597,
          "flow",
          634,
          "reset",
          false
        ],
        [
          52,
          "flow",
          635,
          "flow",
          true
        ],
        [
          657,
          "flow",
          636,
          "flow",
          false
        ],
        [
          68,
          "flow",
          637,
          "flow",
          false
        ],
        [
          68,
          "carUsed",
          637,
          "A",
          false
        ],
        [
          635,
          "flow",
          638,
          "flow",
          false
        ],
        [
          619,
          "flow",
          638,
          "on",
          false
        ],
        [
          640,
          "flow",
          639,
          "flow",
          false
        ],
        [
          637,
          "true",
          640,
          "flow",
          false
        ],
        [
          901,
          "vehId",
          640,
          "input",
          true
        ],
        [
          557,
          "flow",
          641,
          "flow",
          false
        ],
        [
          560,
          "vehId",
          641,
          "input",
          false
        ],
        [
          638,
          "flow",
          642,
          "flow",
          false
        ],
        [
          619,
          "flow",
          642,
          "reset",
          false
        ],
        [
          321,
          "flow",
          643,
          "flow",
          false
        ],
        [
          202,
          "vehId",
          643,
          "id",
          false
        ],
        [
          103,
          "flow",
          644,
          "flow",
          false
        ],
        [
          643,
          "flow",
          644,
          "reset",
          false
        ],
        [
          642,
          "flow",
          645,
          "flow",
          false
        ],
        [
          619,
          "flow",
          645,
          "reset",
          false
        ],
        [
          204,
          "True",
          647,
          "flow",
          false
        ],
        [
          10222,
          "flow",
          648,
          "flow",
          false
        ],
        [
          342,
          "veid",
          648,
          "vehId",
          false
        ],
        [
          10222,
          "path",
          648,
          "points",
          false
        ],
        [
          10043,
          "val",
          648,
          "risk",
          false
        ],
        [
          10227,
          "val",
          648,
          "avoid",
          false
        ],
        [
          586,
          "flow",
          649,
          "flow",
          false
        ],
        [
          10017,
          "down",
          649,
          "reset",
          true
        ],
        [
          10153,
          "pos",
          649,
          "position",
          false
        ],
        [
          464,
          "finished",
          651,
          "flow",
          true
        ],
        [
          10167,
          "flow",
          652,
          "flow",
          false
        ],
        [
          275,
          "cpcount",
          652,
          "cpc",
          true
        ],
        [
          275,
          "triggers",
          652,
          "trigs",
          true
        ],
        [
          275,
          "wayps",
          652,
          "wps",
          true
        ],
        [
          10136,
          "val",
          652,
          "current",
          false
        ],
        [
          10137,
          "val",
          652,
          "clap",
          false
        ],
        [
          275,
          "laps",
          652,
          "laps",
          true
        ],
        [
          10167,
          "val",
          652,
          "status",
          false
        ],
        [
          717,
          "flow",
          653,
          "flow",
          false
        ],
        [
          431,
          "true",
          654,
          "flow",
          false
        ],
        [
          663,
          "true",
          654,
          "reset",
          false
        ],
        [
          647,
          "flow",
          655,
          "flow",
          false
        ],
        [
          655,
          "flow",
          656,
          "flow",
          false
        ],
        [
          655,
          "val",
          656,
          "A",
          false
        ],
        [
          155,
          "flow",
          657,
          "flow",
          false
        ],
        [
          663,
          "true",
          657,
          "on",
          false
        ],
        [
          155,
          "flow",
          658,
          "flow",
          false
        ],
        [
          450,
          "flow",
          658,
          "on",
          false
        ],
        [
          649,
          "flow",
          659,
          "flow",
          false
        ],
        [
          10166,
          "flow",
          659,
          "on",
          false
        ],
        [
          661,
          "False",
          659,
          "off",
          false
        ],
        [
          155,
          "flow",
          660,
          "flow",
          false
        ],
        [
          10022,
          "flow",
          660,
          "on",
          false
        ],
        [
          10153,
          "flow",
          661,
          "flow",
          false
        ],
        [
          652,
          "showft",
          661,
          "condition",
          false
        ],
        [
          10153,
          "flow",
          663,
          "flow",
          false
        ],
        [
          10167,
          "val",
          663,
          "A",
          false
        ],
        [
          665,
          "flow",
          664,
          "flow",
          false
        ],
        [
          311,
          "False",
          664,
          "reset",
          false
        ],
        [
          10172,
          "True",
          665,
          "flow",
          false
        ],
        [
          311,
          "False",
          665,
          "reset",
          false
        ],
        [
          308,
          "flow",
          666,
          "flow",
          false
        ],
        [
          666,
          "flow",
          668,
          "flow",
          false
        ],
        [
          730,
          "flow",
          669,
          "flow",
          false
        ],
        [
          670,
          "vehId",
          669,
          "veid",
          false
        ],
        [
          668,
          "val",
          669,
          "gas",
          false
        ],
        [
          735,
          "True",
          671,
          "flow",
          false
        ],
        [
          672,
          "true",
          671,
          "flow",
          false
        ],
        [
          229,
          "totalCost",
          671,
          "val",
          true
        ],
        [
          673,
          "flow",
          672,
          "flow",
          false
        ],
        [
          673,
          "val",
          672,
          "A",
          false
        ],
        [
          229,
          "totalCost",
          672,
          "B",
          true
        ],
        [
          229,
          "flow",
          673,
          "flow",
          true
        ],
        [
          10092,
          "flow",
          675,
          "flow",
          false
        ],
        [
          129,
          "flow",
          676,
          "flow",
          false
        ],
        [
          129,
          "rdy",
          676,
          "condition",
          false
        ],
        [
          492,
          "flow",
          677,
          "flow",
          false
        ],
        [
          129,
          "walking",
          677,
          "A",
          true
        ],
        [
          350,
          "flow",
          678,
          "flow",
          false
        ],
        [
          1118,
          "flow",
          679,
          "flow",
          true
        ],
        [
          129,
          "walking",
          679,
          "A",
          true
        ],
        [
          677,
          "true",
          680,
          "flow",
          false
        ],
        [
          129,
          "rdy",
          680,
          "condition",
          true
        ],
        [
          693,
          "flow",
          681,
          "flow",
          false
        ],
        [
          10195,
          "flow",
          682,
          "flow",
          false
        ],
        [
          681,
          "val",
          682,
          "league",
          false
        ],
        [
          10195,
          "val",
          682,
          "club",
          false
        ],
        [
          682,
          "flow",
          683,
          "flow",
          false
        ],
        [
          682,
          "infoFile",
          683,
          "filename",
          false
        ],
        [
          683,
          "flow",
          684,
          "flow",
          false
        ],
        [
          683,
          "output",
          684,
          "data",
          false
        ],
        [
          686,
          "flow",
          685,
          "flow",
          false
        ],
        [
          681,
          "val",
          685,
          "league",
          false
        ],
        [
          686,
          "output",
          685,
          "data",
          false
        ],
        [
          684,
          "raceCount",
          685,
          "count",
          false
        ],
        [
          684,
          "races",
          685,
          "races",
          false
        ],
        [
          684,
          "flow",
          686,
          "flow",
          false
        ],
        [
          682,
          "progress",
          686,
          "filename",
          false
        ],
        [
          251,
          "flow",
          687,
          "flow",
          false
        ],
        [
          251,
          "progress",
          687,
          "filename",
          false
        ],
        [
          678,
          "flow",
          688,
          "flow",
          false
        ],
        [
          901,
          "vehId",
          688,
          "veid",
          false
        ],
        [
          678,
          "devices",
          688,
          "devices",
          false
        ],
        [
          227,
          "flow",
          689,
          "flow",
          false
        ],
        [
          685,
          "remain",
          689,
          "value",
          false
        ],
        [
          227,
          "random",
          689,
          "key",
          false
        ],
        [
          10187,
          "flow",
          690,
          "flow",
          false
        ],
        [
          10187,
          "filename",
          690,
          "filename",
          false
        ],
        [
          689,
          "flow",
          691,
          "flow",
          false
        ],
        [
          682,
          "folder",
          691,
          "folder",
          false
        ],
        [
          689,
          "value",
          691,
          "file",
          false
        ],
        [
          701,
          "flow",
          693,
          "flow",
          false
        ],
        [
          550,
          "flow",
          694,
          "flow",
          false
        ],
        [
          685,
          "rcount",
          694,
          "rcount",
          true
        ],
        [
          681,
          "val",
          694,
          "league",
          true
        ],
        [
          685,
          "prog",
          694,
          "prog",
          true
        ],
        [
          686,
          "output",
          694,
          "full",
          true
        ],
        [
          689,
          "value",
          694,
          "crace",
          true
        ],
        [
          195,
          "flow",
          695,
          "flow",
          false
        ],
        [
          198,
          "vehId",
          695,
          "veid",
          false
        ],
        [
          192,
          "ifile",
          695,
          "file",
          false
        ],
        [
          694,
          "flow",
          696,
          "flow",
          false
        ],
        [
          694,
          "newfull",
          696,
          "data",
          false
        ],
        [
          682,
          "progress",
          696,
          "filename",
          true
        ],
        [
          192,
          "flow",
          697,
          "flow",
          false
        ],
        [
          711,
          "flow",
          698,
          "flow",
          false
        ],
        [
          198,
          "vehId",
          698,
          "veid",
          false
        ],
        [
          697,
          "devices",
          698,
          "devices",
          false
        ],
        [
          696,
          "flow",
          699,
          "flow",
          false
        ],
        [
          694,
          "league",
          699,
          "val",
          false
        ],
        [
          702,
          "flow",
          700,
          "flow",
          false
        ],
        [
          702,
          "true",
          700,
          "on",
          false
        ],
        [
          702,
          "false",
          700,
          "off",
          false
        ],
        [
          315,
          "flow",
          701,
          "flow",
          false
        ],
        [
          702,
          "false",
          701,
          "reset",
          false
        ],
        [
          704,
          "flow",
          702,
          "flow",
          false
        ],
        [
          704,
          "val",
          702,
          "A",
          false
        ],
        [
          7,
          "flow",
          703,
          "flow",
          false
        ],
        [
          703,
          "flow",
          704,
          "flow",
          false
        ],
        [
          707,
          "flow",
          706,
          "flow",
          false
        ],
        [
          707,
          "text",
          706,
          "text",
          false
        ],
        [
          10212,
          "flow",
          707,
          "flow",
          false
        ],
        [
          681,
          "val",
          707,
          "league",
          true
        ],
        [
          10212,
          "val",
          707,
          "club",
          false
        ],
        [
          684,
          "raceCount",
          707,
          "lcount",
          true
        ],
        [
          685,
          "rcount",
          707,
          "rcount",
          true
        ],
        [
          7,
          "flow",
          708,
          "flow",
          true
        ],
        [
          698,
          "flow",
          709,
          "flow",
          false
        ],
        [
          697,
          "flow",
          709,
          "reset",
          false
        ],
        [
          709,
          "flow",
          710,
          "flow",
          false
        ],
        [
          697,
          "flow",
          710,
          "reset",
          false
        ],
        [
          708,
          "flow",
          711,
          "flow",
          false
        ],
        [
          697,
          "flow",
          711,
          "on",
          false
        ],
        [
          713,
          "flow",
          711,
          "off",
          false
        ],
        [
          710,
          "flow",
          712,
          "flow",
          false
        ],
        [
          698,
          "integrityData",
          712,
          "iteg",
          false
        ],
        [
          192,
          "ifile",
          712,
          "file",
          false
        ],
        [
          708,
          "flow",
          713,
          "flow",
          false
        ],
        [
          193,
          "down",
          713,
          "reset",
          false
        ],
        [
          708,
          "flow",
          714,
          "flow",
          false
        ],
        [
          712,
          "flow",
          714,
          "on",
          false
        ],
        [
          714,
          "flow",
          715,
          "flow",
          false
        ],
        [
          712,
          "flow",
          715,
          "reset",
          false
        ],
        [
          715,
          "flow",
          716,
          "flow",
          false
        ],
        [
          712,
          "flow",
          716,
          "reset",
          false
        ],
        [
          591,
          "true",
          717,
          "on",
          true
        ],
        [
          591,
          "false",
          717,
          "off",
          true
        ],
        [
          591,
          "flow",
          718,
          "flow",
          false
        ],
        [
          591,
          "value",
          718,
          "flag",
          false
        ],
        [
          589,
          "flow",
          719,
          "flow",
          false
        ],
        [
          589,
          "val",
          719,
          "num",
          false
        ],
        [
          718,
          "flow",
          720,
          "flow",
          false
        ],
        [
          591,
          "value",
          720,
          "val",
          false
        ],
        [
          421,
          "flow",
          721,
          "flow",
          false
        ],
        [
          7,
          "enterState",
          722,
          "flow",
          true
        ],
        [
          722,
          "flow",
          723,
          "flow",
          false
        ],
        [
          722,
          "file",
          723,
          "filename",
          false
        ],
        [
          723,
          "flow",
          724,
          "flow",
          false
        ],
        [
          723,
          "output",
          724,
          "markers",
          false
        ],
        [
          532,
          "flow",
          725,
          "flow",
          false
        ],
        [
          532,
          "output",
          725,
          "data",
          false
        ],
        [
          725,
          "flow",
          726,
          "flow",
          false
        ],
        [
          670,
          "vehId",
          726,
          "veid",
          false
        ],
        [
          725,
          "ifile",
          726,
          "file",
          false
        ],
        [
          726,
          "flow",
          727,
          "flow",
          false
        ],
        [
          727,
          "flow",
          728,
          "flow",
          false
        ],
        [
          670,
          "vehId",
          728,
          "veid",
          false
        ],
        [
          727,
          "val",
          728,
          "odo",
          false
        ],
        [
          728,
          "flow",
          729,
          "flow",
          false
        ],
        [
          725,
          "config",
          729,
          "filename",
          false
        ],
        [
          729,
          "flow",
          730,
          "flow",
          false
        ],
        [
          415,
          "True",
          731,
          "flow",
          false
        ],
        [
          415,
          "True",
          732,
          "flow",
          false
        ],
        [
          331,
          "val",
          732,
          "money",
          false
        ],
        [
          735,
          "True",
          733,
          "flow",
          false
        ],
        [
          673,
          "flow",
          734,
          "flow",
          false
        ],
        [
          734,
          "flow",
          735,
          "flow",
          false
        ],
        [
          734,
          "flag",
          735,
          "condition",
          false
        ],
        [
          735,
          "True",
          736,
          "flow",
          false
        ],
        [
          836,
          "flow",
          737,
          "flow",
          false
        ],
        [
          836,
          "extras",
          737,
          "val",
          false
        ],
        [
          739,
          "flow",
          738,
          "flow",
          false
        ],
        [
          739,
          "val",
          738,
          "filename",
          false
        ],
        [
          856,
          "flow",
          739,
          "flow",
          false
        ],
        [
          738,
          "flow",
          740,
          "flow",
          false
        ],
        [
          738,
          "output",
          740,
          "tdata",
          false
        ],
        [
          687,
          "flow",
          741,
          "flow",
          false
        ],
        [
          687,
          "output",
          741,
          "dtable",
          false
        ],
        [
          219,
          "flow",
          742,
          "flow",
          false
        ],
        [
          219,
          "flag",
          742,
          "val",
          false
        ],
        [
          7,
          "enterState",
          744,
          "flow",
          false
        ],
        [
          743,
          "vehId",
          744,
          "vehid",
          false
        ],
        [
          742,
          "flow",
          745,
          "flow",
          false
        ],
        [
          745,
          "flow",
          746,
          "flow",
          false
        ],
        [
          742,
          "num",
          746,
          "A",
          false
        ],
        [
          745,
          "val",
          746,
          "B",
          false
        ],
        [
          746,
          "false",
          747,
          "flow",
          false
        ],
        [
          219,
          "flag",
          747,
          "val",
          false
        ],
        [
          471,
          "flow",
          748,
          "flow",
          false
        ],
        [
          743,
          "vehId",
          748,
          "vehId",
          false
        ],
        [
          748,
          "flow",
          749,
          "flow",
          false
        ],
        [
          748,
          "position",
          749,
          "pos",
          false
        ],
        [
          748,
          "rotation",
          749,
          "rot",
          false
        ],
        [
          576,
          "flow",
          750,
          "flow",
          false
        ],
        [
          323,
          "flow",
          752,
          "flow",
          false
        ],
        [
          750,
          "flow",
          752,
          "on",
          false
        ],
        [
          10215,
          "flow",
          753,
          "flow",
          false
        ],
        [
          10215,
          "val",
          753,
          "val",
          false
        ],
        [
          656,
          "true",
          754,
          "flow",
          false
        ],
        [
          753,
          "flow",
          755,
          "flow",
          false
        ],
        [
          129,
          "walking",
          755,
          "val",
          false
        ],
        [
          754,
          "flow",
          756,
          "flow",
          false
        ],
        [
          754,
          "val",
          756,
          "X",
          false
        ],
        [
          655,
          "val",
          756,
          "DX",
          false
        ],
        [
          10217,
          "true",
          757,
          "flow",
          false
        ],
        [
          202,
          "vehId",
          757,
          "veid",
          true
        ],
        [
          10218,
          "true",
          758,
          "flow",
          false
        ],
        [
          305,
          "vehId",
          758,
          "vehId",
          true
        ],
        [
          10220,
          "flow",
          759,
          "flow",
          false
        ],
        [
          10220,
          "val",
          759,
          "A",
          false
        ],
        [
          789,
          "flow",
          760,
          "flow",
          false
        ],
        [
          756,
          "Y",
          760,
          "reputation",
          false
        ],
        [
          27,
          "down",
          761,
          "flow",
          true
        ],
        [
          763,
          "true",
          762,
          "flow",
          false
        ],
        [
          497,
          "flow",
          762,
          "reset",
          false
        ],
        [
          202,
          "vehId",
          762,
          "vehId",
          true
        ],
        [
          757,
          "flow",
          763,
          "flow",
          false
        ],
        [
          757,
          "damage",
          763,
          "A",
          false
        ],
        [
          509,
          "flow",
          764,
          "flow",
          false
        ],
        [
          276,
          "flow",
          764,
          "on",
          false
        ],
        [
          680,
          "True",
          765,
          "flow",
          false
        ],
        [
          764,
          "flow",
          766,
          "flow",
          false
        ],
        [
          276,
          "flow",
          766,
          "reset",
          false
        ],
        [
          766,
          "flow",
          767,
          "flow",
          false
        ],
        [
          276,
          "flow",
          767,
          "reset",
          false
        ],
        [
          656,
          "false",
          768,
          "flow",
          false
        ],
        [
          760,
          "flow",
          768,
          "flow",
          false
        ],
        [
          772,
          "flow",
          769,
          "flow",
          false
        ],
        [
          295,
          "damage",
          769,
          "A",
          true
        ],
        [
          769,
          "true",
          770,
          "flow",
          false
        ],
        [
          305,
          "vehId",
          770,
          "veid",
          true
        ],
        [
          10219,
          "flow",
          771,
          "flow",
          false
        ],
        [
          771,
          "flow",
          772,
          "flow",
          false
        ],
        [
          269,
          "false",
          773,
          "flow",
          false
        ],
        [
          10022,
          "flow",
          773,
          "flow",
          false
        ],
        [
          10141,
          "False",
          773,
          "reset",
          false
        ],
        [
          342,
          "veid",
          773,
          "aiVehId",
          true
        ],
        [
          761,
          "flow",
          774,
          "flow",
          false
        ],
        [
          761,
          "val",
          774,
          "filename",
          false
        ],
        [
          774,
          "flow",
          775,
          "flow",
          false
        ],
        [
          774,
          "output",
          775,
          "data",
          false
        ],
        [
          174,
          "flow",
          776,
          "flow",
          false
        ],
        [
          632,
          "flow",
          777,
          "flow",
          false
        ],
        [
          597,
          "flow",
          777,
          "on",
          false
        ],
        [
          778,
          "flow",
          777,
          "off",
          false
        ],
        [
          632,
          "flow",
          778,
          "flow",
          false
        ],
        [
          597,
          "flow",
          778,
          "reset",
          false
        ],
        [
          9915,
          "flow",
          780,
          "flow",
          false
        ],
        [
          601,
          "flow",
          781,
          "flow",
          false
        ],
        [
          9909,
          "flow",
          782,
          "flow",
          false
        ],
        [
          9909,
          "filename",
          782,
          "filename",
          false
        ],
        [
          222,
          "flow",
          783,
          "flow",
          false
        ],
        [
          222,
          "filename",
          783,
          "filename",
          false
        ],
        [
          288,
          "flow",
          784,
          "flow",
          false
        ],
        [
          288,
          "filename",
          784,
          "filename",
          false
        ],
        [
          309,
          "flow",
          785,
          "flow",
          false
        ],
        [
          159,
          "value",
          785,
          "filename",
          false
        ],
        [
          787,
          "flow",
          786,
          "flow",
          false
        ],
        [
          65,
          "flow",
          786,
          "reset",
          false
        ],
        [
          137,
          "flow",
          787,
          "flow",
          false
        ],
        [
          167,
          "true",
          787,
          "on",
          false
        ],
        [
          210,
          "down",
          787,
          "off",
          false
        ],
        [
          768,
          "flow",
          788,
          "flow",
          false
        ],
        [
          768,
          "val",
          788,
          "parts",
          false
        ],
        [
          756,
          "flow",
          789,
          "flow",
          false
        ],
        [
          756,
          "Y",
          789,
          "val",
          false
        ],
        [
          137,
          "flow",
          791,
          "flow",
          false
        ],
        [
          137,
          "vehId",
          791,
          "A",
          false
        ],
        [
          790,
          "vehId",
          791,
          "B",
          false
        ],
        [
          461,
          "enter",
          794,
          "flow",
          false
        ],
        [
          461,
          "vehId",
          794,
          "A",
          false
        ],
        [
          797,
          "vehId",
          794,
          "B",
          false
        ],
        [
          796,
          "flow",
          795,
          "flow",
          false
        ],
        [
          796,
          "outTime",
          795,
          "value",
          false
        ],
        [
          7,
          "flow",
          796,
          "flow",
          false
        ],
        [
          793,
          "time",
          796,
          "inTime",
          false
        ],
        [
          806,
          "True",
          798,
          "flow",
          false
        ],
        [
          815,
          "flow",
          798,
          "flow",
          false
        ],
        [
          7,
          "flow",
          799,
          "flow",
          false
        ],
        [
          801,
          "flow",
          800,
          "flow",
          false
        ],
        [
          531,
          "finished",
          800,
          "condition",
          false
        ],
        [
          531,
          "flow",
          801,
          "flow",
          false
        ],
        [
          531,
          "nextcp",
          801,
          "val",
          false
        ],
        [
          800,
          "False",
          802,
          "flow",
          false
        ],
        [
          531,
          "nexttrigid",
          802,
          "newPin",
          false
        ],
        [
          807,
          "true",
          803,
          "flow",
          false
        ],
        [
          800,
          "True",
          803,
          "reset",
          false
        ],
        [
          843,
          "down",
          803,
          "reset",
          false
        ],
        [
          10245,
          "down",
          803,
          "reset",
          false
        ],
        [
          802,
          "pos",
          803,
          "position",
          false
        ],
        [
          799,
          "flow",
          804,
          "flow",
          false
        ],
        [
          800,
          "True",
          804,
          "on",
          false
        ],
        [
          804,
          "flow",
          805,
          "flow",
          false
        ],
        [
          812,
          "flow",
          805,
          "reset",
          false
        ],
        [
          794,
          "flow",
          806,
          "flow",
          false
        ],
        [
          794,
          "value",
          806,
          "condition",
          false
        ],
        [
          10244,
          "flow",
          807,
          "flow",
          false
        ],
        [
          10244,
          "val",
          807,
          "A",
          false
        ],
        [
          842,
          "flow",
          808,
          "flow",
          false
        ],
        [
          531,
          "finished",
          808,
          "condition",
          false
        ],
        [
          802,
          "flow",
          809,
          "flow",
          false
        ],
        [
          531,
          "cpsound",
          809,
          "condition",
          false
        ],
        [
          799,
          "flow",
          810,
          "flow",
          false
        ],
        [
          810,
          "flow",
          811,
          "flow",
          false
        ],
        [
          810,
          "val",
          811,
          "A",
          false
        ],
        [
          800,
          "True",
          812,
          "flow",
          false
        ],
        [
          843,
          "down",
          812,
          "reset",
          false
        ],
        [
          10245,
          "down",
          812,
          "reset",
          false
        ],
        [
          10255,
          "flow",
          813,
          "flow",
          false
        ],
        [
          813,
          "flow",
          814,
          "flow",
          false
        ],
        [
          813,
          "val",
          814,
          "X",
          false
        ],
        [
          829,
          "wager",
          814,
          "DX",
          false
        ],
        [
          814,
          "flow",
          815,
          "flow",
          false
        ],
        [
          814,
          "Y",
          815,
          "val",
          false
        ],
        [
          10245,
          "down",
          816,
          "flow",
          false
        ],
        [
          818,
          "flow",
          817,
          "flow",
          false
        ],
        [
          818,
          "w",
          817,
          "width",
          false
        ],
        [
          818,
          "h",
          817,
          "height",
          false
        ],
        [
          818,
          "x",
          817,
          "posX",
          false
        ],
        [
          818,
          "y",
          817,
          "posY",
          false
        ],
        [
          118,
          "h",
          818,
          "flow",
          true
        ],
        [
          407,
          "output",
          818,
          "data",
          false
        ],
        [
          10250,
          "flow",
          819,
          "flow",
          false
        ],
        [
          816,
          "val",
          819,
          "X",
          false
        ],
        [
          829,
          "wager",
          819,
          "DX",
          false
        ],
        [
          821,
          "flow",
          820,
          "flow",
          false
        ],
        [
          821,
          "val",
          820,
          "value",
          false
        ],
        [
          817,
          "flow",
          821,
          "flow",
          false
        ],
        [
          820,
          "match_1",
          822,
          "flow",
          false
        ],
        [
          10232,
          "flow",
          823,
          "flow",
          false
        ],
        [
          10245,
          "flow",
          823,
          "flow",
          false
        ],
        [
          843,
          "flow",
          823,
          "flow",
          false
        ],
        [
          822,
          "flow",
          823,
          "flow",
          false
        ],
        [
          820,
          "match_2",
          824,
          "flow",
          false
        ],
        [
          829,
          "infotxt",
          824,
          "text",
          false
        ],
        [
          840,
          "true",
          825,
          "flow",
          false
        ],
        [
          827,
          "flow",
          826,
          "flow",
          false
        ],
        [
          827,
          "val",
          826,
          "filename",
          false
        ],
        [
          822,
          "down",
          827,
          "flow",
          false
        ],
        [
          826,
          "flow",
          828,
          "flow",
          false
        ],
        [
          826,
          "output",
          828,
          "data",
          false
        ],
        [
          832,
          "flow",
          829,
          "flow",
          false
        ],
        [
          828,
          "cfiles",
          829,
          "cfiles",
          false
        ],
        [
          832,
          "random",
          829,
          "pick",
          false
        ],
        [
          865,
          "flow",
          830,
          "flow",
          false
        ],
        [
          865,
          "flag",
          830,
          "condition",
          false
        ],
        [
          825,
          "down",
          831,
          "flow",
          false
        ],
        [
          828,
          "flow",
          832,
          "flow",
          false
        ],
        [
          828,
          "count",
          832,
          "rangeEnd",
          false
        ],
        [
          7,
          "enterState",
          834,
          "flow",
          false
        ],
        [
          834,
          "flow",
          835,
          "flow",
          false
        ],
        [
          834,
          "file",
          835,
          "filename",
          false
        ],
        [
          427,
          "flow",
          836,
          "flow",
          false
        ],
        [
          721,
          "val",
          836,
          "name",
          false
        ],
        [
          835,
          "output",
          836,
          "tdata",
          true
        ],
        [
          10252,
          "flow",
          837,
          "flow",
          false
        ],
        [
          10251,
          "Y",
          837,
          "val",
          false
        ],
        [
          800,
          "True",
          838,
          "flow",
          false
        ],
        [
          824,
          "flow",
          839,
          "flow",
          false
        ],
        [
          839,
          "flow",
          840,
          "flow",
          false
        ],
        [
          839,
          "val",
          840,
          "A",
          false
        ],
        [
          829,
          "wager",
          840,
          "B",
          false
        ],
        [
          829,
          "flow",
          841,
          "flow",
          false
        ],
        [
          820,
          "match_3",
          842,
          "flow",
          false
        ],
        [
          829,
          "infotxt",
          842,
          "text",
          false
        ],
        [
          808,
          "False",
          843,
          "flow",
          false
        ],
        [
          10237,
          "flow",
          844,
          "flow",
          false
        ],
        [
          10236,
          "val",
          844,
          "mstatus",
          true
        ],
        [
          487,
          "val",
          844,
          "rstatus",
          true
        ],
        [
          10237,
          "val",
          844,
          "cstatus",
          true
        ],
        [
          844,
          "mflow_not",
          845,
          "flow_1",
          false
        ],
        [
          844,
          "rflow_not",
          845,
          "flow_2",
          false
        ],
        [
          7,
          "enterState",
          846,
          "flow",
          false
        ],
        [
          193,
          "down",
          847,
          "flow",
          false
        ],
        [
          411,
          "flow",
          848,
          "flow",
          false
        ],
        [
          7,
          "enterState",
          849,
          "flow",
          false
        ],
        [
          107,
          "down",
          850,
          "flow",
          false
        ],
        [
          213,
          "flow",
          851,
          "flow",
          false
        ],
        [
          126,
          "down",
          852,
          "flow",
          false
        ],
        [
          906,
          "flow",
          853,
          "flow",
          false
        ],
        [
          871,
          "flow",
          854,
          "flow",
          false
        ],
        [
          870,
          "False",
          854,
          "clear",
          false
        ],
        [
          871,
          "val",
          854,
          "target",
          false
        ],
        [
          857,
          "flow",
          855,
          "flow",
          false
        ],
        [
          852,
          "flow",
          855,
          "reset",
          false
        ],
        [
          855,
          "flow",
          856,
          "flow",
          false
        ],
        [
          852,
          "flow",
          856,
          "reset",
          false
        ],
        [
          1118,
          "flow",
          857,
          "flow",
          true
        ],
        [
          852,
          "flow",
          857,
          "on",
          false
        ],
        [
          852,
          "flow",
          858,
          "flow",
          false
        ],
        [
          553,
          "down",
          859,
          "flow",
          false
        ],
        [
          623,
          "flow",
          860,
          "flow",
          false
        ],
        [
          862,
          "vehId",
          861,
          "vehId",
          false
        ],
        [
          861,
          "flow",
          863,
          "flow",
          false
        ],
        [
          861,
          "drifting",
          863,
          "drifting",
          false
        ],
        [
          861,
          "tapped",
          863,
          "tapped",
          false
        ],
        [
          861,
          "crashed",
          863,
          "crashed",
          false
        ],
        [
          861,
          "closestWallDistance",
          863,
          "walldist",
          false
        ],
        [
          861,
          "driftAngle",
          863,
          "angle",
          false
        ],
        [
          7,
          "flow",
          865,
          "flow",
          true
        ],
        [
          865,
          "flow",
          866,
          "flow",
          false
        ],
        [
          843,
          "down",
          867,
          "flow",
          false
        ],
        [
          812,
          "flow",
          867,
          "flow",
          false
        ],
        [
          869,
          "flow",
          868,
          "flow",
          false
        ],
        [
          866,
          "val",
          868,
          "A",
          false
        ],
        [
          869,
          "num",
          868,
          "B",
          false
        ],
        [
          866,
          "flow",
          869,
          "flow",
          false
        ],
        [
          865,
          "flag",
          869,
          "val",
          false
        ],
        [
          868,
          "false",
          870,
          "flow",
          false
        ],
        [
          865,
          "flag",
          870,
          "condition",
          false
        ],
        [
          830,
          "True",
          871,
          "flow",
          false
        ],
        [
          5008,
          "down",
          872,
          "flow",
          false
        ],
        [
          177,
          "down",
          873,
          "flow",
          false
        ],
        [
          206,
          "down",
          873,
          "flow",
          false
        ],
        [
          104,
          "flow",
          874,
          "flow",
          false
        ],
        [
          1131,
          "down",
          874,
          "reset",
          true
        ],
        [
          171,
          "down",
          874,
          "reset",
          true
        ],
        [
          126,
          "down",
          874,
          "reset",
          true
        ],
        [
          876,
          "flow",
          875,
          "flow",
          false
        ],
        [
          653,
          "flow",
          876,
          "flow",
          false
        ],
        [
          10116,
          "flow",
          876,
          "on",
          false
        ],
        [
          591,
          "false",
          876,
          "off",
          false
        ],
        [
          10259,
          "loaded",
          877,
          "flow",
          false
        ],
        [
          591,
          "false",
          877,
          "reset",
          false
        ],
        [
          10259,
          "vehicleIds",
          877,
          "data",
          false
        ],
        [
          888,
          "flow",
          878,
          "flow",
          false
        ],
        [
          888,
          "output",
          878,
          "data",
          false
        ],
        [
          878,
          "flow",
          879,
          "flow",
          false
        ],
        [
          332,
          "vehId",
          879,
          "veid",
          false
        ],
        [
          878,
          "bsfile",
          879,
          "filename",
          false
        ],
        [
          883,
          "flow",
          880,
          "flow",
          false
        ],
        [
          332,
          "vehId",
          880,
          "veid",
          false
        ],
        [
          883,
          "devices",
          880,
          "devices",
          false
        ],
        [
          879,
          "flow",
          881,
          "flow",
          false
        ],
        [
          880,
          "damageData",
          881,
          "dmg",
          false
        ],
        [
          878,
          "mfile",
          881,
          "file",
          false
        ],
        [
          669,
          "flow",
          882,
          "flow",
          false
        ],
        [
          670,
          "vehId",
          882,
          "veid",
          false
        ],
        [
          364,
          "val",
          882,
          "gid",
          false
        ],
        [
          541,
          "flow",
          883,
          "flow",
          false
        ],
        [
          885,
          "flow",
          884,
          "flow",
          false
        ],
        [
          332,
          "vehId",
          884,
          "veid",
          false
        ],
        [
          885,
          "devices",
          884,
          "devices",
          false
        ],
        [
          880,
          "flow",
          885,
          "flow",
          false
        ],
        [
          881,
          "flow",
          886,
          "flow",
          false
        ],
        [
          884,
          "integrityData",
          886,
          "iteg",
          false
        ],
        [
          878,
          "ifile",
          886,
          "file",
          false
        ],
        [
          891,
          "flow",
          887,
          "flow",
          false
        ],
        [
          891,
          "val",
          887,
          "carid",
          false
        ],
        [
          887,
          "flow",
          888,
          "flow",
          false
        ],
        [
          887,
          "filename",
          888,
          "filename",
          false
        ],
        [
          890,
          "flow",
          889,
          "flow",
          false
        ],
        [
          887,
          "filename",
          889,
          "filename",
          false
        ],
        [
          890,
          "output",
          889,
          "data",
          false
        ],
        [
          886,
          "flow",
          890,
          "flow",
          false
        ],
        [
          888,
          "output",
          890,
          "current",
          false
        ],
        [
          72,
          "gasVal",
          890,
          "gas",
          false
        ],
        [
          320,
          "damage",
          890,
          "damage",
          false
        ],
        [
          541,
          "completed",
          891,
          "flow",
          false
        ],
        [
          10085,
          "flow",
          892,
          "flow",
          false
        ],
        [
          361,
          "flow",
          892,
          "reset",
          false
        ],
        [
          894,
          "flow",
          893,
          "flow",
          false
        ],
        [
          894,
          "output",
          893,
          "data",
          false
        ],
        [
          10085,
          "flow",
          894,
          "flow",
          false
        ],
        [
          887,
          "filename",
          894,
          "filename",
          false
        ],
        [
          893,
          "flow",
          895,
          "flow",
          false
        ],
        [
          332,
          "vehId",
          895,
          "vehId",
          false
        ],
        [
          895,
          "flow",
          896,
          "flow",
          false
        ],
        [
          893,
          "damage",
          896,
          "A",
          false
        ],
        [
          895,
          "damage",
          896,
          "B",
          false
        ],
        [
          898,
          "flow",
          897,
          "flow",
          false
        ],
        [
          332,
          "vehId",
          897,
          "veid",
          false
        ],
        [
          878,
          "bsfile",
          897,
          "filename",
          false
        ],
        [
          908,
          "flow",
          898,
          "flow",
          false
        ],
        [
          361,
          "flow",
          898,
          "reset",
          false
        ],
        [
          897,
          "flow",
          899,
          "flow",
          false
        ],
        [
          332,
          "vehId",
          899,
          "vid",
          false
        ],
        [
          878,
          "mfile",
          899,
          "file",
          false
        ],
        [
          899,
          "flow",
          900,
          "flow",
          false
        ],
        [
          332,
          "vehId",
          900,
          "veid",
          false
        ],
        [
          878,
          "ifile",
          900,
          "file",
          false
        ],
        [
          900,
          "flow",
          902,
          "flow",
          false
        ],
        [
          332,
          "vehId",
          902,
          "veid",
          false
        ],
        [
          893,
          "gas",
          902,
          "gas",
          false
        ],
        [
          902,
          "flow",
          903,
          "flow",
          false
        ],
        [
          332,
          "vehId",
          903,
          "veid",
          false
        ],
        [
          891,
          "val",
          903,
          "gid",
          false
        ],
        [
          132,
          "flow",
          906,
          "flow",
          false
        ],
        [
          355,
          "spawnids",
          906,
          "idtable",
          false
        ],
        [
          898,
          "flow",
          907,
          "flow",
          false
        ],
        [
          896,
          "true",
          908,
          "flow",
          false
        ],
        [
          361,
          "flow",
          908,
          "on",
          false
        ],
        [
          892,
          "flow",
          908,
          "off",
          false
        ],
        [
          520,
          "flow",
          917,
          "flow",
          false
        ],
        [
          516,
          "veid",
          917,
          "veid",
          false
        ],
        [
          295,
          "bsfile",
          917,
          "filename",
          false
        ],
        [
          836,
          "flow",
          1112,
          "flow",
          false
        ],
        [
          836,
          "typeName",
          1112,
          "value",
          false
        ],
        [
          335,
          "flow",
          1114,
          "flow",
          false
        ],
        [
          1115,
          "value",
          1114,
          "text",
          false
        ],
        [
          1114,
          "down",
          1116,
          "flow",
          false
        ],
        [
          1117,
          "value",
          1116,
          "message",
          false
        ],
        [
          89,
          "flow",
          1118,
          "flow",
          false
        ],
        [
          68,
          "flow",
          1120,
          "flow",
          false
        ],
        [
          68,
          "carCount",
          1120,
          "val",
          false
        ],
        [
          1118,
          "flow",
          1121,
          "flow",
          true
        ],
        [
          10235,
          "flow",
          1122,
          "flow_1",
          false
        ],
        [
          1112,
          "match_2",
          1122,
          "flow_2",
          false
        ],
        [
          365,
          "down",
          1123,
          "flow",
          false
        ],
        [
          1116,
          "flow",
          1125,
          "flow",
          false
        ],
        [
          56,
          "vehId",
          1125,
          "veid",
          false
        ],
        [
          1126,
          "value",
          1125,
          "gas",
          false
        ],
        [
          146,
          "down",
          1130,
          "flow",
          false
        ],
        [
          255,
          "true",
          1131,
          "flow",
          false
        ],
        [
          10057,
          "flow",
          1134,
          "flow",
          false
        ],
        [
          15,
          "flow",
          10194,
          "flow",
          false
        ],
        [
          15,
          "val",
          10194,
          "val",
          false
        ],
        [
          624,
          "true",
          10130,
          "flow",
          false
        ],
        [
          10191,
          "flow",
          4986,
          "flow",
          false
        ],
        [
          10191,
          "typeName",
          4986,
          "value",
          false
        ],
        [
          464,
          "finished",
          10066,
          "flow",
          false
        ],
        [
          566,
          "output",
          10066,
          "vehId",
          false
        ],
        [
          10202,
          "flow",
          10227,
          "flow",
          false
        ],
        [
          10068,
          "flow",
          10163,
          "flow",
          false
        ],
        [
          10098,
          "flow",
          10099,
          "flow",
          false
        ],
        [
          275,
          "scrapVal",
          10099,
          "val",
          false
        ],
        [
          10030,
          "flow",
          10035,
          "flow",
          false
        ],
        [
          741,
          "flow",
          10196,
          "flow",
          false
        ],
        [
          741,
          "league",
          10196,
          "val",
          false
        ],
        [
          630,
          "flow",
          10132,
          "flow",
          false
        ],
        [
          601,
          "filename",
          10132,
          "file",
          false
        ],
        [
          72,
          "gasVal",
          10132,
          "tval",
          true
        ],
        [
          456,
          "flow",
          10068,
          "flow",
          false
        ],
        [
          298,
          "flow",
          10004,
          "flow",
          false
        ],
        [
          10230,
          "flow",
          10229,
          "flow",
          false
        ],
        [
          275,
          "parts",
          10229,
          "val",
          false
        ],
        [
          652,
          "ftrig",
          10165,
          "name",
          false
        ],
        [
          9875,
          "flow",
          9876,
          "flow",
          false
        ],
        [
          10043,
          "flow",
          10101,
          "flow",
          false
        ],
        [
          243,
          "flow",
          10037,
          "flow",
          false
        ],
        [
          243,
          "Y",
          10037,
          "X",
          false
        ],
        [
          10029,
          "val",
          10037,
          "DX",
          false
        ],
        [
          10197,
          "flow",
          10198,
          "flow",
          false
        ],
        [
          241,
          "opSpawnPos",
          10198,
          "val",
          false
        ],
        [
          180,
          "true",
          9909,
          "flow",
          false
        ],
        [
          106,
          "val",
          9909,
          "id",
          false
        ],
        [
          10133,
          "flow",
          10134,
          "flow",
          false
        ],
        [
          275,
          "triggers",
          10134,
          "val",
          false
        ],
        [
          9,
          "flow",
          4988,
          "flow",
          false
        ],
        [
          185,
          "flow",
          10006,
          "flow",
          false
        ],
        [
          68,
          "flow",
          10231,
          "flow",
          false
        ],
        [
          68,
          "reputation",
          10231,
          "val",
          false
        ],
        [
          10137,
          "flow",
          10167,
          "flow",
          false
        ],
        [
          10038,
          "flow",
          10039,
          "flow",
          false
        ],
        [
          275,
          "opConfig",
          10039,
          "val",
          false
        ],
        [
          10199,
          "flow",
          10200,
          "flow",
          false
        ],
        [
          241,
          "playerStart",
          10200,
          "val",
          false
        ],
        [
          1134,
          "flow",
          4024,
          "flow",
          false
        ],
        [
          10235,
          "flow",
          10008,
          "flow_1",
          false
        ],
        [
          844,
          "rflow",
          10008,
          "flow_1",
          false
        ],
        [
          844,
          "rflow",
          10008,
          "flow_2",
          false
        ],
        [
          1112,
          "match_6",
          10008,
          "flow_2",
          false
        ],
        [
          10232,
          "down",
          10233,
          "flow",
          false
        ],
        [
          10024,
          "flow",
          10169,
          "flow",
          false
        ],
        [
          157,
          "flow",
          9880,
          "flow",
          false
        ],
        [
          157,
          "flow",
          9880,
          "flow",
          false
        ],
        [
          157,
          "reward",
          9880,
          "val",
          false
        ],
        [
          10035,
          "flow",
          10105,
          "flow",
          false
        ],
        [
          339,
          "flow",
          10041,
          "flow",
          false
        ],
        [
          10201,
          "flow",
          10202,
          "flow",
          false
        ],
        [
          303,
          "flow",
          9913,
          "flow",
          false
        ],
        [
          303,
          "val",
          9913,
          "id",
          false
        ],
        [
          441,
          "match_2",
          10138,
          "flow",
          false
        ],
        [
          10073,
          "flow",
          10074,
          "flow",
          false
        ],
        [
          478,
          "vehId",
          10074,
          "veid",
          false
        ],
        [
          845,
          "flow",
          10235,
          "flow_1",
          false
        ],
        [
          844,
          "cflow_not",
          10235,
          "flow_2",
          false
        ],
        [
          10170,
          "flow",
          10171,
          "flow",
          false
        ],
        [
          10170,
          "val",
          10171,
          "A",
          false
        ],
        [
          208,
          "flow",
          9882,
          "flow",
          false
        ],
        [
          204,
          "True",
          10107,
          "flow",
          false
        ],
        [
          204,
          "False",
          10107,
          "flow",
          false
        ],
        [
          457,
          "slips",
          10107,
          "condition",
          false
        ],
        [
          10042,
          "flow",
          10043,
          "flow",
          false
        ],
        [
          10102,
          "flow",
          10204,
          "flow",
          false
        ],
        [
          9914,
          "flow",
          9915,
          "flow",
          false
        ],
        [
          9914,
          "output",
          9915,
          "data",
          false
        ],
        [
          10151,
          "flow",
          10140,
          "flow",
          false
        ],
        [
          275,
          "cpcount",
          10140,
          "cpc",
          true
        ],
        [
          275,
          "triggers",
          10140,
          "trigs",
          true
        ],
        [
          275,
          "wayps",
          10140,
          "wps",
          true
        ],
        [
          10150,
          "val",
          10140,
          "current",
          false
        ],
        [
          10151,
          "val",
          10140,
          "clap",
          false
        ],
        [
          275,
          "laps",
          10140,
          "laps",
          true
        ],
        [
          1118,
          "flow",
          10076,
          "flow",
          true
        ],
        [
          10011,
          "down",
          10012,
          "flow",
          false
        ],
        [
          10236,
          "flow",
          10237,
          "flow",
          false
        ],
        [
          671,
          "flow",
          10173,
          "flow",
          false
        ],
        [
          229,
          "totalCost",
          10173,
          "val",
          true
        ],
        [
          221,
          "flow",
          9884,
          "flow",
          false
        ],
        [
          10111,
          "flow",
          10109,
          "flow",
          false
        ],
        [
          197,
          "Y",
          10109,
          "carCount",
          false
        ],
        [
          281,
          "exit",
          10045,
          "flow",
          false
        ],
        [
          281,
          "vehId",
          10045,
          "A",
          false
        ],
        [
          280,
          "vehId",
          10045,
          "B",
          false
        ],
        [
          10200,
          "flow",
          10206,
          "flow",
          false
        ],
        [
          241,
          "pstrigger",
          10206,
          "val",
          false
        ],
        [
          9927,
          "flow",
          9917,
          "flow",
          false
        ],
        [
          248,
          "pos",
          9917,
          "pos",
          false
        ],
        [
          627,
          "False",
          10142,
          "flow",
          false
        ],
        [
          652,
          "nextId",
          10142,
          "val",
          false
        ],
        [
          68,
          "flow",
          10078,
          "flow",
          false
        ],
        [
          68,
          "health",
          10078,
          "val",
          false
        ],
        [
          186,
          "True",
          10014,
          "flow",
          false
        ],
        [
          10031,
          "flow",
          10014,
          "flow",
          false
        ],
        [
          825,
          "down",
          10239,
          "flow",
          false
        ],
        [
          10108,
          "flow",
          10111,
          "flow",
          false
        ],
        [
          52,
          "flow",
          10047,
          "flow",
          true
        ],
        [
          354,
          "flow",
          10047,
          "on",
          false
        ],
        [
          10048,
          "flow",
          10047,
          "off",
          false
        ],
        [
          10143,
          "flow",
          10144,
          "flow",
          false
        ],
        [
          652,
          "newLap",
          10144,
          "val",
          false
        ],
        [
          480,
          "flow",
          10080,
          "flow",
          false
        ],
        [
          10017,
          "down",
          10016,
          "flow",
          false
        ],
        [
          344,
          "flow",
          10177,
          "flow",
          false
        ],
        [
          344,
          "flow",
          10049,
          "flow",
          false
        ],
        [
          9910,
          "vehId",
          10049,
          "veid",
          false
        ],
        [
          344,
          "devices",
          10049,
          "devices",
          false
        ],
        [
          345,
          "value",
          10049,
          "uid",
          false
        ],
        [
          10209,
          "flow",
          10210,
          "flow",
          false
        ],
        [
          10209,
          "typeName",
          10210,
          "value",
          false
        ],
        [
          10145,
          "flow",
          10146,
          "flow",
          false
        ],
        [
          10149,
          "objID",
          10146,
          "val",
          false
        ],
        [
          24,
          "down",
          4993,
          "flow",
          false
        ],
        [
          536,
          "completed",
          10082,
          "flow",
          false
        ],
        [
          538,
          "vehId",
          10082,
          "vehId",
          true
        ],
        [
          10054,
          "flow",
          10179,
          "flow",
          false
        ],
        [
          688,
          "integrityData",
          10179,
          "iteg",
          false
        ],
        [
          9915,
          "ifile",
          10179,
          "file",
          true
        ],
        [
          377,
          "match_1",
          10212,
          "flow",
          false
        ],
        [
          10147,
          "flow",
          10148,
          "flow",
          false
        ],
        [
          10140,
          "nextWp",
          10148,
          "val",
          true
        ],
        [
          7,
          "flow",
          4994,
          "flow",
          true
        ],
        [
          544,
          "completed",
          10084,
          "flow",
          false
        ],
        [
          332,
          "vehId",
          10084,
          "vehId",
          false
        ],
        [
          10104,
          "flow",
          10181,
          "flow",
          false
        ],
        [
          350,
          "flow",
          10053,
          "flow",
          false
        ],
        [
          901,
          "vehId",
          10053,
          "veid",
          false
        ],
        [
          350,
          "devices",
          10053,
          "devices",
          false
        ],
        [
          379,
          "value",
          10053,
          "uid",
          false
        ],
        [
          747,
          "flow",
          10214,
          "flow",
          false
        ],
        [
          742,
          "num",
          10214,
          "val",
          false
        ],
        [
          10139,
          "true",
          10150,
          "flow",
          false
        ],
        [
          435,
          "flow",
          4995,
          "flow",
          false
        ],
        [
          5002,
          "val",
          4995,
          "value",
          false
        ],
        [
          512,
          "true",
          10086,
          "flow",
          false
        ],
        [
          129,
          "walking",
          10086,
          "val",
          false
        ],
        [
          269,
          "true",
          10022,
          "flow",
          false
        ],
        [
          10182,
          "flow",
          10183,
          "flow",
          false
        ],
        [
          614,
          "output",
          10183,
          "veid",
          false
        ],
        [
          10182,
          "devices",
          10183,
          "devices",
          false
        ],
        [
          246,
          "flow",
          10055,
          "flow",
          false
        ],
        [
          9932,
          "flow",
          9991,
          "flow",
          false
        ],
        [
          9932,
          "damageData",
          9991,
          "damageData",
          false
        ],
        [
          9932,
          "ready",
          9991,
          "ready",
          false
        ],
        [
          10000,
          "devices",
          9991,
          "devices",
          false
        ],
        [
          10132,
          "flow",
          10216,
          "flow",
          false
        ],
        [
          601,
          "filename",
          10216,
          "file",
          false
        ],
        [
          781,
          "val",
          10216,
          "tval",
          false
        ],
        [
          248,
          "flow",
          9927,
          "flow",
          false
        ],
        [
          248,
          "rot",
          9927,
          "rot",
          false
        ],
        [
          10135,
          "flow",
          10152,
          "flow",
          false
        ],
        [
          275,
          "cpcount",
          10152,
          "val",
          false
        ],
        [
          520,
          "flow",
          10088,
          "flow",
          false
        ],
        [
          10110,
          "flow",
          10088,
          "flow",
          false
        ],
        [
          68,
          "time",
          10088,
          "time",
          false
        ],
        [
          10015,
          "flow",
          10024,
          "flow",
          false
        ],
        [
          10186,
          "flow",
          10185,
          "flow",
          false
        ],
        [
          342,
          "veid",
          10185,
          "veid",
          false
        ],
        [
          10186,
          "val",
          10185,
          "file",
          false
        ],
        [
          109,
          "down",
          9896,
          "flow",
          false
        ],
        [
          10120,
          "flow",
          10121,
          "flow",
          false
        ],
        [
          567,
          "tkttxt",
          10121,
          "val",
          false
        ],
        [
          404,
          "flow",
          10057,
          "flow",
          false
        ],
        [
          428,
          "output",
          10057,
          "text",
          false
        ],
        [
          770,
          "flow",
          10218,
          "flow",
          false
        ],
        [
          770,
          "damage",
          10218,
          "A",
          false
        ],
        [
          15,
          "flow",
          9929,
          "flow",
          false
        ],
        [
          15,
          "text",
          9929,
          "text",
          false
        ],
        [
          651,
          "flow",
          10154,
          "flow",
          false
        ],
        [
          10089,
          "flow",
          10090,
          "flow",
          false
        ],
        [
          10027,
          "flow",
          10026,
          "flow",
          false
        ],
        [
          275,
          "aiwp",
          10026,
          "val",
          true
        ],
        [
          10188,
          "flow",
          10187,
          "flow",
          false
        ],
        [
          10188,
          "val",
          10187,
          "carid",
          false
        ],
        [
          528,
          "flow",
          10059,
          "flow",
          false
        ],
        [
          528,
          "Y",
          10059,
          "val",
          false
        ],
        [
          250,
          "flowB",
          10220,
          "flow",
          false
        ],
        [
          266,
          "flow",
          9931,
          "flow",
          false
        ],
        [
          266,
          "flow",
          9931,
          "flow",
          false
        ],
        [
          266,
          "output",
          9931,
          "text",
          false
        ],
        [
          10155,
          "flow",
          10156,
          "flow",
          false
        ],
        [
          4995,
          "match_2",
          4998,
          "flow",
          false
        ],
        [
          9870,
          "val",
          4998,
          "text",
          false
        ],
        [
          7,
          "flow",
          10092,
          "flow",
          true
        ],
        [
          808,
          "True",
          10245,
          "flow",
          false
        ],
        [
          720,
          "flow",
          10189,
          "flow",
          false
        ],
        [
          720,
          "num",
          10189,
          "val",
          false
        ],
        [
          623,
          "flow",
          10125,
          "flow",
          false
        ],
        [
          579,
          "flow",
          10125,
          "flow",
          false
        ],
        [
          526,
          "flow",
          10222,
          "flow",
          false
        ],
        [
          275,
          "wayps",
          10222,
          "wplist",
          true
        ],
        [
          10157,
          "flow",
          10158,
          "flow",
          false
        ],
        [
          275,
          "destid",
          10158,
          "val",
          true
        ],
        [
          4995,
          "match_3",
          4999,
          "flow",
          false
        ],
        [
          525,
          "flow",
          10094,
          "flow",
          false
        ],
        [
          10249,
          "flow",
          10247,
          "flow",
          false
        ],
        [
          423,
          "flow",
          10191,
          "flow",
          false
        ],
        [
          423,
          "val",
          10191,
          "name",
          false
        ],
        [
          835,
          "output",
          10191,
          "tdata",
          true
        ],
        [
          10124,
          "flow",
          10127,
          "flow",
          false
        ],
        [
          466,
          "finished",
          10063,
          "flow",
          false
        ],
        [
          10141,
          "True",
          10224,
          "flow",
          false
        ],
        [
          80,
          "flow",
          9871,
          "flow",
          false
        ],
        [
          436,
          "w",
          9871,
          "width",
          true
        ],
        [
          436,
          "h",
          9871,
          "height",
          false
        ],
        [
          436,
          "x",
          9871,
          "posX",
          true
        ],
        [
          436,
          "y",
          9871,
          "posY",
          true
        ],
        [
          454,
          "true",
          10096,
          "flow",
          false
        ],
        [
          10248,
          "flow",
          10249,
          "flow",
          false
        ],
        [
          419,
          "flow",
          10193,
          "flow",
          false
        ],
        [
          622,
          "flow",
          10129,
          "flow",
          false
        ],
        [
          455,
          "flow",
          10065,
          "flow",
          false
        ],
        [
          10192,
          "flow",
          10226,
          "flow",
          false
        ],
        [
          275,
          "opAvoid",
          10226,
          "val",
          false
        ],
        [
          660,
          "flow",
          10162,
          "flow",
          false
        ],
        [
          10022,
          "flow",
          10162,
          "reset",
          false
        ],
        [
          48,
          "down",
          5001,
          "flow",
          false
        ],
        [
          10097,
          "flow",
          10098,
          "flow",
          false
        ],
        [
          275,
          "partPrice",
          10098,
          "val",
          false
        ],
        [
          819,
          "flow",
          10251,
          "flow",
          false
        ],
        [
          819,
          "Y",
          10251,
          "X",
          false
        ],
        [
          829,
          "wager",
          10251,
          "DX",
          false
        ],
        [
          681,
          "flow",
          10195,
          "flow",
          false
        ],
        [
          628,
          "flow",
          10131,
          "flow",
          false
        ],
        [
          626,
          "val",
          10131,
          "X",
          false
        ],
        [
          114,
          "imcost",
          10131,
          "DX",
          false
        ],
        [
          10066,
          "flow",
          10067,
          "flow",
          false
        ],
        [
          342,
          "veid",
          10067,
          "vehId",
          false
        ],
        [
          10004,
          "flow",
          10003,
          "flow",
          false
        ],
        [
          10004,
          "val",
          10003,
          "X",
          false
        ],
        [
          115,
          "cost",
          10003,
          "DX",
          false
        ],
        [
          10181,
          "flow",
          10228,
          "flow",
          false
        ],
        [
          659,
          "flow",
          10164,
          "flow",
          false
        ],
        [
          10017,
          "down",
          10164,
          "reset",
          true
        ],
        [
          661,
          "False",
          10164,
          "reset",
          false
        ],
        [
          10166,
          "pos",
          10164,
          "position",
          false
        ],
        [
          9871,
          "flow",
          9875,
          "flow",
          false
        ],
        [
          10099,
          "flow",
          10100,
          "flow",
          false
        ],
        [
          275,
          "paintdata",
          10100,
          "val",
          false
        ],
        [
          10033,
          "flow",
          10036,
          "flow",
          false
        ],
        [
          10033,
          "Y",
          10036,
          "val",
          false
        ],
        [
          10196,
          "flow",
          10197,
          "flow",
          false
        ],
        [
          241,
          "club",
          10197,
          "val",
          false
        ],
        [
          10100,
          "flow",
          10133,
          "flow",
          false
        ],
        [
          275,
          "laps",
          10133,
          "val",
          false
        ],
        [
          10226,
          "flow",
          10230,
          "flow",
          false
        ],
        [
          275,
          "reputation",
          10230,
          "val",
          false
        ],
        [
          661,
          "True",
          10166,
          "flow",
          false
        ],
        [
          10165,
          "objID",
          10166,
          "newPin",
          false
        ],
        [
          9876,
          "flow",
          9877,
          "flow",
          false
        ],
        [
          10101,
          "flow",
          10102,
          "flow",
          false
        ],
        [
          10240,
          "flow",
          10255,
          "flow",
          false
        ],
        [
          10198,
          "flow",
          10199,
          "flow",
          false
        ],
        [
          241,
          "opSpawnRot",
          10199,
          "val",
          false
        ],
        [
          10134,
          "flow",
          10135,
          "flow",
          false
        ],
        [
          275,
          "wayps",
          10135,
          "val",
          false
        ],
        [
          1112,
          "match_5",
          10007,
          "flow",
          false
        ],
        [
          1112,
          "match_2",
          10007,
          "flow",
          false
        ],
        [
          825,
          "flow",
          10232,
          "flow",
          false
        ],
        [
          840,
          "false",
          10232,
          "flow",
          false
        ],
        [
          652,
          "flow",
          10168,
          "flow",
          false
        ],
        [
          206,
          "down",
          9879,
          "flow",
          false
        ],
        [
          10096,
          "flow",
          10104,
          "flow",
          false
        ],
        [
          157,
          "flow",
          10257,
          "flow",
          false
        ],
        [
          157,
          "gmwp",
          10257,
          "val",
          false
        ],
        [
          10204,
          "flow",
          10201,
          "flow",
          false
        ],
        [
          10136,
          "flow",
          10137,
          "flow",
          false
        ],
        [
          477,
          "flow",
          10073,
          "flow",
          false
        ],
        [
          478,
          "vehId",
          10073,
          "veid",
          false
        ],
        [
          10235,
          "flow",
          10234,
          "flow_1",
          false
        ],
        [
          844,
          "cflow",
          10234,
          "flow_1",
          false
        ],
        [
          1112,
          "match_7",
          10234,
          "flow_2",
          false
        ],
        [
          844,
          "cflow",
          10234,
          "flow_2",
          false
        ],
        [
          22,
          "flow",
          10170,
          "flow",
          false
        ],
        [
          10105,
          "flow",
          10106,
          "flow",
          false
        ],
        [
          10041,
          "flow",
          10042,
          "flow",
          false
        ],
        [
          339,
          "flow",
          10203,
          "flow",
          false
        ],
        [
          9913,
          "flow",
          9914,
          "flow",
          false
        ],
        [
          9913,
          "filename",
          9914,
          "filename",
          false
        ],
        [
          10138,
          "flow",
          10139,
          "flow",
          false
        ],
        [
          438,
          "triggerId",
          10139,
          "A",
          false
        ],
        [
          10138,
          "val",
          10139,
          "B",
          false
        ],
        [
          482,
          "True",
          10075,
          "flow",
          false
        ],
        [
          480,
          "nmax",
          10075,
          "val",
          false
        ],
        [
          390,
          "flow",
          10011,
          "flow",
          false
        ],
        [
          247,
          "False",
          10011,
          "flow",
          false
        ],
        [
          487,
          "flow",
          10236,
          "flow",
          false
        ],
        [
          311,
          "True",
          10172,
          "flow",
          false
        ],
        [
          552,
          "val",
          10172,
          "condition",
          false
        ],
        [
          4994,
          "flow",
          5006,
          "flow",
          false
        ],
        [
          197,
          "flow",
          10108,
          "flow",
          false
        ],
        [
          197,
          "Y",
          10108,
          "val",
          false
        ],
        [
          293,
          "flow",
          10044,
          "flow",
          false
        ],
        [
          10203,
          "flow",
          10205,
          "flow",
          false
        ],
        [
          526,
          "flow",
          10205,
          "reset",
          false
        ],
        [
          394,
          "down",
          10205,
          "reset",
          false
        ],
        [
          10203,
          "val",
          10205,
          "position",
          false
        ],
        [
          10140,
          "flow",
          10141,
          "flow",
          false
        ],
        [
          10140,
          "finished",
          10141,
          "condition",
          false
        ],
        [
          1118,
          "flow",
          10077,
          "flow",
          true
        ],
        [
          390,
          "down",
          10013,
          "flow",
          false
        ],
        [
          843,
          "down",
          10238,
          "flow",
          false
        ],
        [
          68,
          "flow",
          10174,
          "flow",
          false
        ],
        [
          68,
          "league",
          10174,
          "val",
          false
        ],
        [
          639,
          "flow",
          10110,
          "flow",
          false
        ],
        [
          640,
          "output",
          10110,
          "vehId",
          false
        ],
        [
          52,
          "flow",
          10046,
          "flow",
          true
        ],
        [
          10225,
          "true",
          10207,
          "flow",
          false
        ],
        [
          10142,
          "flow",
          10143,
          "flow",
          false
        ],
        [
          633,
          "objID",
          10143,
          "val",
          false
        ],
        [
          490,
          "flow",
          10079,
          "flow",
          false
        ],
        [
          490,
          "nhp",
          10079,
          "val",
          false
        ],
        [
          10013,
          "flow",
          10015,
          "flow",
          false
        ],
        [
          699,
          "flow",
          10176,
          "flow",
          false
        ],
        [
          45,
          "flow",
          5008,
          "flow",
          false
        ],
        [
          5006,
          "flow",
          9887,
          "flow",
          false
        ],
        [
          52,
          "flow",
          10048,
          "flow",
          true
        ],
        [
          354,
          "flow",
          10048,
          "reset",
          false
        ],
        [
          250,
          "flowB",
          10209,
          "flow",
          false
        ],
        [
          281,
          "triggerName",
          10209,
          "name",
          true
        ],
        [
          835,
          "output",
          10209,
          "tdata",
          true
        ],
        [
          620,
          "false",
          10145,
          "flow",
          false
        ],
        [
          10140,
          "nextId",
          10145,
          "val",
          true
        ],
        [
          395,
          "flow",
          10017,
          "flow",
          false
        ],
        [
          10050,
          "flow",
          10178,
          "flow",
          false
        ],
        [
          268,
          "integrityData",
          10178,
          "iteg",
          false
        ],
        [
          9901,
          "ifile",
          10178,
          "file",
          false
        ],
        [
          4998,
          "flow",
          5009,
          "flow",
          false
        ],
        [
          10118,
          "flow",
          10114,
          "flow",
          false
        ],
        [
          591,
          "false",
          10114,
          "reset",
          false
        ],
        [
          10118,
          "data",
          10114,
          "group",
          false
        ],
        [
          846,
          "police",
          10114,
          "quantity",
          false
        ],
        [
          373,
          "flow",
          10050,
          "flow",
          false
        ],
        [
          10049,
          "damageData",
          10050,
          "dmg",
          false
        ],
        [
          9901,
          "mfile",
          10050,
          "file",
          false
        ],
        [
          10213,
          "flow",
          10211,
          "flow",
          false
        ],
        [
          10146,
          "flow",
          10147,
          "flow",
          false
        ],
        [
          10140,
          "newLap",
          10147,
          "val",
          true
        ],
        [
          203,
          "flow",
          10083,
          "flow",
          false
        ],
        [
          385,
          "flow",
          10180,
          "flow",
          false
        ],
        [
          275,
          "opifile",
          10180,
          "val",
          false
        ],
        [
          5009,
          "down",
          5010,
          "flow",
          false
        ],
        [
          10114,
          "loaded",
          10116,
          "flow",
          false
        ],
        [
          591,
          "false",
          10116,
          "reset",
          true
        ],
        [
          10114,
          "vehicleIds",
          10116,
          "data",
          false
        ],
        [
          10206,
          "flow",
          10213,
          "flow",
          false
        ],
        [
          241,
          "cname",
          10213,
          "val",
          false
        ],
        [
          10140,
          "nextTrig",
          10149,
          "name",
          false
        ],
        [
          541,
          "flow",
          10085,
          "flow",
          false
        ],
        [
          361,
          "flow",
          10085,
          "on",
          false
        ],
        [
          10016,
          "flow",
          10021,
          "flow",
          false
        ],
        [
          618,
          "flow",
          10182,
          "flow",
          false
        ],
        [
          607,
          "flow",
          10118,
          "flow",
          false
        ],
        [
          10055,
          "flow",
          10054,
          "flow",
          false
        ],
        [
          10053,
          "damageData",
          10054,
          "dmg",
          false
        ],
        [
          9915,
          "mfile",
          10054,
          "file",
          false
        ],
        [
          512,
          "flow",
          10215,
          "flow",
          false
        ],
        [
          10150,
          "flow",
          10151,
          "flow",
          false
        ],
        [
          676,
          "True",
          10087,
          "flow",
          false
        ],
        [
          438,
          "flow",
          10023,
          "flow",
          false
        ],
        [
          600,
          "flow",
          10184,
          "flow",
          false
        ],
        [
          10183,
          "integrityData",
          10184,
          "iteg",
          false
        ],
        [
          602,
          "ifile",
          10184,
          "file",
          false
        ],
        [
          567,
          "flow",
          10120,
          "flow",
          false
        ],
        [
          567,
          "cost",
          10120,
          "val",
          false
        ],
        [
          767,
          "flow",
          10217,
          "flow",
          false
        ],
        [
          214,
          "damage",
          10217,
          "A",
          true
        ],
        [
          261,
          "flow",
          9928,
          "flow",
          false
        ],
        [
          261,
          "Y",
          9928,
          "val",
          false
        ],
        [
          10144,
          "flow",
          10153,
          "flow",
          false
        ],
        [
          633,
          "objID",
          10153,
          "newPin",
          false
        ],
        [
          547,
          "flow",
          10089,
          "flow",
          false
        ],
        [
          799,
          "flow",
          10242,
          "flow",
          false
        ],
        [
          809,
          "True",
          10242,
          "on",
          false
        ],
        [
          526,
          "flow",
          10186,
          "flow",
          false
        ],
        [
          4986,
          "match_2",
          9897,
          "flow",
          false
        ],
        [
          10059,
          "flow",
          10058,
          "flow",
          false
        ],
        [
          523,
          "Y",
          10058,
          "val",
          false
        ],
        [
          52,
          "flow",
          10219,
          "flow",
          true
        ],
        [
          917,
          "flow",
          10219,
          "on",
          true
        ],
        [
          10239,
          "flow",
          10240,
          "flow",
          false
        ],
        [
          10154,
          "flow",
          10155,
          "flow",
          false
        ],
        [
          10242,
          "flow",
          10243,
          "flow",
          false
        ],
        [
          809,
          "True",
          10243,
          "reset",
          false
        ],
        [
          10090,
          "flow",
          10091,
          "flow",
          false
        ],
        [
          184,
          "flow",
          9885,
          "flow",
          false
        ],
        [
          10028,
          "flow",
          10027,
          "flow",
          false
        ],
        [
          275,
          "slips",
          10027,
          "val",
          false
        ],
        [
          10235,
          "flow",
          9891,
          "flow_1",
          false
        ],
        [
          1112,
          "match_5",
          9891,
          "flow_2",
          false
        ],
        [
          157,
          "flow",
          9889,
          "flow",
          false
        ],
        [
          157,
          "destpos",
          9889,
          "val",
          false
        ],
        [
          193,
          "down",
          10188,
          "flow",
          false
        ],
        [
          83,
          "flow",
          9899,
          "flow",
          false
        ],
        [
          83,
          "Y",
          9899,
          "val",
          false
        ],
        [
          407,
          "flow",
          10124,
          "flow",
          false
        ],
        [
          207,
          "flow",
          9883,
          "flow",
          false
        ],
        [
          207,
          "y",
          9883,
          "val",
          false
        ],
        [
          118,
          "a",
          10060,
          "flow",
          false
        ],
        [
          407,
          "output",
          10060,
          "data",
          true
        ],
        [
          10034,
          "flow",
          10033,
          "flow",
          false
        ],
        [
          10034,
          "val",
          10033,
          "X",
          false
        ],
        [
          10029,
          "val",
          10033,
          "DX",
          false
        ],
        [
          440,
          "true",
          10136,
          "flow",
          false
        ],
        [
          44,
          "flow",
          10136,
          "flow",
          false
        ],
        [
          875,
          "flow",
          10259,
          "flow",
          false
        ],
        [
          591,
          "false",
          10259,
          "reset",
          false
        ],
        [
          875,
          "data",
          10259,
          "group",
          false
        ],
        [
          846,
          "trucks",
          10259,
          "quantity",
          false
        ],
        [
          10000,
          "flow",
          9932,
          "flow",
          false
        ],
        [
          305,
          "vehId",
          9932,
          "veid",
          false
        ],
        [
          10000,
          "devices",
          9932,
          "devices",
          false
        ],
        [
          10152,
          "flow",
          10157,
          "flow",
          false
        ],
        [
          275,
          "destid",
          10157,
          "val",
          true
        ],
        [
          10251,
          "flow",
          10252,
          "flow",
          false
        ],
        [
          10250,
          "val",
          10252,
          "X",
          false
        ],
        [
          829,
          "reputation",
          10252,
          "DX",
          false
        ],
        [
          10037,
          "flow",
          10032,
          "flow",
          false
        ],
        [
          10037,
          "Y",
          10032,
          "val",
          false
        ],
        [
          296,
          "flow",
          10029,
          "flow",
          false
        ],
        [
          10238,
          "flow",
          10241,
          "flow",
          false
        ],
        [
          47,
          "down",
          5000,
          "flow",
          false
        ],
        [
          422,
          "flow",
          10190,
          "flow",
          false
        ],
        [
          281,
          "triggerName",
          10190,
          "val",
          false
        ],
        [
          782,
          "flow",
          9901,
          "flow",
          false
        ],
        [
          782,
          "output",
          9901,
          "data",
          false
        ],
        [
          587,
          "flow",
          10126,
          "flow",
          false
        ],
        [
          10026,
          "flow",
          10038,
          "flow",
          false
        ],
        [
          275,
          "opModel",
          10038,
          "val",
          false
        ],
        [
          868,
          "false",
          10256,
          "flow",
          false
        ],
        [
          869,
          "num",
          10256,
          "val",
          false
        ],
        [
          186,
          "False",
          10031,
          "flow",
          false
        ],
        [
          10241,
          "flow",
          10246,
          "flow",
          false
        ],
        [
          627,
          "True",
          10223,
          "flow",
          false
        ],
        [
          10029,
          "flow",
          10030,
          "flow",
          false
        ],
        [
          841,
          "flow",
          10258,
          "flow",
          false
        ],
        [
          829,
          "gmwp",
          10258,
          "val",
          false
        ],
        [
          4995,
          "flow",
          9870,
          "flow",
          false
        ],
        [
          558,
          "flow",
          10095,
          "flow",
          false
        ],
        [
          265,
          "flow",
          10025,
          "flow",
          false
        ],
        [
          275,
          "desc",
          10025,
          "val",
          true
        ],
        [
          10245,
          "down",
          10248,
          "flow",
          false
        ],
        [
          799,
          "flow",
          10244,
          "flow",
          false
        ],
        [
          10025,
          "flow",
          10028,
          "flow",
          false
        ],
        [
          275,
          "wager",
          10028,
          "val",
          true
        ],
        [
          10180,
          "flow",
          10192,
          "flow",
          false
        ],
        [
          275,
          "useTraffic",
          10192,
          "val",
          false
        ],
        [
          157,
          "flow",
          5016,
          "flow",
          false
        ],
        [
          157,
          "flow",
          5016,
          "flow",
          false
        ],
        [
          157,
          "destid",
          5016,
          "val",
          false
        ],
        [
          593,
          "flow",
          10128,
          "flow",
          false
        ],
        [
          81,
          "vehId",
          10128,
          "vehId",
          false
        ],
        [
          390,
          "down",
          10034,
          "flow",
          false
        ],
        [
          10207,
          "flow",
          10064,
          "flow",
          false
        ],
        [
          445,
          "triggerName",
          10064,
          "A",
          false
        ],
        [
          10207,
          "val",
          10064,
          "B",
          false
        ],
        [
          255,
          "false",
          3059,
          "flow",
          false
        ],
        [
          1131,
          "flow",
          3059,
          "flow",
          false
        ],
        [
          356,
          "flow",
          10225,
          "flow",
          false
        ],
        [
          356,
          "vel",
          10225,
          "A",
          false
        ],
        [
          837,
          "flow",
          10253,
          "flow",
          false
        ],
        [
          10252,
          "Y",
          10253,
          "val",
          false
        ],
        [
          658,
          "flow",
          10161,
          "flow",
          false
        ],
        [
          450,
          "flow",
          10161,
          "reset",
          false
        ],
        [
          10039,
          "flow",
          10040,
          "flow",
          false
        ],
        [
          275,
          "opRisk",
          10040,
          "val",
          false
        ],
        [
          10040,
          "flow",
          10097,
          "flow",
          false
        ],
        [
          275,
          "basePrice",
          10097,
          "val",
          true
        ],
        [
          223,
          "true",
          5002,
          "flow",
          false
        ],
        [
          816,
          "flow",
          10250,
          "flow",
          false
        ],
        [
          798,
          "flow",
          10254,
          "flow",
          false
        ]
      ],
      "name":"New State",
      "nodes":{
        "7":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "dtRaw":true,
              "dtReal":true,
              "dtSim":true,
              "enterState":false,
              "exitState":false,
              "flow":false
            }
          },
          "pos":[
            -270,
            92
          ],
          "type":"events/onUpdate"
        },
        "9":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1228,
            -1991
          ],
          "type":"logic/bundle"
        },
        "10":{
          "data":{
            "blocksOnResetGameplay":true
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false,
              "value":true
            }
          },
          "pos":[
            374,
            204
          ],
          "type":"activity/requestAbandon"
        },
        "11":{
          "data":{
            "zOffset":0
          },
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "color":{
              "type":"color",
              "value":[
                1,
                0,
                0,
                1
              ]
            },
            "radius":{
              "type":"number",
              "value":5
            }
          },
          "hiddenPins":{
            "p_in":{
              "color":true,
              "fadeFarDist":true,
              "fadeNearDist":true,
              "flow":false,
              "markerType":true,
              "position":false,
              "radius":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -354,
            -4136
          ],
          "type":"scene/singleMarker"
        },
        "12":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal id = self.pinIn.fetchID.value\nlocal toFetch = self.pinIn.toFetch.value\nlocal vecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. id .. \"'))\"\nve:queueLuaCommand(vecmd)\nself.pinOut.output.value = extensions.vluaFetchModule.getVal(id)"
          },
          "customIcon":"simobject_lightning",
          "customName":"Fetch VLUA Variable",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "fetchID":false,
              "flow":false,
              "toFetch":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Fetch VLUA Variable",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "toFetch",
              null,
              ""
            ],
            [
              "out",
              "string",
              "output",
              null,
              ""
            ],
            [
              "in",
              "string",
              "fetchID",
              null,
              ""
            ]
          ],
          "pos":[
            1886,
            1996
          ],
          "type":"util/customLua"
        },
        "13":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrutils.updateMarkers()",
            "_executionStarted":"",
            "_executionStopped":"local extensions = require(\"extensions\")\nextensions.blrutils.deleteMarkers()",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Markers",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ]
          ],
          "pos":[
            626,
            1520
          ],
          "type":"util/customLua"
        },
        "14":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nif ve ~= nil then\nlocal id = self.pinIn.fetchID.value\nlocal toFetch = self.pinIn.toFetch.value\nlocal vecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. id .. \"'))\"\nif ve.queueLuaCommand ~= nil then\nve:queueLuaCommand(vecmd)\nself.pinOut.output.value = extensions.vluaFetchModule.getVal(id)\nend\nend"
          },
          "customIcon":"simobject_lightning",
          "customName":"Fetch VLUA Variable",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "fetchID":{
              "type":"string",
              "value":"odo"
            },
            "toFetch":{
              "type":"string",
              "value":"electrics.values.odometer"
            }
          },
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "fetchID":false,
              "flow":false,
              "toFetch":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Fetch VLUA Variable",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "toFetch",
              null,
              ""
            ],
            [
              "out",
              "string",
              "output",
              null,
              ""
            ],
            [
              "in",
              "string",
              "fetchID",
              null,
              ""
            ]
          ],
          "pos":[
            2264,
            -538
          ],
          "type":"util/customLua"
        },
        "15":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal unit = extensions.blrutils.getSettingValue(\"uiUnits\")\nlocal odoval = 0\nlocal odotxt = \"\"\nlocal rawval = 0\nif self.pinIn.fetch.value ~= nil then\nodoval = tonumber(self.pinIn.fetch.value)\nrawval = odoval\nif unit == \"imperial\" then\nodoval = odoval / 1.609\nodotxt = string.format(\"Odometer : %.1f mi\", odoval / 1000)\nelse\nodotxt = string.format(\"Odometer : %.1f km\", odoval / 1000)\nend\nif self.pinIn.faked.value then \nodotxt = odotxt .. \" (Faked)\"\nend\nelse\nodoval = -1\nodotxt = \"Odometer Not Ready\"\nend\nself.pinOut.text.value = odotxt\nself.pinOut.val.value = rawval\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "faked":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "faked":false,
              "fetch":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "text":false,
              "val":false
            }
          },
          "name":"Odometer Display",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "fetch",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "faked",
              null,
              ""
            ],
            [
              "out",
              "string",
              "text",
              null,
              ""
            ],
            [
              "out",
              "number",
              "val",
              null,
              ""
            ]
          ],
          "pos":[
            2264,
            -384
          ],
          "type":"util/customLua"
        },
        "16":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1790,
            1121
          ],
          "commentText":"",
          "commentTitle":"Mission System",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -560,
            -4172
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "17":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1550,
            -689
          ],
          "type":"logic/bundle"
        },
        "18":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"~=",
          "pos":[
            3496,
            -118
          ],
          "type":"logic/compare"
        },
        "19":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1566,
            1121
          ],
          "commentText":"",
          "commentTitle":"Player Garage",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            2604,
            -630
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "20":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal fullpath = self.pinIn.filename.value\nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(\"beamstate.save(\\\"\" .. fullpath .. \"\\\")\" )\nself.pinOut.dbgval.value = fullpath\n\n\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "dbgval":false,
              "flow":false
            }
          },
          "name":"Save Beamstate To File",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "string",
              "dbgval",
              null,
              ""
            ]
          ],
          "pos":[
            808,
            330
          ],
          "type":"util/customLua"
        },
        "21":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentObj\nfor _,id in pairs(self.pinIn.idtable.value) do\nif id ~= -1 then\ncurrentObj = scenetree.findObjectById(id)\ncurrentObj:delete()\nend\nend"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "idtable":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Delete Object Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "idtable",
              null,
              ""
            ]
          ],
          "pos":[
            2600,
            -3310
          ],
          "type":"util/customLua"
        },
        "22":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -3000,
            -552
          ],
          "type":"logic/flowSwitch"
        },
        "23":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2418,
            -689
          ],
          "type":"logic/bundle"
        },
        "24":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Car Delivery (Hard)"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            304,
            -2806
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "25":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.output.value = tonumber(self.pinIn.valStr.value)"
          },
          "customName":"To Number",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "valStr":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Custom Lua ",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "valStr",
              null,
              ""
            ],
            [
              "out",
              "number",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            2110,
            2038
          ],
          "type":"util/customLua"
        },
        "26":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            1662,
            1996
          ],
          "string":"electrics.values.steering",
          "type":"types/string"
        },
        "27":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Part Delivery (Easy)"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            122,
            -2792
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "28":{
          "count":1,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "value":false,
              "value_1":false
            },
            "p_out":{
              "flow":false,
              "match_1":false,
              "none":false
            }
          },
          "pos":[
            -354,
            -2470
          ],
          "type":"logic/switchcase"
        },
        "29":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":-1
            },
            "varName":{
              "type":"string",
              "value":"racePlayerReady"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1908,
            -118
          ],
          "type":"types/genericValue"
        },
        "30":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            670,
            352
          ],
          "commentText":"Example for universal Vehicle LUA variable fetching, core component requires a custom script\\nthat causes VLUA command execution passing selected VLUA field as parameter to Engine LUA\\nand outputs the value on a node.\\n\\nUPDATED TO WORK WITH MULTIPLE SIMULTANEOUS FETCHING, FETCH RESULT STORED IN TABLE\\nAND RETRIEVED USING FETCH ID VALUE                    \\n                                                                                      0.25 UPDATE FOR STUPID bs shown below\\n                                                                                      local extensions = require(\"extensions\")\\n                                                                                      REQUIRED TO USE EXTENSIONS IN LUA NODES ",
          "commentTitle":"VLUA Fetching Module Example",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            1638,
            1778
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "31":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1186,
            -2764
          ],
          "type":"logic/frameDelay"
        },
        "32":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Player Garage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            2810,
            -594
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "33":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.betterpartmgmt.loadInventoryFromFile(\"beamLR/partinv\")\nextensions.betterpartmgmt.loadPartPriceLibrary(\"beamLR/partprices\")\nextensions.betterpartmgmt.loadCategories(\"beamLR/partCategories\")\nextensions.blrhooks.loadBLRHooks()",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Init BetterPartMGMT",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ]
          ],
          "pos":[
            -116,
            288
          ],
          "type":"util/customLua"
        },
        "34":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal toFetch = \"energyStorage.getStorage('mainTank').remainingVolume\"\nlocal id = \"gas\"\nlocal vecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. id .. \"'))\"\nif ve.queueLuaCommand ~= nil then\nve:queueLuaCommand(vecmd)\nend\nself.pinOut.gasVal.value = tonumber(extensions.vluaFetchModule.getVal(id))"
          },
          "customIcon":"local_gas_station",
          "customName":"Get Gas ",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "veid":false
            },
            "p_out":{
              "flow":false,
              "gasVal":false
            }
          },
          "name":"Get Gas",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "gasVal",
              null,
              ""
            ]
          ],
          "pos":[
            2054,
            -1224
          ],
          "type":"util/customLua"
        },
        "35":{
          "customName":"Get Money",
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2040,
            -1406
          ],
          "type":"types/genericValue"
        },
        "36":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            796,
            295
          ],
          "commentText":"",
          "commentTitle":"Gas Payment",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            2282,
            -1484
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "37":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"missionGiverUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            94,
            -2946
          ],
          "type":"types/genericValue"
        },
        "38":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerGarageSelectedCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2852,
            -76
          ],
          "type":"types/genericValue"
        },
        "39":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.y.value = self.pinIn.x.value - self.pinIn.dx.value\n"
          },
          "customName":"Y = X - DX",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "dx":false,
              "flow":false,
              "x":false
            },
            "p_out":{
              "flow":false,
              "y":false
            }
          },
          "name":"Custom Lua ",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "x",
              null,
              ""
            ],
            [
              "in",
              "number",
              "dx",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ]
          ],
          "pos":[
            2432,
            -1308
          ],
          "type":"util/customLua"
        },
        "40":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"missionState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1326,
            -902
          ],
          "type":"types/genericValue"
        },
        "41":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":true,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":true,
              "true":true
            }
          },
          "opSymbol":"==",
          "pos":[
            1270,
            -958
          ],
          "type":"logic/compare"
        },
        "42":{
          "alpha":1,
          "backgroundColor":[
            0.00000099999999747524,
            0.00000099998999303352,
            0.00000099998999303352,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            180,
            57
          ],
          "commentText":"",
          "commentTitle":"Active Flow",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -840,
            -2674
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "43":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Mission Giver"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            -116,
            -2778
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "44":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -3224,
            -230
          ],
          "type":"vehicle/freeze"
        },
        "45":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            374,
            -2652
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "46":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.betterpartmgmt.saveInventoryToFile(\"beamLR/partinv\")",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Part Inventory",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ]
          ],
          "pos":[
            1032,
            330
          ],
          "type":"util/customLua"
        },
        "47":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Refuse"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            752,
            -2638
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "48":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Exit"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            556,
            -2456
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "49":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerIsWalking"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            4224,
            -230
          ],
          "type":"types/genericValue"
        },
        "50":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            948,
            -2498
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "51":{
          "customName":"Gas Val",
          "data":{
            "value":10
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "pos":[
            2334,
            -1112
          ],
          "type":"types/number"
        },
        "52":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            892,
            1313
          ],
          "type":"logic/bundle"
        },
        "53":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"<",
          "pos":[
            3286,
            50
          ],
          "type":"logic/compare"
        },
        "54":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal newFuelValue = self.pinIn.currentGas.value + self.pinIn.addedGas.value\nve = scenetree.findObjectById(self.pinIn.veid.value)\nif self.pinIn.money.value >= self.pinIn.gasCost.value then\nve:queueLuaCommand(string.format(\"energyStorage.getStorage(\\\"mainTank\\\"):setRemainingVolume(%.12f)\", newFuelValue))\nself.pinOut.paid.value = true\nelse\nself.pinOut.paid.value = false\nend"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "addedGas":false,
              "currentGas":false,
              "flow":false,
              "gasCost":false,
              "money":false,
              "veid":false
            },
            "p_out":{
              "flow":false,
              "paid":false
            }
          },
          "name":"Refuel Car",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gasCost",
              null,
              ""
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "currentGas",
              null,
              ""
            ],
            [
              "in",
              "number",
              "addedGas",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "paid",
              null,
              ""
            ]
          ],
          "pos":[
            2334,
            -1028
          ],
          "type":"util/customLua"
        },
        "55":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"missionState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -284,
            -3674
          ],
          "type":"types/genericValue"
        },
        "56":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            2012,
            -1084
          ],
          "type":"scene/getPlayerVehicle"
        },
        "57":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">",
          "pos":[
            3496,
            50
          ],
          "type":"logic/compare"
        },
        "58":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1186,
            -2817
          ],
          "type":"logic/bundle"
        },
        "59":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -802,
            -2845
          ],
          "type":"logic/bundle"
        },
        "60":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Previous"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            3552,
            232
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "61":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerGarageUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2782,
            -384
          ],
          "type":"types/genericValue"
        },
        "62":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1188,
            1233
          ],
          "commentText":"Nodes related to gameplay interaction with world objects like gas station, repair shop, car shops, races, etc.\\nAlso handling UI selection for world triggers and forwards the selected window to the stats UI selector",
          "commentTitle":"Interaction Group",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -56,
            -1442
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "63":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1384,
            1373
          ],
          "commentText":"Nodes related to data persistence needed to keep vehicle damage between sessions\\nAlso handles all game related data like money, owned cars, owned parts, etc...",
          "commentTitle":"Persistence System",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            350,
            -154
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "64":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            3538,
            372
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "65":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"missionState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            514,
            -2918
          ],
          "type":"types/genericValue"
        },
        "66":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            2306,
            -1434
          ],
          "type":"logic/branch"
        },
        "67":{
          "code":{
            "work":"self.pinOut.filename.value = \"beamLR/garage/car\" .. self.pinIn.carid.value\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carid":false,
              "flow":false
            },
            "p_out":{
              "filename":false,
              "flow":false
            }
          },
          "name":"Get Garage Car File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "carid",
              null,
              ""
            ],
            [
              "out",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            -1068,
            2052
          ],
          "type":"util/customLua"
        },
        "68":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.dataTable.value\nself.pinOut.money.value = dtable[\"money\"]\nself.pinOut.carCount.value = dtable[\"carCount\"]\nself.pinOut.carUsed.value = tonumber(dtable[\"carUsed\"])\nself.pinOut.health.value = dtable[\"health\"]\nself.pinOut.league.value = dtable[\"league\"]\nself.pinOut.time.value = tonumber(dtable[\"time\"])\nself.pinOut.reputation.value = tonumber(dtable[\"rep\"])\nlocal currentCarKey = \"\"\nlocal carTable = \"\"\nfor i=0,dtable[\"carCount\"]-1 do\ncurrentCarKey = \"car\".. i\ncarTable = string.format(carTable .. \"%s=%s\\n\", currentCarKey, currentCarKey )\nend\nself.pinOut.ownedCars.value = carTable"
          },
          "customName":"BLRDataTableInterpreter",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "dataTable":false,
              "flow":false
            },
            "p_out":{
              "carCount":false,
              "carUsed":false,
              "flow":false,
              "health":false,
              "league":false,
              "money":false,
              "ownedCars":false,
              "reputation":false,
              "time":false
            }
          },
          "name":"BLRDataTableInterpreter",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "dataTable",
              null,
              ""
            ],
            [
              "out",
              "number",
              "money",
              null,
              ""
            ],
            [
              "out",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "out",
              "string",
              "ownedCars",
              null,
              ""
            ],
            [
              "out",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "out",
              "number",
              "health",
              null,
              ""
            ],
            [
              "out",
              "number",
              "time",
              null,
              ""
            ],
            [
              "out",
              "string",
              "league",
              null,
              ""
            ],
            [
              "out",
              "number",
              "reputation",
              null,
              ""
            ]
          ],
          "pos":[
            906,
            -118
          ],
          "type":"util/customLua"
        },
        "69":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1816,
            -804
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "70":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1594,
            869
          ],
          "commentText":"Gas station UI and payment module, using custom LUA fetcher to get car gas \\nvalue, increment it and refuel the car. Could be made more interactive by having\\nfluctuating gas price and ability to \"Hold to refuel\" like in real life instead of\\nincremental refueling.",
          "commentTitle":"Gas Station UI",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            1526,
            -1596
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "71":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            186,
            57
          ],
          "commentText":"",
          "commentTitle":"UI Flow",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -826,
            -2884
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "72":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"if self.pinIn.hasGas.value and self.pinIn.vehRdy.value then\nlocal extensions = require(\"extensions\")\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal toFetch = \"energyStorage.getStorage('mainTank').remainingVolume\"\nlocal id = \"gas\"\nlocal vecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. id .. \"'))\"\nif ve.queueLuaCommand ~= nil then\nve:queueLuaCommand(vecmd)\nend\nself.pinOut.gasVal.value = tonumber(extensions.vluaFetchModule.getVal(id))\nelse\nself.pinOut.gasVal.value = 0\nend"
          },
          "customIcon":"local_gas_station",
          "customName":"Get Gas ",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "flow":false,
              "hasGas":false,
              "vehRdy":false
            },
            "p_out":{
              "flow":false,
              "gasVal":false
            }
          },
          "name":"Get Gas",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "gasVal",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "hasGas",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "vehRdy",
              null,
              ""
            ]
          ],
          "pos":[
            1774,
            -258
          ],
          "type":"util/customLua"
        },
        "73":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            334,
            561
          ],
          "commentText":"Necessary to avoid race conditions\\nin drawing another imgui window at\\nsame time as\\nstats wingow",
          "commentTitle":"Statistics UI Flow Selector",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            1162,
            -1386
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "74":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.betterpartmgmt.saveConfig(self.pinIn.filename.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save BLR Veh Config",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            5554,
            -230
          ],
          "type":"util/customLua"
        },
        "75":{
          "count":2,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -536,
            -3366
          ],
          "type":"logic/and"
        },
        "76":{
          "count":2,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            164,
            -3772
          ],
          "type":"logic/and"
        },
        "77":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2320,
            893
          ],
          "type":"logic/bundle"
        },
        "78":{
          "count":2,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            962,
            -1028
          ],
          "type":"logic/and"
        },
        "79":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Player Stats"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            2026,
            -636
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "80":{
          "count":2,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -144,
            -3422
          ],
          "type":"logic/and"
        },
        "81":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            1760,
            -90
          ],
          "type":"scene/getPlayerVehicle"
        },
        "82":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerGarageSelectedCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3958,
            372
          ],
          "type":"types/genericValue"
        },
        "83":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            3748,
            232
          ],
          "type":"util/customLua"
        },
        "84":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal veid = self.pinIn.veid.value\nlocal gid = self.pinIn.gid.value\nextensions.blrutils.garagePaintReload(veid, gid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gid":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Garage Paint",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gid",
              null,
              ""
            ]
          ],
          "pos":[
            1522,
            1016
          ],
          "type":"util/customLua"
        },
        "85":{
          "count":3,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "value":false,
              "value_1":false,
              "value_2":false,
              "value_3":false
            },
            "p_out":{
              "flow":false,
              "match_1":false,
              "match_2":false,
              "match_3":false,
              "none":false
            }
          },
          "pos":[
            2754,
            -300
          ],
          "type":"logic/switchcase"
        },
        "86":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            768,
            841
          ],
          "commentText":"Persistant statistics rendering in UI",
          "commentTitle":"Stats UI",
          "customName":"Comment",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            1750,
            -672
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "87":{
          "customName":"Default",
          "data":{
            "value":0
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "pos":[
            2614,
            -300
          ],
          "type":"types/number"
        },
        "88":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            2014,
            2157
          ],
          "commentText":"Works using car shop files storing available cars, vehicles are spawned in spots defined in car shop file\\nlike camera transforms for viewing each slot. Bought car details are used to create garage file and\\nattached beamstate file. Car count and player money are updated.\\n\\nSelling mode is more simple, calculates car value based on damage, added parts and base val.\\nSold car files deleted, other files rearranged. Money and car count\\nupdated like in buying.\\n\\nNOW UPDATED TO SAVE\\nCAR SHOP CONFIG FILE TO\\nPLAYER GARAGE IN ORDER\\nTO BE ABLE TO SAVE PART\\nEDITS TO A CONFIG FILE FOR\\nEACH OWNED CAR",
          "commentTitle":"Car Shop System & UI",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            1414,
            -3808
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "89":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            178,
            -143
          ],
          "type":"logic/bundle"
        },
        "90":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Car Shop"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            1466,
            -2568
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "91":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.betterpartmgmt.saveConfig(self.pinIn.filename.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save BLR Veh Config",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            1312,
            806
          ],
          "type":"util/customLua"
        },
        "92":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value + self.pinIn.DX.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X+DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            3748,
            372
          ],
          "type":"util/customLua"
        },
        "93":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Change Car"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            3188,
            -552
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "94":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2306,
            -636
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "95":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4000,
            -580
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "96":{
          "data":{
            "value":1
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "pos":[
            3762,
            148
          ],
          "type":"types/number"
        },
        "97":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3972,
            613
          ],
          "type":"logic/bundle"
        },
        "98":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal unit = extensions.blrutils.getSettingValue(\"uiUnits\")\nlocal money = self.pinIn.money.value or 0\nlocal carCount = self.pinIn.carCount.value or 0\nlocal gas = self.pinIn.gasVal.value or 0\nlocal damage = self.pinIn.damage.value or 0\nlocal accel = self.pinIn.accel.value or 0\nlocal gmax = self.pinIn.gmax.value or 0\nlocal health = self.pinIn.health.value or 100\n\nhealth = math.max(health, 0)\n\nlocal text = \"\"\nlocal moneyText = string.format(\"$%.2f\", money)\n\ntext = \"Money : \" .. moneyText .. \"\\n\"\n\nif unit == \"imperial\" then\ntext = text .. \"Gas : \" .. string.format(\"%.2f Gallons\", gas / 3.785) .. \"\\n\"\nelse\ntext = text .. \"Gas : \" .. string.format(\"%.2f Liters\", gas) .. \"\\n\"\nend\n\ntext = text .. \"Damage : \" .. damage .. \"\\n\"\ntext = text .. \"Force (Max) : \" .. string.format(\"%.1f\",accel / 9.8) .. \"G (\" .. string.format(\"%.1f\",gmax / 9.8) .. \"G)\\n\"\ntext = text .. \"Health : \" .. string.format(\"%.1f\",health) .. \"%%\"\n\nself.pinOut.formatted.value = text\n"
          },
          "customName":"Statistics UI Display",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "accel":false,
              "carCount":false,
              "damage":false,
              "flow":false,
              "gasVal":false,
              "gmax":false,
              "health":false,
              "money":false
            },
            "p_out":{
              "flow":false,
              "formatted":false
            }
          },
          "name":"Statistics UI Display",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "out",
              "string",
              "formatted",
              null,
              ""
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gasVal",
              null,
              ""
            ],
            [
              "in",
              "number",
              "damage",
              null,
              ""
            ],
            [
              "in",
              "number",
              "accel",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gmax",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ]
          ],
          "pos":[
            1998,
            -398
          ],
          "type":"util/customLua"
        },
        "99":{
          "count":5,
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "value_1":{
              "type":"number",
              "value":0
            },
            "value_2":{
              "type":"number",
              "value":1
            },
            "value_3":{
              "type":"number",
              "value":2
            },
            "value_4":{
              "type":"number",
              "value":3
            },
            "value_5":{
              "type":"number",
              "value":4
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "value":false,
              "value_1":false,
              "value_2":false,
              "value_3":false,
              "value_4":false,
              "value_5":false
            },
            "p_out":{
              "flow":false,
              "match_1":false,
              "match_2":false,
              "match_3":false,
              "match_4":false,
              "match_5":false,
              "none":false
            }
          },
          "pos":[
            -88,
            -3702
          ],
          "type":"logic/switchcase"
        },
        "100":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2348,
            106
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "101":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            460,
            310
          ],
          "commentText":"Updated interaction marker system works on all maps using file\\nbased list of markers, mass spawned using blrutils and despawned\\non mission stop using _executionStopped on the update node\\n",
          "commentTitle":"Interaction Markers",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            378,
            1288
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "102":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceUseTraffic"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3644,
            -342
          ],
          "type":"types/genericValue"
        },
        "103":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4574,
            610
          ],
          "type":"logic/flowSwitch"
        },
        "104":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = {}\nlocal filename = self.pinIn.input.value[self.pinIn.selected.value]\nif filename ~= nil then\nlocal filedata = readFile(filename)\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nend\nself.pinOut.output.value = dtable\nself.pinOut.sid.value = self.pinIn.selected.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "input":false,
              "selected":false
            },
            "p_out":{
              "flow":false,
              "output":false,
              "sid":false
            }
          },
          "name":"Data Table From File Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "input",
              null,
              ""
            ],
            [
              "in",
              "number",
              "selected",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ],
            [
              "out",
              "number",
              "sid",
              null,
              ""
            ]
          ],
          "pos":[
            1760,
            -3674
          ],
          "type":"util/customLua"
        },
        "105":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            3090,
            176
          ],
          "type":"util/customLua"
        },
        "106":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            3048,
            -76
          ],
          "type":"types/genericValue"
        },
        "107":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Use This Car"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            3608,
            -510
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "108":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"playerGarageUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3188,
            -454
          ],
          "type":"types/genericValue"
        },
        "109":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Cancel"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            3790,
            -538
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "110":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Car Tuning Menu"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3006,
            -202
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "111":{
          "customName":"Set Current Car",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1284,
            -104
          ],
          "type":"types/genericValue"
        },
        "112":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2642,
            -76
          ],
          "type":"types/genericValue"
        },
        "113":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3986,
            -328
          ],
          "type":"types/genericValue"
        },
        "114":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"if self.pinIn.carCount.value == 0 then\nself.pinOut.str.value = \"Garage Empty\"\n\nelseif self.pinIn.shownCar.value == -1 then\nlocal realCount = 0\nif self.pinIn.currentCar.value == -1 then\nrealCount = self.pinIn.carCount.value\nelse\nrealCount = self.pinIn.carCount.value -1\nend\nself.pinOut.str.value = string.format(\"Garage has %d cars stored\", realCount)\nself.pinOut.btn.value = \"Browse\"\n\nelse\n\nlocal dtable = self.pinIn.carTable.value\nlocal theString = string.format(\"Chosen Car %d/%d\\n\", (self.pinIn.shownCar.value+1), self.pinIn.carCount.value)\nlocal shownCarKey = \"car\" .. self.pinIn.shownCar.value \ntheString = string.format(theString .. \"Name : %s\\nType : %s\\n\", dtable[\"name\"], dtable[\"type\"])\n\nif (tonumber(dtable[\"impoundval\"] or 0)) > 0 then\ntheString = theString .. \"Impound Cost : $\" .. string.format(\"%.2f\",dtable[\"impoundval\"]) \nend\n\nself.pinOut.str.value = theString\nself.pinOut.btn.value = \"Next\"\nself.pinOut.imcost.value = tonumber(dtable[\"impoundval\"] or 0)\n\nend\n\n\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":false,
              "carTable":false,
              "currentCar":false,
              "flow":false,
              "shownCar":false
            },
            "p_out":{
              "str":false,
              "btn":false,
              "flow":false,
              "imcost":false
            }
          },
          "name":"Garage Data Display",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "out",
              "string",
              "str",
              null,
              ""
            ],
            [
              "in",
              "number",
              "shownCar",
              null,
              ""
            ],
            [
              "in",
              "table",
              "carTable",
              null,
              ""
            ],
            [
              "out",
              "string",
              "btn",
              null,
              ""
            ],
            [
              "in",
              "number",
              "currentCar",
              null,
              ""
            ],
            [
              "out",
              "number",
              "imcost",
              null,
              ""
            ]
          ],
          "pos":[
            2866,
            64
          ],
          "type":"util/customLua"
        },
        "115":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal dtable = self.pinIn.data.value\nlocal seed = self.pinIn.seed.value + self.pinIn.sid.value\nlocal processed = {}\nlocal rpaints = self.pinIn.rpaints.value\nlocal sid = self.pinIn.sid.value\nlocal randpaint = self.pinIn.randpaint.value\nif dtable[\"type\"] ~= nil then\nprocessed = extensions.blrutils.processCarShopRandoms(dtable, seed)\nself.pinOut.type.value = dtable[\"type\"]\nself.pinOut.config.value = dtable[\"config\"]\nself.pinOut.cost.value = tonumber(processed[\"baseprice\"]) + tonumber(dtable[\"partprice\"])\nself.pinOut.baseprice.value = tonumber(processed[\"baseprice\"])\nself.pinOut.partprice.value = tonumber(dtable[\"partprice\"])\nself.pinOut.scrapval.value = tonumber(dtable[\"scrapval\"])\nif self.pinIn.randpaint.value then\nself.pinOut.paintdata.value = rpaints[sid]\nelse\nself.pinOut.paintdata.value = dtable[\"paint\"]\nend\n\nself.pinOut.odometer.value = tonumber(processed[\"odometer\"])\n\nlocal odoval = tonumber(processed[\"odometer\"]) / 1000\nlocal units = extensions.blrutils.getSettingValue(\"uiUnits\")\n\n\nlocal fulldesc = dtable[\"name\"] .. \"\\n\" \nif units == \"metric\" then\nfulldesc = fulldesc .. \"Odometer : \" .. string.format(\"%.1f\",odoval) .. \" km\\n\"\nelse\nodoval = odoval / 1.609\nfulldesc = fulldesc .. \"Odometer : \" .. string.format(\"%.1f\",odoval)  .. \" mi\\n\"\nend\nfulldesc = fulldesc .. \"Cost : $\" .. string.format(\"%.2f\", tonumber(processed[\"baseprice\"]) + tonumber(dtable[\"partprice\"])) .. \"\\n\"\nself.pinOut.fulldesc.value = fulldesc\n\nelse\nself.pinOut.fulldesc.value = \"Empty Lot\"\nself.pinOut.cost.value = 999999999999\nend"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "randpaint":false,
              "rpaints":false,
              "seed":false,
              "sid":false
            },
            "p_out":{
              "baseprice":false,
              "config":false,
              "cost":false,
              "flow":false,
              "fulldesc":false,
              "odometer":false,
              "paintdata":false,
              "partprice":false,
              "scrapval":false,
              "type":false
            }
          },
          "name":"Get Shop Car Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "string",
              "type",
              null,
              ""
            ],
            [
              "out",
              "string",
              "config",
              null,
              ""
            ],
            [
              "out",
              "number",
              "cost",
              null,
              ""
            ],
            [
              "out",
              "string",
              "fulldesc",
              null,
              ""
            ],
            [
              "out",
              "number",
              "baseprice",
              null,
              ""
            ],
            [
              "out",
              "number",
              "partprice",
              null,
              ""
            ],
            [
              "out",
              "number",
              "scrapval",
              null,
              ""
            ],
            [
              "out",
              "string",
              "paintdata",
              null,
              ""
            ],
            [
              "out",
              "number",
              "odometer",
              null,
              ""
            ],
            [
              "in",
              "table",
              "rpaints",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "randpaint",
              null,
              ""
            ],
            [
              "in",
              "number",
              "sid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "seed",
              null,
              ""
            ]
          ],
          "pos":[
            2082,
            -3772
          ],
          "type":"util/customLua"
        },
        "116":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            2110,
            -2974
          ],
          "type":"util/customLua"
        },
        "117":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3090,
            64
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "118":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.flow.value = self.pinIn.flow.value\nself.pinOut.a.value=self.pinIn.enableA.value and self.pinIn.flow.value\nself.pinOut.b.value=self.pinIn.enableB.value and self.pinIn.flow.value\nself.pinOut.c.value=self.pinIn.enableC.value and self.pinIn.flow.value\nself.pinOut.d.value=self.pinIn.enableD.value and self.pinIn.flow.value\nself.pinOut.e.value=self.pinIn.enableE.value and self.pinIn.flow.value\nself.pinOut.f.value=self.pinIn.enableF.value and self.pinIn.flow.value\nself.pinOut.g.value=self.pinIn.enableG.value and self.pinIn.flow.value\nself.pinOut.h.value=self.pinIn.enableH.value and self.pinIn.flow.value"
          },
          "customColor":[
            1,
            0.99998998641967773438,
            1,
            0.75000000000000000000
          ],
          "customIcon":"settings_input_composite",
          "customName":"Flow Selector",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "enableA":false,
              "enableB":false,
              "enableC":false,
              "enableD":false,
              "enableE":false,
              "enableF":false,
              "enableG":false,
              "enableH":false,
              "flow":false
            },
            "p_out":{
              "a":false,
              "b":false,
              "c":false,
              "d":false,
              "e":false,
              "f":false,
              "flow":false,
              "g":false,
              "h":false
            }
          },
          "name":"Flow Selector",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "flow",
              "enableA",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "a",
              null,
              ""
            ],
            [
              "in",
              "flow",
              "enableB",
              null,
              ""
            ],
            [
              "in",
              "flow",
              "enableC",
              null,
              ""
            ],
            [
              "in",
              "flow",
              "enableD",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "b",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "c",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "d",
              null,
              ""
            ],
            [
              "in",
              "flow",
              "enableE",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "e",
              null,
              ""
            ],
            [
              "in",
              "flow",
              "enableF",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "f",
              null,
              ""
            ],
            [
              "in",
              "flow",
              "enableG",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "g",
              null,
              ""
            ],
            [
              "in",
              "flow",
              "enableH",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "h",
              null,
              ""
            ]
          ],
          "pos":[
            1270,
            -1308
          ],
          "type":"util/customLua"
        },
        "119":{
          "count":2,
          "customName":"Part Shop",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            962,
            -818
          ],
          "type":"logic/and"
        },
        "120":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1734,
            617
          ],
          "commentText":"",
          "commentTitle":"Mission Giver UI",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -574,
            -2982
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "121":{
          "data":{
            "value":1
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "pos":[
            2152,
            -3044
          ],
          "type":"types/number"
        },
        "122":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            374,
            907
          ],
          "type":"logic/bundle"
        },
        "123":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1060,
            -4105
          ],
          "type":"logic/bundle"
        },
        "124":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\n\nlocal filedata = \"\"\nlocal filename = \"beamLR/garage/car\" .. (self.pinIn.count.value)\nfiledata = \"name=boughtCar\" .. (self.pinIn.count.value + 1) .. \"\\n\"\nfiledata = filedata .. \"type=\" .. self.pinIn.model.value .. \"\\n\"\nfiledata = filedata .. \"config=beamLR/garage/config/car\" .. (self.pinIn.count.value) .. \"\\n\"\nfiledata = filedata .. \"bsfile=beamLR/beamstate/car\" .. (self.pinIn.count.value) .. \".save.json\\n\" \nfiledata = filedata .. \"mfile=beamLR/beamstate/mech/car\" .. (self.pinIn.count.value) .. \"\\n\"\nfiledata = filedata .. \"ifile=beamLR/beamstate/integrity/car\" .. (self.pinIn.count.value) .. \"\\n\"\nfiledata = filedata .. \"gas=2\" .. \"\\n\"\nfiledata = filedata .. \"baseprice=\" .. self.pinIn.baseprice.value .. \"\\n\"\nfiledata = filedata .. \"partprice=\" .. self.pinIn.partprice.value .. \"\\n\"\nfiledata = filedata .. \"scrapval=\" .. self.pinIn.scrapval.value .. \"\\n\"\nfiledata = filedata .. \"paintA=\" .. self.pinIn.paintdata.value .. \"\\n\"\nfiledata = filedata .. \"paintB=\" .. self.pinIn.paintdata.value .. \"\\n\"\nfiledata = filedata .. \"paintC=\" .. self.pinIn.paintdata.value .. \"\\n\"\nfiledata = filedata .. \"damage=0\\n\"\nfiledata = filedata .. \"impoundval=0\\n\"\nwriteFile(filename, filedata)\n\nextensions.blrutils.copyFile(self.pinIn.config.value, \"beamLR/garage/config/car\" .. (self.pinIn.count.value))\nlocal ifile = \"odometer=\" .. self.pinIn.odometer.value\nwriteFile(\"beamLR/beamstate/integrity/car\" .. (self.pinIn.count.value), ifile)\n\nlocal mechdata = extensions.mechDamageLoader.getNewCarMechData()\nwriteFile(\"beamLR/beamstate/mech/car\" .. (self.pinIn.count.value), mechdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "baseprice":false,
              "config":false,
              "count":false,
              "flow":false,
              "model":false,
              "odometer":false,
              "paintdata":false,
              "partprice":false,
              "scrapval":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Add Car To Garage",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "count",
              null,
              ""
            ],
            [
              "in",
              "string",
              "model",
              null,
              ""
            ],
            [
              "in",
              "string",
              "config",
              null,
              ""
            ],
            [
              "in",
              "number",
              "baseprice",
              null,
              ""
            ],
            [
              "in",
              "number",
              "partprice",
              null,
              ""
            ],
            [
              "in",
              "number",
              "scrapval",
              null,
              ""
            ],
            [
              "in",
              "string",
              "paintdata",
              null,
              ""
            ],
            [
              "in",
              "number",
              "odometer",
              null,
              ""
            ]
          ],
          "pos":[
            2348,
            -3660
          ],
          "type":"util/customLua"
        },
        "125":{
          "count":3,
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "value_1":{
              "type":"number",
              "value":0
            },
            "value_2":{
              "type":"number",
              "value":1
            },
            "value_3":{
              "type":"number",
              "value":2
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "value":false,
              "value_1":false,
              "value_2":false,
              "value_3":false
            },
            "p_out":{
              "flow":false,
              "match_1":false,
              "match_2":false,
              "match_3":false,
              "none":false
            }
          },
          "pos":[
            1718,
            -2288
          ],
          "type":"logic/switchcase"
        },
        "126":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Buy"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            1998,
            -2400
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "127":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":true,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1088,
            610
          ],
          "type":"logic/flowSwitch"
        },
        "128":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -158,
            -4133
          ],
          "type":"logic/bundle"
        },
        "129":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal vehdata = extensions.core_vehicle_manager.getPlayerVehicleData()\nif vehdata ~= nil then\nlocal pvtype = vehdata.mainPartName\nself.pinOut.model.value = pvtype\nif pvtype == \"unicycle\" then\nself.pinOut.walking.value = 1\nelse\nself.pinOut.walking.value = 0\nend\nself.pinOut.rdy.value= true\nelse\nself.pinOut.rdy.value = false\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "walking":false,
              "flow":false,
              "model":false,
              "rdy":false
            }
          },
          "name":"Veh Check",
          "pins":[
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "string",
              "model",
              null,
              ""
            ],
            [
              "out",
              "number",
              "walking",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "rdy",
              null,
              ""
            ]
          ],
          "pos":[
            -3098,
            694
          ],
          "type":"util/customLua"
        },
        "130":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "layout":{
              "type":"string",
              "value":"scenario"
            },
            "menu":{
              "type":"string",
              "value":"scenario"
            }
          },
          "hiddenPins":{
            "p_in":{
              "reset":false,
              "flow":false,
              "layout":false,
              "menu":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -270,
            -76
          ],
          "type":"ui/setUILayout"
        },
        "131":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">=",
          "pos":[
            1676,
            -3366
          ],
          "type":"logic/compare"
        },
        "132":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\n\nfor k,v in pairs(self.pinIn.idtable.value) do\nif v ~= -1 then\nve = scenetree.findObjectById(v)\nve:queueLuaCommand(self.pinIn.cmd.value)\nend\nend"
          },
          "customName":"Turn Off Engines",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "cmd":{
              "type":"string",
              "value":"powertrain.getDevice(\"mainEngine\"):setIgnition(0)"
            }
          },
          "hiddenPins":{
            "p_in":{
              "cmd":false,
              "flow":false,
              "idtable":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"VLUA Table Exec",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "idtable",
              null,
              ""
            ],
            [
              "in",
              "string",
              "cmd",
              null,
              ""
            ]
          ],
          "pos":[
            1956,
            -3058
          ],
          "type":"util/customLua"
        },
        "133":{
          "alpha":1,
          "backgroundColor":[
            0.05853456258773803711,
            0.05853397771716117859,
            0.05853397771716117859,
            1
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"[X] Store the veids to delete when buying ui closed\\n[X] Make sure player stays in the correct car (^^^^)\\n[X] Turn off engines\\n[X] Feed description, cost, other info to UI\\n[X] Car purchase system ($ check and create garage file)",
          "commentTitle":"TODO LIST : ",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            1708,
            -2884
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "134":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1160,
            758
          ],
          "commentText":"",
          "commentTitle":"Traffic",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -1554,
            616
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "135":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"carShopSelectedSlot"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1592,
            -3646
          ],
          "type":"types/genericValue"
        },
        "136":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1530,
            655
          ],
          "type":"logic/bundle"
        },
        "137":{
          "data":{
            "filterName":""
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "enter":false,
              "exit":false,
              "flow":false,
              "triggerId":false,
              "triggerName":false,
              "vehId":false,
              "vehicleName":false
            }
          },
          "pos":[
            -256,
            -4038
          ],
          "type":"events/onBeamNGTrigger"
        },
        "138":{
          "data":{
            "btnName":"Generic Getter"
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            94,
            277
          ],
          "type":"events/interactiveButton"
        },
        "139":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            388,
            -1364
          ],
          "type":"util/customLua"
        },
        "140":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "duration":{
              "type":"number",
              "value":3
            }
          },
          "hiddenPins":{
            "p_in":{
              "biggerText":true,
              "duration":false,
              "flow":false,
              "instant":true,
              "message":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -74,
            -48
          ],
          "type":"ui/flashMessage"
        },
        "141":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1020,
            491
          ],
          "commentText":"",
          "commentTitle":"Car Damage Calc",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -1666,
            -3794
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "142":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            1662,
            2080
          ],
          "string":"steering",
          "type":"types/string"
        },
        "144":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            -60,
            -132
          ],
          "string":"BeamLR Utah Career",
          "type":"types/string"
        },
        "145":{
          "customName":"Set Money Value",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1158,
            -104
          ],
          "type":"types/genericValue"
        },
        "146":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Sell"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            2194,
            -2400
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "147":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            2056,
            701
          ],
          "commentText":"",
          "commentTitle":"Race Generator",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -2506,
            -2254
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "148":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Purchase"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            2096,
            -3450
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "149":{
          "customName":"Get Money Value",
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1774,
            -524
          ],
          "type":"types/genericValue"
        },
        "150":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "duration":{
              "type":"number",
              "value":0.75000000000000022204
            }
          },
          "hiddenPins":{
            "p_in":{
              "duration":false,
              "flow":false,
              "reset":false
            },
            "p_out":{
              "incomplete":false,
              "complete":false,
              "completed":false,
              "flow":false
            }
          },
          "pos":[
            122,
            -20
          ],
          "type":"ui/fadeFromBlack"
        },
        "151":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCarModel"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2664,
            792
          ],
          "type":"types/genericValue"
        },
        "152":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2362,
            -3296
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "153":{
          "data":{},
          "dynamicMode":"once",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "reset":false
            },
            "p_out":{
              "vehicleIds":false,
              "activated":true,
              "flow":false,
              "total":true
            }
          },
          "pos":[
            -914,
            652
          ],
          "type":"gameplay/traffic/trafficActivate"
        },
        "154":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1230,
            491
          ],
          "commentText":"",
          "commentTitle":"Mission Generator",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -2142,
            -2856
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "155":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1796,
            25
          ],
          "type":"logic/bundle"
        },
        "156":{
          "customName":"Random Part MID",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "float":{
              "type":"bool",
              "value":false
            },
            "rangeStart":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "rangeStart":false,
              "float":true,
              "flow":false,
              "rangeEnd":false
            },
            "p_out":{
              "flow":false,
              "random":false
            }
          },
          "pos":[
            -1852,
            -2680
          ],
          "type":"util/randomNumber"
        },
        "157":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal dtable = self.pinIn.mdata.value\nlocal processed = extensions.blrutils.processMissionRandoms(dtable)\n\nlocal trigname = dtable[\"dest\"] or \"nil\"\n\nself.pinOut.destid.value = scenetree.findObject(trigname):getID()\nself.pinOut.desc.value = dtable[\"desc\"]\nself.pinOut.reward.value = tonumber(processed[\"reward\"])\nself.pinOut.gmwp.value = dtable[\"gmwp\"]\nlocal destobj = scenetree.findObjectById(self.pinOut.destid.value)\nlocal destobjpos = destobj:getPosition()\nself.pinOut.destpos.value = {destobjpos.x, destobjpos.y, destobjpos.z}"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "mdata":false
            },
            "p_out":{
              "desc":false,
              "destid":false,
              "destpos":false,
              "flow":false,
              "gmwp":false,
              "reward":false
            }
          },
          "name":"Get Mission Params",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "out",
              "string",
              "desc",
              null,
              ""
            ],
            [
              "out",
              "number",
              "destid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "reward",
              null,
              ""
            ],
            [
              "out",
              "vec3",
              "destpos",
              null,
              ""
            ],
            [
              "in",
              "table",
              "mdata",
              null,
              ""
            ],
            [
              "out",
              "string",
              "gmwp",
              null,
              ""
            ]
          ],
          "pos":[
            -1362,
            -2792
          ],
          "type":"util/customLua"
        },
        "158":{
          "customName":"Set Money",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2656,
            -1392
          ],
          "type":"types/genericValue"
        },
        "159":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            -1362,
            -3744
          ],
          "string":"beamLR/dmgPrices",
          "type":"types/string"
        },
        "160":{
          "customName":"Get Page",
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"carStorePage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1732,
            -2428
          ],
          "type":"types/genericValue"
        },
        "161":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nextensions.customGuiStream.sendDataToUI(\"triggerState\", self.pinIn.type.value)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "type":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"UI Trigger State",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "type",
              null,
              ""
            ]
          ],
          "pos":[
            626,
            -594
          ],
          "type":"util/customLua"
        },
        "162":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "aiMode":{
              "type":"string",
              "value":"traffic"
            },
            "arrestLimit":{
              "type":"number",
              "value":5
            },
            "directionBias":{
              "type":"number",
              "value":0.30000001200000009360
            },
            "evadeLimit":{
              "type":"number",
              "value":20
            },
            "policeStrictness":{
              "type":"number",
              "value":0.10000000100000000502
            },
            "risk":{
              "type":"number",
              "value":0.69999998800000040600
            },
            "spawnRate":{
              "type":"number",
              "value":0.00100000005000000047
            }
          },
          "hiddenPins":{
            "p_in":{
              "aiMode":true,
              "arrestLimit":true,
              "directionBias":true,
              "enableRandomEvents":true,
              "evadeLimit":true,
              "flow":false,
              "policeStrictness":true,
              "poolAmount":false,
              "reset":false,
              "risk":true,
              "spawnRate":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -620,
            652
          ],
          "type":"gameplay/traffic/trafficParams"
        },
        "163":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4448,
            -272
          ],
          "type":"logic/flowSwitch"
        },
        "164":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentMissionDesc"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1110,
            -2820
          ],
          "type":"types/genericValue"
        },
        "165":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = {}\ndtable[\"body\"] = {}\ndtable[\"engine\"] = {}\ndtable[\"powertrain\"] = {}\ndtable[\"wheels\"] = {}\n\ntable.insert(dtable[\"body\"], \"FL\")\ntable.insert(dtable[\"body\"], \"FR\")\ntable.insert(dtable[\"body\"], \"ML\")\ntable.insert(dtable[\"body\"], \"MR\")\ntable.insert(dtable[\"body\"], \"RL\")\ntable.insert(dtable[\"body\"], \"RR\")\n\ntable.insert(dtable[\"engine\"], \"engineReducedTorque\")\ntable.insert(dtable[\"engine\"], \"engineDisabled\")\ntable.insert(dtable[\"engine\"], \"engineLockedUp\")\ntable.insert(dtable[\"engine\"], \"engineIsHydrolocking\")\ntable.insert(dtable[\"engine\"], \"engineHydrolocked\")\ntable.insert(dtable[\"engine\"], \"overRevDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"mildOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"overTorqueDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverTorqueDamage\")\ntable.insert(dtable[\"engine\"], \"impactDamage\")\ntable.insert(dtable[\"engine\"], \"oilpanLeak\")\ntable.insert(dtable[\"engine\"], \"oilRadiatorLeak\")\ntable.insert(dtable[\"engine\"], \"headGasketDamaged\")\ntable.insert(dtable[\"engine\"], \"pistonRingsDamaged\")\ntable.insert(dtable[\"engine\"], \"rodBearingsDamaged\")\ntable.insert(dtable[\"engine\"], \"blockMelted\")\ntable.insert(dtable[\"engine\"], \"oilHot\")\ntable.insert(dtable[\"engine\"], \"cylinderWallsMelted\")\ntable.insert(dtable[\"engine\"], \"radiatorLeak\")\ntable.insert(dtable[\"engine\"], \"coolantHot\")\ntable.insert(dtable[\"engine\"], \"oilLevelCritical\")\ntable.insert(dtable[\"engine\"], \"oilStarvation\")\ntable.insert(dtable[\"engine\"], \"oilLevelTooHigh\")\ntable.insert(dtable[\"engine\"], \"exhaustBroken\")\n\ntable.insert(dtable[\"powertrain\"], \"mainEngine\")\ntable.insert(dtable[\"powertrain\"], \"torqueConverter\")\ntable.insert(dtable[\"powertrain\"], \"gearbox\")\ntable.insert(dtable[\"powertrain\"], \"rangebox\")\ntable.insert(dtable[\"powertrain\"], \"transfercase\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorR\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft\")\ntable.insert(dtable[\"powertrain\"], \"differential_R\")\ntable.insert(dtable[\"powertrain\"], \"transfercase_F\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft_F\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorF\")\ntable.insert(dtable[\"powertrain\"], \"differential_F\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFR\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFR\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRL\")\ntable.insert(dtable[\"powertrain\"], \"clutch\")\n\ntable.insert(dtable[\"wheels\"], \"FR\")\ntable.insert(dtable[\"wheels\"], \"brakeFR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFR\")\ntable.insert(dtable[\"wheels\"], \"tireFR\")\n\ntable.insert(dtable[\"wheels\"], \"FL\")\ntable.insert(dtable[\"wheels\"], \"brakeFL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFL\")\ntable.insert(dtable[\"wheels\"], \"tireFL\")\n\ntable.insert(dtable[\"wheels\"], \"RR\")\ntable.insert(dtable[\"wheels\"], \"brakeRR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRR\")\ntable.insert(dtable[\"wheels\"], \"tireRR\")\n\ntable.insert(dtable[\"wheels\"], \"RL\")\ntable.insert(dtable[\"wheels\"], \"brakeRL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRL\")\ntable.insert(dtable[\"wheels\"], \"tireRL\")\n\n\nself.pinOut.devices.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"All Damage Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            -1348,
            -3548
          ],
          "type":"util/customLua"
        },
        "166":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4658,
            -258
          ],
          "type":"logic/frameDelay"
        },
        "167":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":false,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            164,
            -3940
          ],
          "type":"logic/compare"
        },
        "168":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentMissionDestid"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            178,
            -4094
          ],
          "type":"types/genericValue"
        },
        "169":{
          "customName":"Set Page",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"carStorePage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1984,
            -2302
          ],
          "type":"types/genericValue"
        },
        "170":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            530,
            561
          ],
          "commentText":"",
          "commentTitle":"Main Page",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            1932,
            -2492
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "171":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Next"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            2474,
            -3044
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "172":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Mission In Progress"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            178,
            -3660
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "173":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devices = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\n-- Loop to fetch damage values and add them to table\n\nfor k,v in pairs(devices) do\ndtable[k] = {}\nfor _,dev in pairs(devices[k]) do\n\ntoFetch = \"damageTracker.getDamage('\" .. k .. \"', '\" .. dev .. \"')\"\ncfid = \"dmgtrk\" .. cfidval\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\ndtable[k][dev] = extensions.vluaFetchModule.getVal(cfid)\ncfidval = cfidval + 1\nend\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.damageData.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "devices":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "damageData":false,
              "flow":false,
              "ready":false
            }
          },
          "name":"Detailed Vehicle Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "damageData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            -1110,
            -3576
          ],
          "type":"util/customLua"
        },
        "174":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4882,
            -328
          ],
          "type":"logic/once"
        },
        "175":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3230,
            -2624
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "176":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            290,
            -3394
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "177":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Give Up"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            668,
            -3534
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "178":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            878,
            -3534
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "179":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            170,
            58
          ],
          "commentText":"",
          "commentTitle":"Active flow",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            3958,
            574
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "180":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            4238,
            -370
          ],
          "type":"logic/compare"
        },
        "181":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1622,
            561
          ],
          "commentText":"",
          "commentTitle":"Repair Shop UI",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -420,
            -2296
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "182":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentMissionDesc"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -4,
            -3422
          ],
          "type":"types/genericValue"
        },
        "183":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":3
            },
            "varName":{
              "type":"string",
              "value":"missionState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            864,
            -3450
          ],
          "type":"types/genericValue"
        },
        "184":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"missionState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            668,
            -3226
          ],
          "type":"types/genericValue"
        },
        "185":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Buy & Sell Parts"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            3202,
            -286
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "186":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -760,
            -986
          ],
          "type":"logic/branch"
        },
        "187":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"carShopSelectedSlot"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1480,
            -2736
          ],
          "type":"types/genericValue"
        },
        "188":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1214,
            -1487
          ],
          "type":"logic/bundle"
        },
        "189":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -396,
            -1837
          ],
          "type":"logic/bundle"
        },
        "190":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2202,
            -1585
          ],
          "type":"logic/bundle"
        },
        "191":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Repair Shop"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            -396,
            -2246
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "192":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.data.value\nself.pinOut.name.value = dtable[\"name\"]\nself.pinOut.type.value = dtable[\"type\"]\nself.pinOut.bsfile.value = dtable[\"bsfile\"]\nself.pinOut.config.value = dtable[\"config\"]\nself.pinOut.mfile.value = dtable[\"mfile\"]\nself.pinOut.ifile.value = dtable[\"ifile\"]"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "bsfile":true,
              "config":true,
              "flow":false,
              "ifile":false,
              "mfile":true,
              "name":true,
              "type":true
            }
          },
          "name":"Get BLR Vehicle Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "type",
              null,
              ""
            ],
            [
              "out",
              "string",
              "config",
              null,
              ""
            ],
            [
              "out",
              "string",
              "bsfile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "mfile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "ifile",
              null,
              ""
            ]
          ],
          "pos":[
            206,
            -1910
          ],
          "type":"util/customLua"
        },
        "193":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Repair Car"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            24,
            -1994
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "194":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            24,
            -1868
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "195":{
          "data":{},
          "dynamicMode":"once",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            850,
            -2274
          ],
          "type":"vehicle/recoverInPlace"
        },
        "196":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal enabled = self.pinIn.enable.value\nextensions.customGuiStream.sendDataToUI(\"running\", enabled)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "enable":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "enable":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Custom UI Set Enabled",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "enable",
              null,
              ""
            ]
          ],
          "pos":[
            -116,
            190
          ],
          "type":"util/customLua"
        },
        "197":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "DX":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            -2090,
            -1406
          ],
          "type":"util/customLua"
        },
        "198":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            598,
            -2120
          ],
          "type":"scene/getPlayerVehicle"
        },
        "199":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -2020,
            22
          ],
          "type":"logic/compare"
        },
        "200":{
          "alpha":1,
          "backgroundColor":[
            0.00000099999999747524,
            0.00000083217361179777,
            0.00000083217361179777,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            222,
            200
          ],
          "commentText":"[X] Improve VLUA Fetching module. Store vals\\n     in array with user defined ID as index\\n",
          "commentTitle":"TODO - Detailed Damage",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            1092,
            1554
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "201":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            430,
            -3534
          ],
          "type":"logic/branch"
        },
        "202":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            4210,
            344
          ],
          "type":"scene/getPlayerVehicle"
        },
        "203":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            2334,
            -20
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "204":{
          "customName":"Player Won?",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -522,
            -916
          ],
          "type":"logic/branch"
        },
        "205":{
          "customName":"Set Store Page",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"carStorePage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            38,
            -930
          ],
          "type":"types/genericValue"
        },
        "206":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Complete Mission"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            430,
            -3674
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "207":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.y.value = self.pinIn.x.value + self.pinIn.dx.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "dx":false,
              "flow":false,
              "x":false
            },
            "p_out":{
              "flow":false,
              "y":false
            }
          },
          "name":"Y=X+DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "x",
              null,
              ""
            ],
            [
              "in",
              "number",
              "dx",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ]
          ],
          "pos":[
            612,
            -4038
          ],
          "type":"util/customLua"
        },
        "208":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            388,
            -3982
          ],
          "type":"types/genericValue"
        },
        "209":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Mission Complete"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            -550,
            -3604
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "210":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Exit"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            -340,
            -3282
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "211":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -536,
            -3268
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "212":{
          "customName":"Set Page",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"carStorePage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3216,
            -2526
          ],
          "type":"types/genericValue"
        },
        "213":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal veid = self.pinIn.veid.value\nlocal gid = self.pinIn.gid.value\nextensions.blrutils.garagePaintReload(veid, gid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gid":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Garage Paint",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gid",
              null,
              ""
            ]
          ],
          "pos":[
            5554,
            358
          ],
          "type":"util/customLua"
        },
        "214":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.data.value\nself.pinOut.name.value = dtable[\"name\"]\nself.pinOut.type.value = dtable[\"type\"]\nself.pinOut.bsfile.value = dtable[\"bsfile\"]\nself.pinOut.config.value = dtable[\"config\"]\nself.pinOut.mfile.value = dtable[\"mfile\"]\nself.pinOut.gas.value = tonumber(dtable[\"gas\"])\nself.pinOut.paintdata.value = {paintA=dtable[\"paintA\"], paintB=dtable[\"paintB\"],paintC=dtable[\"paintC\"] }\nself.pinOut.ifile.value = dtable[\"ifile\"]\nself.pinOut.damage.value = tonumber(dtable[\"damage\"])"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "bsfile":false,
              "config":false,
              "damage":false,
              "flow":false,
              "gas":false,
              "ifile":false,
              "mfile":false,
              "name":false,
              "paintdata":false,
              "type":false
            }
          },
          "name":"Get BLR Vehicle Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "type",
              null,
              ""
            ],
            [
              "out",
              "string",
              "config",
              null,
              ""
            ],
            [
              "out",
              "string",
              "bsfile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "mfile",
              null,
              ""
            ],
            [
              "out",
              "number",
              "gas",
              null,
              ""
            ],
            [
              "out",
              "table",
              "paintdata",
              null,
              ""
            ],
            [
              "out",
              "string",
              "ifile",
              null,
              ""
            ],
            [
              "out",
              "number",
              "damage",
              null,
              ""
            ]
          ],
          "pos":[
            4476,
            92
          ],
          "type":"util/customLua"
        },
        "215":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentMissionReward"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -536,
            -3156
          ],
          "type":"types/genericValue"
        },
        "216":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.text.value = string.format(\"Good job!\\n You gained $%d\", self.pinIn.rew.value)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "rew":false
            },
            "p_out":{
              "flow":false,
              "text":false
            }
          },
          "name":"Mission End Text",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "out",
              "string",
              "text",
              null,
              ""
            ],
            [
              "in",
              "number",
              "rew",
              null,
              ""
            ]
          ],
          "pos":[
            -340,
            -3142
          ],
          "type":"util/customLua"
        },
        "217":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -144,
            -3282
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "218":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"math.randomseed(os.time())\nmath.random()\nmath.random()\nmath.random()"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"RNG Init",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ]
          ],
          "pos":[
            94,
            134
          ],
          "type":"util/customLua"
        },
        "219":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nself.pinOut.flag.value = extensions.blrglobals.blrFlagGet(self.pinIn.name.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "name":{
              "type":"string",
              "value":"waitmsg"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "name":false
            },
            "p_out":{
              "flag":false,
              "flow":false
            }
          },
          "name":"BLR Flag Get",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "bool",
              "flag",
              null,
              ""
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ]
          ],
          "pos":[
            -312,
            652
          ],
          "type":"util/customLua"
        },
        "220":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1452,
            -3310
          ],
          "type":"types/genericValue"
        },
        "221":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"missionState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -158,
            -3198
          ],
          "type":"types/genericValue"
        },
        "222":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.filename.value = \"beamLR/garage/car\" .. self.pinIn.id.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "id":false
            },
            "p_out":{
              "filename":false,
              "flow":false
            }
          },
          "name":"Car Data Filename",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "id",
              null,
              ""
            ],
            [
              "out",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            4224,
            120
          ],
          "type":"util/customLua"
        },
        "223":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -340,
            -2848
          ],
          "type":"logic/compare"
        },
        "224":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"missionState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -536,
            -2834
          ],
          "type":"types/genericValue"
        },
        "225":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1958,
            660
          ],
          "commentText":"",
          "commentTitle":"Towing",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            2646,
            672
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "226":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -1362,
            -3436
          ],
          "type":"scene/getPlayerVehicle"
        },
        "227":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "float":{
              "type":"bool",
              "value":false
            },
            "rangeStart":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "rangeStart":false,
              "float":true,
              "flow":false,
              "rangeEnd":false
            },
            "p_out":{
              "flow":false,
              "random":false
            }
          },
          "pos":[
            -1978,
            -2022
          ],
          "type":"util/randomNumber"
        },
        "228":{
          "data":{
            "value":0
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "pos":[
            -536,
            -2708
          ],
          "type":"types/number"
        },
        "229":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.dmgTable.value\nlocal ptable = self.pinIn.priceTable.value\nlocal priceTableKey = \"\"\nlocal currentDamage = false\nlocal partCost = 0\nlocal totalCost = 0\n\nfor k,v in pairs(dtable) do\nif dtable[k] ~= nil then\nfor dev,val in pairs(dtable[k]) do\nif val == true then \npriceTableKey = k .. \".\" .. dev\npartCost = ptable[priceTableKey] or 0\ntotalCost = totalCost+partCost\n\nend\nend\nend\nend\n\ntotalCost = totalCost + (self.pinIn.extDmg.value or 0) / 100 \nself.pinOut.totalCost.value = totalCost"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "priceTable":false,
              "dmgTable":false,
              "extDmg":false,
              "flow":false
            },
            "p_out":{
              "costTable":false,
              "flow":false,
              "totalCost":false
            }
          },
          "name":"Calculate Damage Cost",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "dmgTable",
              null,
              ""
            ],
            [
              "in",
              "table",
              "priceTable",
              null,
              ""
            ],
            [
              "out",
              "number",
              "totalCost",
              null,
              ""
            ],
            [
              "out",
              "table",
              "costTable",
              null,
              ""
            ],
            [
              "in",
              "number",
              "extDmg",
              null,
              ""
            ]
          ],
          "pos":[
            -1110,
            -3744
          ],
          "type":"util/customLua"
        },
        "230":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -298,
            -1154
          ],
          "type":"types/genericValue"
        },
        "231":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1622,
            575
          ],
          "commentText":"",
          "commentTitle":"Buying Mode",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            1428,
            -3206
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "232":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2852,
            -3506
          ],
          "type":"types/genericValue"
        },
        "233":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Car Details"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            1606,
            -3548
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "234":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Not Enough Money!"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2096,
            -3324
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "235":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">=",
          "pos":[
            38,
            -2246
          ],
          "type":"logic/compare"
        },
        "236":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1886,
            -3506
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "237":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -1096,
            -3422
          ],
          "type":"logic/branch"
        },
        "238":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.shopData.value\nlocal cams = {}\nlocal stock = {}\nlocal slots = {}\nlocal models = tonumber(dtable[\"models\"])\n\nfor i=0,tonumber(dtable[\"slots\"]) do\n  if math.random() < tonumber(dtable[\"chance\"]) then\n    stock[i] = \"beamLR/shop/car/\" .. dtable[\"model\" .. math.random(0,models-1)]\n  end\nend\nself.pinOut.stock.value = stock\n\nfor i=0,tonumber(dtable[\"slots\"]) do\n  slots[\"slotp\" .. i] = dtable[\"slotp\" .. i]\n  slots[\"slotr\" .. i] = dtable[\"slotr\" .. i]\n  cams[\"camp\" .. i] = dtable[\"camp\" .. i]\n  cams[\"camr\" .. i] = dtable[\"camr\" .. i]\nend\n\nself.pinOut.cams.value = cams\nself.pinOut.slots.value = slots\nself.pinOut.slotCount.value = tonumber(dtable[\"slots\"])\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "shopData":false
            },
            "p_out":{
              "cams":false,
              "flow":false,
              "slotCount":false,
              "slots":false,
              "stock":false
            }
          },
          "name":"Car Shop Manager",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "out",
              "table",
              "stock",
              null,
              ""
            ],
            [
              "in",
              "table",
              "shopData",
              null,
              ""
            ],
            [
              "out",
              "number",
              "slotCount",
              null,
              ""
            ],
            [
              "out",
              "table",
              "slots",
              null,
              ""
            ],
            [
              "out",
              "table",
              "cams",
              null,
              ""
            ]
          ],
          "pos":[
            1452,
            -2932
          ],
          "type":"util/customLua"
        },
        "239":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            418,
            253
          ],
          "commentText":"Need to switch off this UI even when inside mission giver trigger \\nrange if mission is in progress",
          "commentTitle":"",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -560,
            -2912
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "240":{
          "count":2,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -340,
            -2736
          ],
          "type":"logic/and"
        },
        "241":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = self.pinIn.dtable.value\n\nlocal club = dtable[\"club\"]\nlocal opsp = extensions.blrutils.ssplitnum(dtable[\"opsp\"], \",\")\nlocal opsr = extensions.blrutils.ssplitnum(dtable[\"opsr\"], \",\")\nlocal pstart = extensions.blrutils.ssplitnum(dtable[\"pstart\"], \",\")\nlocal pstrig = dtable[\"pstrig\"]\nlocal cname = dtable[\"cname\"]\n\nself.pinOut.club.value = club\nself.pinOut.opSpawnPos.value = opsp\nself.pinOut.opSpawnRot.value = opsr\nself.pinOut.playerStart.value = pstart\nself.pinOut.pstrigger.value = pstrig\nself.pinOut.cname.value = cname",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "dtable":false,
              "flow":false
            },
            "p_out":{
              "club":false,
              "cname":false,
              "flow":false,
              "opSpawnPos":false,
              "opSpawnRot":false,
              "playerStart":false,
              "pstrigger":false
            }
          },
          "name":"Get Race Club Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "string",
              "club",
              null,
              ""
            ],
            [
              "in",
              "table",
              "dtable",
              null,
              ""
            ],
            [
              "out",
              "vec3",
              "opSpawnPos",
              null,
              ""
            ],
            [
              "out",
              "quat",
              "opSpawnRot",
              null,
              ""
            ],
            [
              "out",
              "vec3",
              "playerStart",
              null,
              ""
            ],
            [
              "out",
              "string",
              "pstrigger",
              null,
              ""
            ],
            [
              "out",
              "string",
              "cname",
              null,
              ""
            ]
          ],
          "pos":[
            374,
            -1266
          ],
          "type":"util/customLua"
        },
        "242":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([%w%p]+)=([%w%p]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            2096,
            -3170
          ],
          "type":"util/customLua"
        },
        "243":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value + self.pinIn.DX.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X+DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            -284,
            -1028
          ],
          "type":"util/customLua"
        },
        "244":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "mode":{
              "type":"string",
              "value":"free"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "mode":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1970,
            -2162
          ],
          "type":"scene/camera/setCameraMode"
        },
        "245":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.file.value = \"beamLR/shop/\" .. self.pinIn.name.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "name":false
            },
            "p_out":{
              "file":false,
              "flow":false
            }
          },
          "name":"Car Shop File",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            1900,
            -3170
          ],
          "type":"util/customLua"
        },
        "246":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            374,
            974
          ],
          "type":"logic/flowSwitch"
        },
        "247":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -942,
            -1140
          ],
          "type":"logic/branch"
        },
        "248":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.data.value\nlocal line = dtable[self.pinIn.prefix.value  .. \"p\" .. self.pinIn.selected.value]\nlocal iter = 0\nlocal posVal = {}\nlocal rotVal = {}\nfor s in string.gmatch(line,\"([^,]+)\") do\n  posVal[iter] = tonumber(s)\n  iter=iter+1\nend\nline = dtable[self.pinIn.prefix.value .. \"r\" .. self.pinIn.selected.value]\niter = 0\nfor s in string.gmatch(line,\"([^,]+)\") do\n  rotVal[iter] = tonumber(s)\n  iter=iter+1\nend\nself.pinOut.pos.value = {posVal[0],posVal[1],posVal[2]}\nself.pinOut.rot.value = {rotVal[0], rotVal[1], rotVal[2], rotVal[3]}\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "prefix":{
              "type":"string",
              "value":"cam"
            }
          },
          "hiddenPins":{
            "p_in":{
              "selected":false,
              "data":false,
              "flow":false,
              "prefix":false
            },
            "p_out":{
              "flow":false,
              "pos":false,
              "rot":false
            }
          },
          "name":"Transform From Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "out",
              "vec3",
              "pos",
              null,
              ""
            ],
            [
              "out",
              "quat",
              "rot",
              null,
              ""
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "prefix",
              null,
              ""
            ],
            [
              "in",
              "number",
              "selected",
              null,
              ""
            ]
          ],
          "pos":[
            1718,
            -2764
          ],
          "type":"util/customLua"
        },
        "249":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            892,
            806
          ],
          "type":"logic/frameDelay"
        },
        "250":{
          "code":{
            "work":"local a = self.pinIn.a.value\nlocal b = self.pinIn.b.value\nlocal en = self.pinIn.cond.value == 1\nself.pinOut.flowA.value = self.pinIn.flowA.value and en\nself.pinOut.flowB.value = self.pinIn.flowB.value and en\nself.pinOut.flowC.value = self.pinIn.flowC.value and en",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "cond":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "cond":false,
              "flow":false,
              "flowA":false,
              "flowB":false,
              "flowC":false
            },
            "p_out":{
              "flowC":false,
              "flow":false,
              "flowA":false,
              "flowB":false
            }
          },
          "name":"Conditional Multiflow",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "cond",
              null,
              ""
            ],
            [
              "in",
              "flow",
              "flowA",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "flowA",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "flowB",
              null,
              ""
            ],
            [
              "in",
              "flow",
              "flowB",
              null,
              ""
            ],
            [
              "in",
              "flow",
              "flowC",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "flowC",
              null,
              ""
            ]
          ],
          "pos":[
            192,
            -748
          ],
          "type":"util/customLua"
        },
        "251":{
          "code":{
            "work":"self.pinOut.progress.value = \"beamLR/races/\" .. self.pinIn.club.value .. \"/progress\"",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "club":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "progress":false
            }
          },
          "name":"Get Club Progress File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "club",
              null,
              ""
            ],
            [
              "out",
              "string",
              "progress",
              null,
              ""
            ]
          ],
          "pos":[
            206,
            -1000
          ],
          "type":"util/customLua"
        },
        "252":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentRepairCost"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -830,
            -3744
          ],
          "type":"types/genericValue"
        },
        "253":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -872,
            -3422
          ],
          "type":"logic/once"
        },
        "254":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"<",
          "pos":[
            2292,
            -3044
          ],
          "type":"logic/compare"
        },
        "255":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">",
          "pos":[
            2292,
            -2890
          ],
          "type":"logic/compare"
        },
        "256":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value + self.pinIn.DX.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X+DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            2656,
            -3114
          ],
          "type":"util/customLua"
        },
        "257":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "input":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "asDuration":true,
              "dt":true,
              "flow":false,
              "input":false,
              "reset":true,
              "reverseHit":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1628,
            -3674
          ],
          "type":"logic/rateLimit"
        },
        "258":{
          "data":{},
          "dynamicMode":"once",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2600,
            -3408
          ],
          "type":"scene/camera/returnToVehicle"
        },
        "259":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1628,
            -3727
          ],
          "type":"logic/bundle"
        },
        "260":{
          "data":{
            "value":1
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "pos":[
            2670,
            -2988
          ],
          "type":"types/number"
        },
        "261":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            2656,
            -2918
          ],
          "type":"util/customLua"
        },
        "262":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"carShopSelectedSlot"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2838,
            -3142
          ],
          "type":"types/genericValue"
        },
        "263":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2810,
            -2736
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "264":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devtable = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\n\nlocal itmd = \"\"\nlocal itsd = \"\"\nlocal splitres = {}\n\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\nfor _,v in pairs(devtable) do\n\nif v == \"odometer\" then \ntoFetch = \"electrics.values.odometer\"\nelseif string.match(v,\"integrity\") then\nsplitres = extensions.blrutils.ssplit(v, \".\")\nitmd = splitres[2]\nitsd = splitres[3]\nif itsd ~= nil then\ntoFetch = \"powertrain.getDevice('\" .. itmd .. \"'):getPartCondition('\" .. itsd .. \"')\"\nelse\ntoFetch = \"powertrain.getDevice('\" .. itmd .. \"'):getPartCondition()\"\nend\nend\n\n\ncfid = \"integ\" .. cfidval\n\nif self.pinIn.uid.value ~= nil then\ncfid = cfid .. self.pinIn.uid.value\nend\n\n-- Fetching main damage tracker value\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\ndtable[v] = extensions.vluaFetchModule.getVal(cfid)\n\n\ncfidval = cfidval + 1\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.integrityData.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "devices":false,
              "flow":false,
              "uid":false
            },
            "p_out":{
              "flow":false,
              "integrityData":false,
              "ready":false
            }
          },
          "name":"Detailed Vehicle Integrity",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ],
            [
              "in",
              "string",
              "uid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "integrityData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ]
          ],
          "pos":[
            1368,
            1814
          ],
          "type":"util/customLua"
        },
        "265":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceDestID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1306,
            -2204
          ],
          "type":"types/genericValue"
        },
        "266":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local toRet = \"\"\nlocal fmt = string.format(\"%%.%df\", self.pinIn.floatPre.value)\nlocal valText = \"\"\n\nif self.pinIn.isFloat.value == true then \nvalText = string.format(fmt, self.pinIn.value.value)\nelse\nvalText = \"\" .. self.pinIn.value.value\nend\n\nif self.pinIn.prefix.value ~= nil and self.pinIn.showPre.value then\ntoRet = self.pinIn.prefix.value .. valText\nelse\ntoRet = self.pinIn.value.value\nend\n\nif self.pinIn.suffix.value ~= nil and self.pinIn.showSuf.value then\ntoRet = toRet .. self.pinIn.suffix.value\nend\n\nself.pinOut.output.value = toRet"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "floatPre":{
              "type":"number",
              "value":2
            },
            "isFloat":{
              "type":"bool",
              "value":true
            },
            "prefix":{
              "type":"string",
              "value":"Repair Cost : $"
            },
            "showPre":{
              "type":"bool",
              "value":true
            },
            "showSuf":{
              "type":"bool",
              "value":false
            },
            "suffix":{
              "type":"string",
              "value":""
            }
          },
          "hiddenPins":{
            "p_in":{
              "floatPre":true,
              "flow":false,
              "isFloat":true,
              "prefix":true,
              "showPre":true,
              "showSuf":true,
              "suffix":true,
              "value":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Prefixed Value Display",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "value",
              null,
              ""
            ],
            [
              "in",
              "string",
              "prefix",
              null,
              ""
            ],
            [
              "out",
              "string",
              "output",
              null,
              ""
            ],
            [
              "in",
              "string",
              "suffix",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "showPre",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "showSuf",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "isFloat",
              null,
              ""
            ],
            [
              "in",
              "number",
              "floatPre",
              null,
              ""
            ]
          ],
          "pos":[
            -186,
            -2134
          ],
          "type":"util/customLua"
        },
        "267":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -214,
            -1910
          ],
          "type":"types/genericValue"
        },
        "268":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devtable = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\n\nlocal itmd = \"\"\nlocal itsd = \"\"\nlocal splitres = {}\n\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\nfor _,v in pairs(devtable) do\n\nif v == \"odometer\" then \ntoFetch = \"electrics.values.odometer\"\nelseif string.match(v,\"integrity\") then\nsplitres = extensions.blrutils.ssplit(v, \".\")\nitmd = splitres[2]\nitsd = splitres[3]\nif itsd ~= nil then\ntoFetch = \"powertrain.getDevice('\" .. itmd .. \"'):getPartCondition('\" .. itsd .. \"')\"\nelse\ntoFetch = \"powertrain.getDevice('\" .. itmd .. \"'):getPartCondition()\"\nend\nend\n\n\ncfid = \"integ\" .. cfidval\n\nif self.pinIn.uid.value ~= nil then\ncfid = cfid .. self.pinIn.uid.value\nend\n\n-- Fetching main damage tracker value\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\ndtable[v] = extensions.vluaFetchModule.getVal(cfid)\n\n\ncfidval = cfidval + 1\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.integrityData.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "uid":{
              "type":"string",
              "value":"giteg"
            }
          },
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "devices":false,
              "flow":false,
              "uid":false
            },
            "p_out":{
              "flow":false,
              "integrityData":false,
              "ready":false
            }
          },
          "name":"Detailed Vehicle Integrity",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ],
            [
              "in",
              "string",
              "uid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "integrityData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ]
          ],
          "pos":[
            5778,
            -468
          ],
          "type":"util/customLua"
        },
        "269":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -2776,
            428
          ],
          "type":"logic/compare"
        },
        "270":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentRepairCost"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -172,
            -2246
          ],
          "type":"types/genericValue"
        },
        "271":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Not enough money!"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            38,
            -2092
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "272":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            822,
            -2036
          ],
          "type":"util/customLua"
        },
        "273":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal veid = self.pinIn.veid.value\nlocal file = self.pinIn.file.value\nextensions.mechDamageLoader.loadIntegrityFromFile(file,veid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            5330,
            330
          ],
          "type":"util/customLua"
        },
        "274":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"uiTriggerState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            430,
            -706
          ],
          "type":"types/genericValue"
        },
        "275":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal currentMission = self.pinIn.raceData.value\nlocal processedMission = extensions.blrutils.processRaceRandoms(currentMission)\n\nself.pinOut.desc.value = currentMission.desc\nself.pinOut.wager.value = processedMission[\"wager\"]\nself.pinOut.slips.value = currentMission.slips\n\nself.pinOut.opModel.value = processedMission[\"enemyModel\"]\nself.pinOut.opConfig.value = processedMission[\"enemyConfig\"]\nself.pinOut.opRisk.value = processedMission[\"enemyRisk\"]\n\nself.pinOut.basePrice.value = currentMission.enemyBasePrice\nself.pinOut.partPrice.value = currentMission.enemyPartPrice\nself.pinOut.scrapVal.value = currentMission.enemyScrapVal\nself.pinOut.paintdata.value = currentMission.enemyPaint\n\nself.pinOut.laps.value = processedMission[\"laps\"]\n\nself.pinOut.triggers.value = currentMission.triggers\nself.pinOut.wayps.value = currentMission.waypoints\nself.pinOut.cpcount.value = tonumber(currentMission.cpcount)\nself.pinOut.opifile.value = currentMission.ifile\nself.pinOut.useTraffic.value = tonumber(currentMission.traffic)\nself.pinOut.opAvoid.value = tonumber(currentMission.enemyAvoid)\n\nlocal ttable = extensions.blrutils.ssplit(currentMission.triggers, \",\")\nlocal wtable = extensions.blrutils.ssplit(currentMission.waypoints, \",\")\n\nself.pinOut.destid.value = scenetree.findObject(ttable[1]):getID()\nself.pinOut.aiwp.value = wtable[1]\n\nself.pinOut.parts.value = processedMission[\"parts\"]\nself.pinOut.reputation.value = processedMission[\"rep\"]",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "raceData":false
            },
            "p_out":{
              "aiwp":false,
              "basePrice":false,
              "cpcount":false,
              "desc":false,
              "destid":false,
              "flow":false,
              "laps":false,
              "opAvoid":false,
              "opConfig":false,
              "opModel":false,
              "opRisk":false,
              "opifile":false,
              "paintdata":false,
              "partPrice":false,
              "parts":false,
              "reputation":false,
              "scrapVal":false,
              "slips":false,
              "triggers":false,
              "useTraffic":false,
              "wager":false,
              "wayps":false
            }
          },
          "name":"Race Specific Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "number",
              "destid",
              null,
              ""
            ],
            [
              "out",
              "string",
              "desc",
              null,
              ""
            ],
            [
              "out",
              "string",
              "aiwp",
              null,
              ""
            ],
            [
              "out",
              "number",
              "wager",
              null,
              ""
            ],
            [
              "out",
              "number",
              "slips",
              null,
              ""
            ],
            [
              "out",
              "string",
              "opModel",
              null,
              ""
            ],
            [
              "out",
              "string",
              "opConfig",
              null,
              ""
            ],
            [
              "out",
              "number",
              "opRisk",
              null,
              ""
            ],
            [
              "in",
              "table",
              "raceData",
              null,
              ""
            ],
            [
              "out",
              "number",
              "basePrice",
              null,
              ""
            ],
            [
              "out",
              "number",
              "partPrice",
              null,
              ""
            ],
            [
              "out",
              "number",
              "scrapVal",
              null,
              ""
            ],
            [
              "out",
              "string",
              "paintdata",
              null,
              ""
            ],
            [
              "out",
              "number",
              "laps",
              null,
              ""
            ],
            [
              "out",
              "string",
              "triggers",
              null,
              ""
            ],
            [
              "out",
              "string",
              "wayps",
              null,
              ""
            ],
            [
              "out",
              "number",
              "cpcount",
              null,
              ""
            ],
            [
              "out",
              "string",
              "opifile",
              null,
              ""
            ],
            [
              "out",
              "number",
              "useTraffic",
              null,
              ""
            ],
            [
              "out",
              "number",
              "opAvoid",
              null,
              ""
            ],
            [
              "out",
              "string",
              "parts",
              null,
              ""
            ],
            [
              "out",
              "number",
              "reputation",
              null,
              ""
            ]
          ],
          "pos":[
            -1656,
            -2218
          ],
          "type":"util/customLua"
        },
        "276":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal fullpath = self.pinIn.filename.value\nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(\"beamstate.load(\\\"\" .. fullpath .. \"\\\")\" )\nself.pinOut.dbgval.value = fullpath"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "dbgval":false,
              "flow":false
            }
          },
          "name":"Load Beamstate From File",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "string",
              "dbgval",
              null,
              ""
            ]
          ],
          "pos":[
            4994,
            204
          ],
          "type":"util/customLua"
        },
        "277":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1776,
            534
          ],
          "commentText":"Spawn in chosen garaged car and loads its beamstate\\nUses current car       pos and rot to spawn",
          "commentTitle":"Load Garaged Car",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            4200,
            28
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "278":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"uiTriggerState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            752,
            -678
          ],
          "type":"types/genericValue"
        },
        "279":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = extensions.mechDamageLoader.getIntegrityDevices()\nself.pinOut.devices.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"Integrity Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            1368,
            1716
          ],
          "type":"util/customLua"
        },
        "280":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -46,
            -328
          ],
          "type":"scene/getPlayerVehicle"
        },
        "281":{
          "data":{
            "filterName":""
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "enter":false,
              "exit":false,
              "flow":false,
              "triggerId":false,
              "triggerName":false,
              "vehId":false,
              "vehicleName":false
            }
          },
          "pos":[
            -32,
            -720
          ],
          "type":"events/onBeamNGTrigger"
        },
        "282":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            430,
            -2120
          ],
          "type":"types/genericValue"
        },
        "283":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":true,
              "carUsed":true,
              "flow":false,
              "health":true,
              "money":false,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            626,
            -2050
          ],
          "type":"util/customLua"
        },
        "284":{
          "customName":"Tow To",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "x":{
              "type":"number",
              "value":757.05602999999996427505
            },
            "y":{
              "type":"number",
              "value":-145.08599899999998683597
            },
            "z":{
              "type":"number",
              "value":144.61500499999999647116
            }
          },
          "hiddenPins":{
            "p_in":{
              "z":true,
              "flow":false,
              "x":false,
              "y":true
            },
            "p_out":{
              "flow":false,
              "value":false
            }
          },
          "pos":[
            2908,
            1114
          ],
          "type":"types/vec3"
        },
        "285":{
          "alpha":1,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"config file\\nto player\\ngarage for\\npart edit\\nsystem to\\nwork fine\\n",
          "commentTitle":"now copies",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            2450,
            -3486
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "286":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal fullpath = self.pinIn.filename.value\nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(\"beamstate.save(\\\"\" .. fullpath .. \"\\\")\" )\nself.pinOut.dbgval.value = fullpath\n\n\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "dbgval":false,
              "flow":false
            }
          },
          "name":"Save Beamstate To File",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "string",
              "dbgval",
              null,
              ""
            ]
          ],
          "pos":[
            4658,
            -510
          ],
          "type":"util/customLua"
        },
        "287":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1874,
            491
          ],
          "commentText":"Saves current car beamstate before it is despawned",
          "commentTitle":"Save Current Car",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            4200,
            -644
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "288":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.filename.value = \"beamLR/garage/car\" .. self.pinIn.id.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "id":false
            },
            "p_out":{
              "filename":false,
              "flow":false
            }
          },
          "name":"Car Data Filename",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "id",
              null,
              ""
            ],
            [
              "out",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            948,
            134
          ],
          "type":"util/customLua"
        },
        "289":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":true,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":true,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -3476,
            -342
          ],
          "type":"logic/compare"
        },
        "290":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePlayerTriggerID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2986,
            190
          ],
          "type":"types/genericValue"
        },
        "291":{
          "code":{
            "work":"local toRet = \"\"\ntoRet = toRet .. self.pinIn.desc.value .. \"\\n\\nLaps : \" .. self.pinIn.laps.value .. \"\\nCheckpoints : \" .. self.pinIn.cpc.value .. \"\\nOpponent : \" .. self.pinIn.opmodel.value .. \"\\n\"\n\nif self.pinIn.slips.value ~= 0 then\nlocal sev = self.pinIn.ebp.value + self.pinIn.epp.value\nif self.pinIn.wager.value == 0 then\ntoRet = toRet .. \"Wager : Pink Slips ($ \" .. sev .. \" Value)\\n\"\nelse\ntoRet = toRet .. \"Wager : Pink Slips ($ \" .. sev .. \" Value) + $\" .. self.pinIn.wager.value .. \"\\n\"\nend\nelse\ntoRet = toRet .. \"Wager : $\" .. self.pinIn.wager.value .. \"\\n\"\nend\n\nif self.pinIn.reputation.value ~= 0 then\ntoRet = toRet .. \"Rep Reward: \" .. self.pinIn.reputation.value .. \"\\n\"\nend\n\nif self.pinIn.parts.value ~= \"none\" then\ntoRet = toRet .. \"Part Reward: \" .. self.pinIn.parts.value .. \"\\n\"\nend\n\nself.pinOut.full.value = toRet\n\nself.pinOut.canPay.value = self.pinIn.pcash.value >= self.pinIn.wager.value\n ",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "cpc":false,
              "desc":false,
              "ebp":false,
              "epp":false,
              "flow":false,
              "laps":false,
              "opmodel":false,
              "parts":false,
              "pcash":false,
              "reputation":false,
              "slips":false,
              "wager":false
            },
            "p_out":{
              "canPay":false,
              "flow":false,
              "full":false
            }
          },
          "name":"Race Description",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "string",
              "full",
              null,
              ""
            ],
            [
              "in",
              "string",
              "desc",
              null,
              ""
            ],
            [
              "in",
              "number",
              "wager",
              null,
              ""
            ],
            [
              "in",
              "number",
              "slips",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "canPay",
              null,
              ""
            ],
            [
              "in",
              "number",
              "pcash",
              null,
              ""
            ],
            [
              "in",
              "number",
              "ebp",
              null,
              ""
            ],
            [
              "in",
              "number",
              "epp",
              null,
              ""
            ],
            [
              "in",
              "number",
              "laps",
              null,
              ""
            ],
            [
              "in",
              "number",
              "cpc",
              null,
              ""
            ],
            [
              "in",
              "number",
              "reputation",
              null,
              ""
            ],
            [
              "in",
              "string",
              "parts",
              null,
              ""
            ],
            [
              "in",
              "string",
              "opmodel",
              null,
              ""
            ]
          ],
          "pos":[
            -1404,
            -1210
          ],
          "type":"util/customLua"
        },
        "292":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2348,
            -3772
          ],
          "type":"types/genericValue"
        },
        "293":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "block":{
              "type":"bool",
              "value":true
            },
            "ignoreUnrestriced":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "block":true,
              "flow":false,
              "id":true,
              "ignoreUnrestriced":true,
              "reset":false
            },
            "p_out":{
              "flow":false,
              "id":true
            }
          },
          "list":[
            "dropPlayerAtCamera",
            "faster_motion",
            "loadHome",
            "nodegrabberAction",
            "nodegrabberStrength",
            "parts_selector",
            "recover_vehicle",
            "reload_all_vehicles",
            "reload_vehicle",
            "saveHome",
            "slower_motion",
            "switch_next_vehicle",
            "switch_previous_vehicle",
            "toggleAITraffic",
            "toggleCamera",
            "toggleTraffic",
            "toggle_slow_motion",
            "vehicle_selector"
          ],
          "pos":[
            -494,
            64
          ],
          "type":"input/blacklistAction"
        },
        "294":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1004,
            -2022
          ],
          "type":"types/genericValue"
        },
        "295":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.data.value\nself.pinOut.name.value = dtable[\"name\"]\nself.pinOut.type.value = dtable[\"type\"]\nself.pinOut.bsfile.value = dtable[\"bsfile\"]\nself.pinOut.config.value = dtable[\"config\"]\nself.pinOut.mfile.value = dtable[\"mfile\"]\nself.pinOut.gas.value = tonumber(dtable[\"gas\"])\nself.pinOut.paintdata.value = {paintA=dtable[\"paintA\"], paintB=dtable[\"paintB\"],paintC=dtable[\"paintC\"] }\nself.pinOut.ifile.value = dtable[\"ifile\"]\nself.pinOut.damage.value = tonumber(dtable[\"damage\"])"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "bsfile":false,
              "config":false,
              "damage":false,
              "flow":false,
              "gas":false,
              "ifile":false,
              "mfile":false,
              "name":false,
              "paintdata":false,
              "type":false
            }
          },
          "name":"Get BLR Vehicle Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "type",
              null,
              ""
            ],
            [
              "out",
              "string",
              "config",
              null,
              ""
            ],
            [
              "out",
              "string",
              "bsfile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "mfile",
              null,
              ""
            ],
            [
              "out",
              "number",
              "gas",
              null,
              ""
            ],
            [
              "out",
              "table",
              "paintdata",
              null,
              ""
            ],
            [
              "out",
              "string",
              "ifile",
              null,
              ""
            ],
            [
              "out",
              "number",
              "damage",
              null,
              ""
            ]
          ],
          "pos":[
            1200,
            148
          ],
          "type":"util/customLua"
        },
        "296":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceDesc"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1642,
            -1266
          ],
          "type":"types/genericValue"
        },
        "297":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(self.pinIn.name.value, self.pinIn.flag.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "flag":{
              "type":"bool",
              "value":false
            },
            "name":{
              "type":"string",
              "value":"trafficEnable"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flag":false,
              "flow":false,
              "name":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLR Flag Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            -3658,
            -244
          ],
          "type":"util/customLua"
        },
        "298":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value + self.pinIn.DX.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X+DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            2600,
            -3604
          ],
          "type":"util/customLua"
        },
        "299":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal k = self.pinIn.key.value\nlocal v = self.pinIn.val.value\nextensions.blrglobals.fgSetVal(k,v)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"cgas"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLRGlobal Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "in",
              "any",
              "val",
              null,
              ""
            ]
          ],
          "pos":[
            2348,
            -146
          ],
          "type":"util/customLua"
        },
        "300":{
          "data":{
            "value":1
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "pos":[
            2600,
            -3478
          ],
          "type":"types/number"
        },
        "301":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            614,
            316
          ],
          "commentText":"",
          "commentTitle":"Detailed Damage Example",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            1078,
            1288
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "302":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2810,
            -3646
          ],
          "type":"types/genericValue"
        },
        "303":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            542,
            176
          ],
          "type":"types/genericValue"
        },
        "304":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            1564,
            -1266
          ],
          "string":"Gas Station\\n",
          "type":"types/string"
        },
        "305":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            1116,
            1478
          ],
          "type":"scene/getPlayerVehicle"
        },
        "306":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal key = self.pinIn.wid.value .. \"x\"\nif dtable[key] ~= nil then\nself.pinOut.x.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"y\"\nself.pinOut.y.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"w\"\nself.pinOut.w.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"h\"\nself.pinOut.h.value = tonumber(dtable[key])\nelse\nself.pinOut.x.value = 100\nself.pinOut.y.value = 100\nself.pinOut.w.value = 200\nself.pinOut.h.value = 220\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "wid":{
              "type":"string",
              "value":"stat"
            }
          },
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "wid":false
            },
            "p_out":{
              "flow":false,
              "h":false,
              "w":false,
              "x":false,
              "y":false
            }
          },
          "name":"Get IM Prefs",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "x",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ],
            [
              "out",
              "number",
              "w",
              null,
              ""
            ],
            [
              "out",
              "number",
              "h",
              null,
              ""
            ]
          ],
          "pos":[
            1774,
            -608
          ],
          "type":"util/customLua"
        },
        "307":{
          "alpha":1,
          "backgroundColor":[
            0.00000099999999747524,
            0.00000099998999303352,
            0.00000099998999303352,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"[X] Update mainData file to reflect change in car count & money\\n[~] mainData car names removal: need garage UI to fetch names\\n[  ] Set maximum traffic visible value to 0 while in store UI?",
          "commentTitle":"                                      TODO LIST",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            2996,
            -3710
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "308":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrutils.cameraReset()",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Force Reset Camera",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ]
          ],
          "pos":[
            -606,
            1646
          ],
          "type":"util/customLua"
        },
        "309":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "active":true,
              "corner_BL":true,
              "corner_BR":true,
              "corner_FL":true,
              "corner_FR":true,
              "damage":false,
              "dirVec":true,
              "dirVecUp":true,
              "flow":false,
              "position":true,
              "rotation":true,
              "velocity":true,
              "velocityVector":true,
              "wheelCenter":true
            }
          },
          "pos":[
            -1642,
            -3506
          ],
          "type":"vehicle/vehicleData"
        },
        "310":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"uiTriggerState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            388,
            -804
          ],
          "type":"types/genericValue"
        },
        "311":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -830,
            1548
          ],
          "type":"logic/branch"
        },
        "312":{
          "code":{
            "work":"be.nodeGrabber:addStrength(-100)\nbe.nodeGrabber:addStrength(self.pinIn.strength.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "strength":{
              "type":"number",
              "value":15
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "strength":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Forced Grab Strength",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "strength",
              null,
              ""
            ]
          ],
          "pos":[
            -116,
            358
          ],
          "type":"util/customLua"
        },
        "313":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal itable = self.pinIn.iteg.value\nlocal file = self.pinIn.file.value\nextensions.mechDamageLoader.saveIntegrityToFile(file, itable)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "file":{
              "type":"string",
              "value":"beamLR/testIntegrity"
            }
          },
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "iteg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "iteg",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            1368,
            1968
          ],
          "type":"util/customLua"
        },
        "314":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"leagueProgressUpdate"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2202,
            -1672
          ],
          "type":"types/genericValue"
        },
        "315":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2580,
            -2624
          ],
          "type":"logic/frameDelay"
        },
        "316":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nextensions.betterpartmgmt.setFilter(\"all\")\n\nlocal list = extensions.betterpartmgmt.getAvailablePartList()\nlist = extensions.betterpartmgmt.categoryFilter(list, true)\nextensions.customGuiStream.sendDataToUI(\"availParts\", list)\n\nlist = extensions.betterpartmgmt.getGarageUIData()\nlist = extensions.betterpartmgmt.categoryFilter(list, true)\nextensions.customGuiStream.sendDataToUI(\"garageData\", list)\n\nlist = extensions.betterpartmgmt.getPartPriceLibrary()\nextensions.customGuiStream.sendDataToUI(\"partPrices\", list)\n\nlist = extensions.betterpartmgmt.getTuningUIData()\nextensions.customGuiStream.sendDataToUI(\"tuningData\", list)\n\nlist = extensions.betterpartmgmt.getTuningUIValues()\nextensions.customGuiStream.sendDataToUI(\"tuningValues\", list)\nextensions.customGuiStream.sendDataToUI(\"tuningValuesSlider\", list)\nextensions.customGuiStream.sendDataToUI(\"tuningValuesNumfield\", list)\n\nextensions.customGuiCallbacks.exec(\"reloadPaint\")\n\nlist = extensions.betterpartmgmt.getPartPreviewImageTable()\nextensions.customGuiStream.sendDataToUI(\"partpreview\", list )\n"
          },
          "customName":"Send UI Data",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"UI Part List",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ]
          ],
          "pos":[
            598,
            -496
          ],
          "type":"util/customLua"
        },
        "317":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1216,
            604
          ],
          "commentText":"",
          "commentTitle":"Save Mechanical Damage Example",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            378,
            1666
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "318":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2412,
            725
          ],
          "type":"logic/bundle"
        },
        "319":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "active":true,
              "damage":false,
              "dirVec":true,
              "dirVecUp":true,
              "flow":false,
              "position":false,
              "rotation":false,
              "velocity":true,
              "velocityVector":true
            }
          },
          "pos":[
            1144,
            428
          ],
          "type":"vehicle/vehicleMapData"
        },
        "320":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "active":true,
              "damage":false,
              "dirVec":true,
              "dirVecUp":true,
              "flow":false,
              "position":true,
              "rotation":true,
              "velocity":true,
              "velocityVector":true
            }
          },
          "pos":[
            1984,
            -104
          ],
          "type":"vehicle/vehicleMapData"
        },
        "321":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "active":true,
              "damage":true,
              "dirVec":true,
              "dirVecUp":true,
              "flow":false,
              "position":false,
              "rotation":false,
              "velocity":true,
              "velocityVector":true
            }
          },
          "pos":[
            4238,
            428
          ],
          "type":"vehicle/vehicleMapData"
        },
        "322":{
          "code":{
            "work":"local dtable = {}\ndtable[\"engine\"] = {}\ndtable[\"powertrain\"] = {}\ndtable[\"wheels\"] = {}\n\ntable.insert(dtable[\"engine\"], \"engineReducedTorque\")\ntable.insert(dtable[\"engine\"], \"engineDisabled\")\ntable.insert(dtable[\"engine\"], \"engineLockedUp\")\ntable.insert(dtable[\"engine\"], \"engineIsHydrolocking\")\ntable.insert(dtable[\"engine\"], \"engineHydrolocked\")\ntable.insert(dtable[\"engine\"], \"overRevDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"mildOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"overTorqueDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverTorqueDamage\")\ntable.insert(dtable[\"engine\"], \"impactDamage\")\ntable.insert(dtable[\"engine\"], \"oilpanLeak\")\ntable.insert(dtable[\"engine\"], \"oilRadiatorLeak\")\ntable.insert(dtable[\"engine\"], \"headGasketDamaged\")\ntable.insert(dtable[\"engine\"], \"pistonRingsDamaged\")\ntable.insert(dtable[\"engine\"], \"rodBearingsDamaged\")\ntable.insert(dtable[\"engine\"], \"blockMelted\")\ntable.insert(dtable[\"engine\"], \"oilHot\")\ntable.insert(dtable[\"engine\"], \"cylinderWallsMelted\")\ntable.insert(dtable[\"engine\"], \"radiatorLeak\")\ntable.insert(dtable[\"engine\"], \"coolantHot\")\ntable.insert(dtable[\"engine\"], \"oilLevelCritical\")\ntable.insert(dtable[\"engine\"], \"oilStarvation\")\ntable.insert(dtable[\"engine\"], \"oilLevelTooHigh\")\ntable.insert(dtable[\"engine\"], \"exhaustBroken\")\n\ntable.insert(dtable[\"powertrain\"], \"mainEngine\")\ntable.insert(dtable[\"powertrain\"], \"torqueConverter\")\ntable.insert(dtable[\"powertrain\"], \"gearbox\")\ntable.insert(dtable[\"powertrain\"], \"rangebox\")\ntable.insert(dtable[\"powertrain\"], \"transfercase\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorR\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft\")\ntable.insert(dtable[\"powertrain\"], \"differential_R\")\ntable.insert(dtable[\"powertrain\"], \"transfercase_F\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft_F\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorF\")\ntable.insert(dtable[\"powertrain\"], \"differential_F\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFR\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFR\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRL\")\ntable.insert(dtable[\"powertrain\"], \"clutch\")\n\ntable.insert(dtable[\"wheels\"], \"FR\")\ntable.insert(dtable[\"wheels\"], \"brakeFR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFR\")\ntable.insert(dtable[\"wheels\"], \"tireFR\")\n\ntable.insert(dtable[\"wheels\"], \"FL\")\ntable.insert(dtable[\"wheels\"], \"brakeFL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFL\")\ntable.insert(dtable[\"wheels\"], \"tireFL\")\n\ntable.insert(dtable[\"wheels\"], \"RR\")\ntable.insert(dtable[\"wheels\"], \"brakeRR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRR\")\ntable.insert(dtable[\"wheels\"], \"tireRR\")\n\ntable.insert(dtable[\"wheels\"], \"RL\")\ntable.insert(dtable[\"wheels\"], \"brakeRL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRL\")\ntable.insert(dtable[\"wheels\"], \"tireRL\")\n\n\nself.pinOut.devices.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"Mech Damage Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            836,
            1716
          ],
          "type":"util/customLua"
        },
        "323":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nself.pinOut.flag.value = extensions.blrglobals.blrFlagGet(self.pinIn.name.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "name":{
              "type":"string",
              "value":"careerResetRequest"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "name":false
            },
            "p_out":{
              "flag":false,
              "flow":false
            }
          },
          "name":"BLR Flag Get",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "bool",
              "flag",
              null,
              ""
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ]
          ],
          "pos":[
            -326,
            2206
          ],
          "type":"util/customLua"
        },
        "324":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devices = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\nlocal cfidb = \"\"\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\n-- Loop to fetch damage values and add them to table\n\nfor k,v in pairs(devices) do\ndtable[k] = {}\nfor _,dev in pairs(devices[k]) do\n\ntoFetch = \"damageTracker.getDamage('\" .. k .. \"', '\" .. dev .. \"')\"\ncfid = \"dmgtrk\" .. cfidval\n\nif self.pinIn.uid.value ~= nil then\ncfid = cfid .. self.pinIn.uid.value\nend\n\n\nif dev == \"engineReducedTorque\" or dev == \"mildOverrevDamage\" or dev == \"catastrophicOverTorqueDamage\" then\ncfidb = cfid .. \"B\"\nend\n\n-- Fetching main damage tracker value\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\n\n-- Now fetching extra values in some cases\nif dev == \"engineReducedTorque\" or dev == \"mildOverrevDamage\" then\ntoFetch = \"powertrain.getDevice('mainEngine').outputTorqueState\"\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfidb ..\"'))\" \nve:queueLuaCommand(vecmd)\ndtable[k][dev] = tostring(extensions.vluaFetchModule.getVal(cfid)) .. \",\" .. tostring(extensions.vluaFetchModule.getVal(cfidb))\nelseif dev == \"catastrophicOverTorqueDamage\" then\ntoFetch = \"powertrain.getDevice('mainEngine').overTorqueDamage\"\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfidb ..\"'))\" \nve:queueLuaCommand(vecmd)\ndtable[k][dev] = tostring(extensions.vluaFetchModule.getVal(cfid)) .. \",\" .. tostring(extensions.vluaFetchModule.getVal(cfidb))\nelse\ndtable[k][dev] = extensions.vluaFetchModule.getVal(cfid)\nend\n\n\ncfidval = cfidval + 1\nend\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.damageData.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "devices":false,
              "flow":false,
              "uid":false
            },
            "p_out":{
              "damageData":false,
              "flow":false,
              "ready":false
            }
          },
          "name":"Detailed Vehicle Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "damageData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ],
            [
              "in",
              "string",
              "uid",
              null,
              ""
            ]
          ],
          "pos":[
            1116,
            1730
          ],
          "type":"util/customLua"
        },
        "325":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            836,
            1814
          ],
          "type":"scene/getPlayerVehicle"
        },
        "326":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            838,
            450
          ],
          "commentText":"BLRGlobals system to hand out       certain data to custom LUA and custom UI code\\nLike player money               for part purchases UI",
          "commentTitle":"BLRGlobals",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -2436,
            630
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "327":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal k = self.pinIn.key.value\nlocal v = self.pinIn.val.value\nextensions.blrglobals.fgSetVal(k,v)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLRGlobal Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "in",
              "any",
              "val",
              null,
              ""
            ]
          ],
          "pos":[
            -1978,
            778
          ],
          "type":"util/customLua"
        },
        "328":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = self.pinIn.dmg.value\nextensions.mechDamageLoader.saveDamageToFile(self.pinIn.file.value, dtable)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "dmg":false,
              "file":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Mech Damage",
          "pins":[
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "dmg",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            1144,
            1884
          ],
          "type":"util/customLua"
        },
        "329":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\n    print(\"Key : \" .. k .. \"\\nVal : \" .. v)\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            -2020,
            -1630
          ],
          "type":"util/customLua"
        },
        "330":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2160,
            806
          ],
          "type":"types/genericValue"
        },
        "331":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal k = self.pinIn.key.value\nlocal flag = extensions.blrglobals.getFlag(k)\nlocal toRet = extensions.blrglobals.fgGetVal(k)\nself.pinOut.val.value = toRet\nself.pinOut.flag.value = flag\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false
            },
            "p_out":{
              "flag":false,
              "flow":false,
              "val":false
            }
          },
          "name":"BLRGlobal Get",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "out",
              "any",
              "val",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            -2160,
            904
          ],
          "type":"util/customLua"
        },
        "332":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            2670,
            1198
          ],
          "type":"scene/getPlayerVehicle"
        },
        "333":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">=",
          "pos":[
            2670,
            890
          ],
          "type":"logic/compare"
        },
        "334":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2670,
            764
          ],
          "type":"types/genericValue"
        },
        "335":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            1564,
            -1182
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "336":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal veid = self.pinIn.veid.value\nlocal file = self.pinIn.file.value\nextensions.mechDamageLoader.loadIntegrityFromFile(file,veid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "file":{
              "type":"string",
              "value":"beamLR/testIntegrity"
            }
          },
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            1368,
            2108
          ],
          "type":"util/customLua"
        },
        "337":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal veid = self.pinIn.veid.value\nlocal file = self.pinIn.file.value\nextensions.mechDamageLoader.loadIntegrityFromFile(file,veid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            1522,
            778
          ],
          "type":"util/customLua"
        },
        "338":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            320,
            659
          ],
          "commentText":"",
          "commentTitle":"Race Enemy Settings Loader",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -2002,
            -714
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "339":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1922,
            -675
          ],
          "type":"logic/bundle"
        },
        "340":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            558,
            324
          ],
          "commentText":"Used for part buying so it \\nalso updates inventory.",
          "commentTitle":"Player Money Sync",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -2184,
            728
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "341":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal fn = self.pinIn.file.value\nlocal vid = self.pinIn.vid.value\nextensions.mechDamageLoader.loadDamageFromFile(fn,vid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "vid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Mech Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "vid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            1074,
            2066
          ],
          "type":"util/customLua"
        },
        "342":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal useVeh = self.pinIn.useVeh.value\nlocal model = self.pinIn.model.value\nlocal config = self.pinIn.config.value\nlocal pos = vec3(self.pinIn.pos.value)\nlocal rot = quat(self.pinIn.rot.value)\nlocal paint = self.pinIn.paintdata.value\nlocal paintData = extensions.blrutils.ssplit(paint, \",\")\nlocal spawnPaint = extensions.blrutils.createPaint(paintData)\nlocal spawnOptions = {config = config, pos = pos, rot = rot, paint = spawnPaint, autoEnterVehicle = useVeh}\nlocal veh = extensions.core_vehicles.spawnNewVehicle(model, spawnOptions)\nself.pinOut.veid.value = veh:getId()\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "customName":"BLR Spawn Veh (SINGLE PAINT)",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "useVeh":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "config":false,
              "flow":false,
              "model":false,
              "paintdata":false,
              "pos":false,
              "rot":false,
              "useVeh":true
            },
            "p_out":{
              "flow":false,
              "veid":false
            }
          },
          "name":"BLR Spawn Veh",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "model",
              null,
              ""
            ],
            [
              "in",
              "string",
              "config",
              null,
              ""
            ],
            [
              "in",
              "vec3",
              "pos",
              null,
              ""
            ],
            [
              "in",
              "quat",
              "rot",
              null,
              ""
            ],
            [
              "in",
              "string",
              "paintdata",
              null,
              ""
            ],
            [
              "out",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "useVeh",
              null,
              ""
            ]
          ],
          "pos":[
            -1446,
            -538
          ],
          "type":"util/customLua"
        },
        "343":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            2894,
            1226
          ],
          "type":"util/customLua"
        },
        "344":{
          "code":{
            "work":"local dtable = {}\ndtable[\"engine\"] = {}\ndtable[\"powertrain\"] = {}\ndtable[\"wheels\"] = {}\n\ntable.insert(dtable[\"engine\"], \"engineReducedTorque\")\ntable.insert(dtable[\"engine\"], \"engineDisabled\")\ntable.insert(dtable[\"engine\"], \"engineLockedUp\")\ntable.insert(dtable[\"engine\"], \"engineIsHydrolocking\")\ntable.insert(dtable[\"engine\"], \"engineHydrolocked\")\ntable.insert(dtable[\"engine\"], \"overRevDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"mildOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"overTorqueDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverTorqueDamage\")\ntable.insert(dtable[\"engine\"], \"impactDamage\")\ntable.insert(dtable[\"engine\"], \"oilpanLeak\")\ntable.insert(dtable[\"engine\"], \"oilRadiatorLeak\")\ntable.insert(dtable[\"engine\"], \"headGasketDamaged\")\ntable.insert(dtable[\"engine\"], \"pistonRingsDamaged\")\ntable.insert(dtable[\"engine\"], \"rodBearingsDamaged\")\ntable.insert(dtable[\"engine\"], \"blockMelted\")\ntable.insert(dtable[\"engine\"], \"oilHot\")\ntable.insert(dtable[\"engine\"], \"cylinderWallsMelted\")\ntable.insert(dtable[\"engine\"], \"radiatorLeak\")\ntable.insert(dtable[\"engine\"], \"coolantHot\")\ntable.insert(dtable[\"engine\"], \"oilLevelCritical\")\ntable.insert(dtable[\"engine\"], \"oilStarvation\")\ntable.insert(dtable[\"engine\"], \"oilLevelTooHigh\")\ntable.insert(dtable[\"engine\"], \"exhaustBroken\")\n\ntable.insert(dtable[\"powertrain\"], \"mainEngine\")\ntable.insert(dtable[\"powertrain\"], \"torqueConverter\")\ntable.insert(dtable[\"powertrain\"], \"gearbox\")\ntable.insert(dtable[\"powertrain\"], \"rangebox\")\ntable.insert(dtable[\"powertrain\"], \"transfercase\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorR\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft\")\ntable.insert(dtable[\"powertrain\"], \"differential_R\")\ntable.insert(dtable[\"powertrain\"], \"transfercase_F\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft_F\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorF\")\ntable.insert(dtable[\"powertrain\"], \"differential_F\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFR\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFR\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRL\")\ntable.insert(dtable[\"powertrain\"], \"clutch\")\n\ntable.insert(dtable[\"wheels\"], \"FR\")\ntable.insert(dtable[\"wheels\"], \"brakeFR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFR\")\ntable.insert(dtable[\"wheels\"], \"tireFR\")\n\ntable.insert(dtable[\"wheels\"], \"FL\")\ntable.insert(dtable[\"wheels\"], \"brakeFL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFL\")\ntable.insert(dtable[\"wheels\"], \"tireFL\")\n\ntable.insert(dtable[\"wheels\"], \"RR\")\ntable.insert(dtable[\"wheels\"], \"brakeRR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRR\")\ntable.insert(dtable[\"wheels\"], \"tireRR\")\n\ntable.insert(dtable[\"wheels\"], \"RL\")\ntable.insert(dtable[\"wheels\"], \"brakeRL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRL\")\ntable.insert(dtable[\"wheels\"], \"tireRL\")\n\n\nself.pinOut.devices.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"Mech Damage Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            5316,
            -594
          ],
          "type":"util/customLua"
        },
        "345":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            4700,
            -370
          ],
          "string":"mechdmg",
          "type":"types/string"
        },
        "346":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "shuffle":{
              "type":"bool",
              "value":true
            },
            "spawnGap":{
              "type":"number",
              "value":100
            },
            "spawnMode":{
              "type":"string",
              "value":"road"
            }
          },
          "hiddenPins":{
            "p_in":{
              "dontDelete":true,
              "flow":false,
              "group":false,
              "quantity":false,
              "randomColors":true,
              "reset":false,
              "shuffle":true,
              "spawnGap":true,
              "spawnMode":true,
              "startPos":true,
              "startRot":true
            },
            "p_out":{
              "flow":false,
              "loaded":false,
              "vehicleIds":false
            }
          },
          "pos":[
            -1152,
            652
          ],
          "type":"gameplay/traffic/trafficSpawnGroup"
        },
        "347":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3062,
            1226
          ],
          "type":"types/genericValue"
        },
        "348":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"To ensure values are good flow is kept active to\\nDetailed Damage Vehicle node until Save Mech Damage\\nnode has executed. First delay is thus a bit longer than second",
          "commentTitle":"Need some delays for VLUA Fetch to process",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            434,
            2044
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "349":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            5120,
            -594
          ],
          "type":"logic/flowSwitch"
        },
        "350":{
          "code":{
            "work":"local dtable = {}\ndtable[\"engine\"] = {}\ndtable[\"powertrain\"] = {}\ndtable[\"wheels\"] = {}\n\ntable.insert(dtable[\"engine\"], \"engineReducedTorque\")\ntable.insert(dtable[\"engine\"], \"engineDisabled\")\ntable.insert(dtable[\"engine\"], \"engineLockedUp\")\ntable.insert(dtable[\"engine\"], \"engineIsHydrolocking\")\ntable.insert(dtable[\"engine\"], \"engineHydrolocked\")\ntable.insert(dtable[\"engine\"], \"overRevDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"mildOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"overTorqueDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverTorqueDamage\")\ntable.insert(dtable[\"engine\"], \"impactDamage\")\ntable.insert(dtable[\"engine\"], \"oilpanLeak\")\ntable.insert(dtable[\"engine\"], \"oilRadiatorLeak\")\ntable.insert(dtable[\"engine\"], \"headGasketDamaged\")\ntable.insert(dtable[\"engine\"], \"pistonRingsDamaged\")\ntable.insert(dtable[\"engine\"], \"rodBearingsDamaged\")\ntable.insert(dtable[\"engine\"], \"blockMelted\")\ntable.insert(dtable[\"engine\"], \"oilHot\")\ntable.insert(dtable[\"engine\"], \"cylinderWallsMelted\")\ntable.insert(dtable[\"engine\"], \"radiatorLeak\")\ntable.insert(dtable[\"engine\"], \"coolantHot\")\ntable.insert(dtable[\"engine\"], \"oilLevelCritical\")\ntable.insert(dtable[\"engine\"], \"oilStarvation\")\ntable.insert(dtable[\"engine\"], \"oilLevelTooHigh\")\ntable.insert(dtable[\"engine\"], \"exhaustBroken\")\n\ntable.insert(dtable[\"powertrain\"], \"mainEngine\")\ntable.insert(dtable[\"powertrain\"], \"torqueConverter\")\ntable.insert(dtable[\"powertrain\"], \"gearbox\")\ntable.insert(dtable[\"powertrain\"], \"rangebox\")\ntable.insert(dtable[\"powertrain\"], \"transfercase\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorR\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft\")\ntable.insert(dtable[\"powertrain\"], \"differential_R\")\ntable.insert(dtable[\"powertrain\"], \"transfercase_F\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft_F\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorF\")\ntable.insert(dtable[\"powertrain\"], \"differential_F\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFR\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFR\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRL\")\ntable.insert(dtable[\"powertrain\"], \"clutch\")\n\ntable.insert(dtable[\"wheels\"], \"FR\")\ntable.insert(dtable[\"wheels\"], \"brakeFR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFR\")\ntable.insert(dtable[\"wheels\"], \"tireFR\")\n\ntable.insert(dtable[\"wheels\"], \"FL\")\ntable.insert(dtable[\"wheels\"], \"brakeFL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFL\")\ntable.insert(dtable[\"wheels\"], \"tireFL\")\n\ntable.insert(dtable[\"wheels\"], \"RR\")\ntable.insert(dtable[\"wheels\"], \"brakeRR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRR\")\ntable.insert(dtable[\"wheels\"], \"tireRR\")\n\ntable.insert(dtable[\"wheels\"], \"RL\")\ntable.insert(dtable[\"wheels\"], \"brakeRL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRL\")\ntable.insert(dtable[\"wheels\"], \"tireRL\")\n\n\nself.pinOut.devices.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"Mech Damage Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            1074,
            736
          ],
          "type":"util/customLua"
        },
        "351":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":110
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4882,
            -594
          ],
          "type":"logic/frameDelay"
        },
        "352":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            836,
            1954
          ],
          "string":"beamLR/testmech",
          "type":"types/string"
        },
        "353":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal newFuelValue = self.pinIn.gas.value\nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(string.format(\"energyStorage.getStorage(\\\"mainTank\\\"):setRemainingVolume(%.12f)\", newFuelValue))\n\n"
          },
          "customIcon":"local_gas_station",
          "customName":"Force Set Gas",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gas":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Force Set Gas",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gas",
              null,
              ""
            ]
          ],
          "pos":[
            5022,
            456
          ],
          "type":"util/customLua"
        },
        "354":{
          "data":{
            "btnName":"Save Damage"
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            416,
            1705
          ],
          "type":"events/interactiveButton"
        },
        "355":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal dtable = self.pinIn.slots.value\nlocal idtable = {}\nlocal rpaints = {}\nlocal slotCount = self.pinIn.slotCount.value\nlocal currentPos = {}\nlocal currentRot = {}\nlocal currentCarFile = \"\"\nlocal currentCarFileData = \"\"\nlocal currentCarDataTable = {}\nlocal currentCarModel = \"\"\nlocal currentCarConfig = \"\"\nlocal currentSpawnOptions = {}\nlocal currentCarPaintData = \"\"\nlocal currentSpawnPaint = {}\n\nfor i=0,slotCount-1 do\nif self.pinIn.stock.value[i] ~= nil then\n\nlocal line = dtable[\"slotp\" .. i]\nlocal iter = 0\nlocal posVal = {}\nlocal rotVal = {}\nfor s in string.gmatch(line,\"([^,]+)\") do\n  posVal[iter] = tonumber(s)\n  iter=iter+1\nend\nline = dtable[\"slotr\" .. i]\niter = 0\nfor s in string.gmatch(line,\"([^,]+)\") do\n  rotVal[iter] = tonumber(s)\n  iter=iter+1\nend\n\ncurrentPos = {posVal[0],posVal[1],posVal[2]}\ncurrentRot = {rotVal[0], rotVal[1], rotVal[2], rotVal[3]}\n\ncurrentCarFile = self.pinIn.stock.value[i]\ncurrentCarFileData = readFile(currentCarFile)\nfor k,v in string.gmatch(currentCarFileData, \"([%w%p]+)=([%w%p]+)\") do\n    currentCarDataTable[k] = v\nend\n\ncurrentCarModel = currentCarDataTable[\"type\"]\ncurrentCarConfig = currentCarDataTable[\"config\"]\ncurrentCarPaintData = currentCarDataTable[\"paint\"]\n\n-- Ready to spawn car now, got all needed data\n-- Remember to store spawned IDs if possible to delete\n\nlocal spawnPos = vec3(posVal[0], posVal[1], posVal[2])\nlocal spawnRot = quat(rotVal[0], rotVal[1], rotVal[2],rotVal[3])\n\nprint(currentCarPaintData)\nlocal paintData = extensions.blrutils.ssplit(currentCarPaintData, \",\")\ndump(paintData)\nif self.pinIn.randpaint.value then\ncurrentSpawnPaint = extensions.blrutils.createRandomPaint()\nrpaints[i] = extensions.blrutils.vehiclePaintToGaragePaint(currentSpawnPaint)\nelse\ncurrentSpawnPaint = extensions.blrutils.createPaint(paintData)\nend\n\ncurrentSpawnOptions = {config = currentCarConfig, pos = spawnPos, rot = spawnRot, paint = currentSpawnPaint}\nlocal currentVeh = extensions.core_vehicles.spawnNewVehicle(currentCarModel, currentSpawnOptions)\nidtable[i] = currentVeh:getId()\n\nelse\n\nidtable[i] = -1\n\nend\nend\n\nself.pinOut.randpaint.value = self.pinIn.randpaint.value\nself.pinOut.rpaints.value = rpaints\nself.pinOut.spawnids.value = idtable\nself.pinOut.seed.value = math.random(999999999999999)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "randpaint":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "randpaint":false,
              "slotCount":false,
              "slots":false,
              "stock":false
            },
            "p_out":{
              "flow":false,
              "randpaint":false,
              "rpaints":false,
              "seed":false,
              "spawnids":false
            }
          },
          "name":"Spawn Shop Stock",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "stock",
              null,
              ""
            ],
            [
              "in",
              "number",
              "slotCount",
              null,
              ""
            ],
            [
              "in",
              "table",
              "slots",
              null,
              ""
            ],
            [
              "out",
              "table",
              "spawnids",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "randpaint",
              null,
              ""
            ],
            [
              "out",
              "table",
              "rpaints",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "randpaint",
              null,
              ""
            ],
            [
              "out",
              "number",
              "seed",
              null,
              ""
            ]
          ],
          "pos":[
            1718,
            -3072
          ],
          "type":"util/customLua"
        },
        "356":{
          "code":{
            "work":"local oid = self.pinIn.oid.value\nlocal vel = scenetree.findObjectById(oid):getVelocity():length()\nself.pinOut.vel.value = vel",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "oid":false
            },
            "p_out":{
              "flow":false,
              "vel":false
            }
          },
          "name":"Get Velocity",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "oid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "vel",
              null,
              ""
            ]
          ],
          "pos":[
            -2622,
            -552
          ],
          "type":"util/customLua"
        },
        "357":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.00000097276426913595,
            0.00000099999999747524,
            0,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"dump(quatFromDir(map.objects[be:getPlayerVehicle(0):getId()].dirVec, map.objects[be:getPlayerVehicle(0):getId()].dirVecUp):toTable())\\n\\nNEED TO SWAP THE LAST TWO VALUES AND INVERT THE LAST NUMBER\\nSO EXAMPLE IF THE RESULT FROM CMD IS 0,1,2,3 THE REAL ROT IS 0,1,3,-2\\n\\nPROBABLY SOMETHING TO DO WITH THE dirVecUp VALUE??",
          "commentTitle":"THIS LINE WORKS BUT ITS BUGGED THE DIRECTION IS WRONG BY 180*",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            1834,
            2198
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "358":{
          "count":2,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            962,
            -888
          ],
          "type":"logic/and"
        },
        "359":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            408,
            267
          ],
          "commentText":"",
          "commentTitle":"Race Traffic Remove",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -3700,
            -392
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "360":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            836,
            1884
          ],
          "string":"mech",
          "type":"types/string"
        },
        "361":{
          "code":{
            "work":"local pos = {}\nlocal id = self.pinIn.vid.value\nlocal veh = scenetree.findObjectById(id)\n\nif self.pinIn.pos.value ~= nil then\npos = vec3(self.pinIn.pos.value[1],self.pinIn.pos.value[2],self.pinIn.pos.value[3])\nelse\npos = veh:getPosition()\nend\n\nveh:setPositionNoPhysicsReset(pos)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "vid":false,
              "flow":false,
              "pos":false,
              "rot":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Raw Veh Teleport",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "vid",
              null,
              ""
            ],
            [
              "in",
              "vec3",
              "pos",
              null,
              ""
            ],
            [
              "in",
              "quat",
              "rot",
              null,
              ""
            ]
          ],
          "pos":[
            2908,
            988
          ],
          "type":"util/customLua"
        },
        "362":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":100
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4882,
            -468
          ],
          "type":"logic/frameDelay"
        },
        "363":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(self.pinIn.name.value, self.pinIn.flag.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "customName":"Enable Traffic",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "flag":{
              "type":"bool",
              "value":true
            },
            "name":{
              "type":"string",
              "value":"trafficEnable"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flag":true,
              "flow":false,
              "name":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLR Flag Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            -424,
            330
          ],
          "type":"util/customLua"
        },
        "364":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1054,
            1926
          ],
          "type":"types/genericValue"
        },
        "365":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            1802,
            -1182
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "366":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1130,
            -1434
          ],
          "type":"logic/bundle"
        },
        "367":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            1788,
            1058
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "368":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            1802,
            -1266
          ],
          "string":"Refuel Car",
          "type":"types/string"
        },
        "369":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1376,
            -1473
          ],
          "type":"logic/bundle"
        },
        "370":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1552,
            1317
          ],
          "commentText":"",
          "commentTitle":"Race UI",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -1666,
            -1512
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "371":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Race Menu"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            -1460,
            -1434
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "372":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "duration":{
              "type":"number",
              "value":1
            },
            "instant":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "biggerText":true,
              "duration":false,
              "flow":false,
              "instant":true,
              "message":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2880,
            -1322
          ],
          "type":"ui/flashMessage"
        },
        "373":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            5120,
            -454
          ],
          "type":"logic/once"
        },
        "374":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4714,
            -59
          ],
          "type":"logic/bundle"
        },
        "375":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal newFuelValue = self.pinIn.gas.value\nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(string.format(\"energyStorage.getStorage(\\\"mainTank\\\"):setRemainingVolume(%.12f)\", newFuelValue))\n\n"
          },
          "customIcon":"local_gas_station",
          "customName":"Force Set Gas",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gas":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Force Set Gas",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gas",
              null,
              ""
            ]
          ],
          "pos":[
            1536,
            890
          ],
          "type":"util/customLua"
        },
        "376":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Race"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            -634,
            -1462
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "377":{
          "count":4,
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "value_4":{
              "type":"number",
              "value":3
            },
            "value_1":{
              "type":"number",
              "value":0
            },
            "value_2":{
              "type":"number",
              "value":1
            },
            "value_3":{
              "type":"number",
              "value":2
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "value":false,
              "value_1":false,
              "value_2":false,
              "value_3":false,
              "value_4":false
            },
            "p_out":{
              "flow":false,
              "match_1":false,
              "match_2":false,
              "match_3":false,
              "match_4":false,
              "none":false
            }
          },
          "pos":[
            -1152,
            -1210
          ],
          "type":"logic/switchcase"
        },
        "378":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -438,
            -1462
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "379":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            864,
            470
          ],
          "string":"emech",
          "type":"types/string"
        },
        "380":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            850,
            554
          ],
          "type":"logic/frameDelay"
        },
        "381":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "asDuration":{
              "type":"bool",
              "value":false
            },
            "input":{
              "type":"number",
              "value":1
            },
            "reverseHit":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "asDuration":true,
              "dt":true,
              "flow":false,
              "input":true,
              "reset":true,
              "reverseHit":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2412,
            778
          ],
          "type":"logic/rateLimit"
        },
        "382":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceMenuPage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1362,
            -1336
          ],
          "type":"types/genericValue"
        },
        "383":{
          "code":{
            "work":"local file = \"beamLR/missions/\" .. self.pinIn.gid.value \nlocal filedata = readFile(file)\nlocal outtable = {}\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nlocal count = tonumber(dtable[\"count\"])\nself.pinOut.count.value = count-1\n\nfor i=0,count-1 do\nouttable[\"m\" .. i] = dtable[\"m\" .. i]\nend\n\nself.pinOut.missions.value = outtable\n\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gid":false
            },
            "p_out":{
              "count":false,
              "flow":false,
              "missions":false
            }
          },
          "name":"Get Giver Missions",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "gid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "count",
              null,
              ""
            ],
            [
              "out",
              "table",
              "missions",
              null,
              ""
            ]
          ],
          "pos":[
            -1866,
            -2806
          ],
          "type":"util/customLua"
        },
        "384":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -340,
            1702
          ],
          "type":"logic/branch"
        },
        "385":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"raceMenuPage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -802,
            -1826
          ],
          "type":"types/genericValue"
        },
        "386":{
          "code":{
            "work":"local dtable = self.pinIn.current.value\n\nif self.pinIn.name.value ~= nil then\ndtable[\"name\"] = self.pinIn.name.value\nend\n\nif self.pinIn.type.value ~= nil then\ndtable[\"type\"] = self.pinIn.type.value\nend\n\nif self.pinIn.config.value ~= nil then\ndtable[\"config\"] = self.pinIn.config.value\nend\n\nif self.pinIn.bsfile.value ~= nil then\ndtable[\"bsfile\"] = self.pinIn.bsfile.value\nend\n\nif self.pinIn.mfile.value ~= nil then\ndtable[\"mfile\"] = self.pinIn.mfile.value\nend\n\nif self.pinIn.gas.value ~= nil then\ndtable[\"gas\"] = self.pinIn.gas.value\nend\n\nif self.pinIn.damage.value ~= nil then\ndtable[\"damage\"] = self.pinIn.damage.value\nend\n\nself.pinOut.output.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "bsfile":true,
              "config":true,
              "current":false,
              "damage":false,
              "flow":false,
              "gas":false,
              "mfile":true,
              "name":true,
              "type":true
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Edit BLR Veh Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "current",
              null,
              ""
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "string",
              "type",
              null,
              ""
            ],
            [
              "in",
              "string",
              "config",
              null,
              ""
            ],
            [
              "in",
              "string",
              "bsfile",
              null,
              ""
            ],
            [
              "in",
              "string",
              "mfile",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gas",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ],
            [
              "in",
              "number",
              "damage",
              null,
              ""
            ]
          ],
          "pos":[
            5260,
            -314
          ],
          "type":"util/customLua"
        },
        "387":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1124,
            -986
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "388":{
          "code":{
            "work":"local filedata = \"\"\nlocal dtable = self.pinIn.data.value\nfor k,v in pairs(dtable) do\nfiledata = filedata .. k .. \"=\" .. v .. \"\\n\"\nend\nwriteFile(self.pinIn.filename.value, filedata)\n\n\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Table To File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            5470,
            -356
          ],
          "type":"util/customLua"
        },
        "389":{
          "code":{
            "work":"local dtable = self.pinIn.current.value\n\nif self.pinIn.name.value ~= nil then\ndtable[\"name\"] = self.pinIn.name.value\nend\n\nif self.pinIn.type.value ~= nil then\ndtable[\"type\"] = self.pinIn.type.value\nend\n\nif self.pinIn.config.value ~= nil then\ndtable[\"config\"] = self.pinIn.config.value\nend\n\nif self.pinIn.bsfile.value ~= nil then\ndtable[\"bsfile\"] = self.pinIn.bsfile.value\nend\n\nif self.pinIn.mfile.value ~= nil then\ndtable[\"mfile\"] = self.pinIn.mfile.value\nend\n\nif self.pinIn.gas.value ~= nil then\ndtable[\"gas\"] = self.pinIn.gas.value\nend\n\nif self.pinIn.damage.value ~= nil then\ndtable[\"damage\"] = self.pinIn.damage.value\nend\n\nself.pinOut.output.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "bsfile":true,
              "config":true,
              "current":false,
              "damage":false,
              "flow":false,
              "gas":false,
              "mfile":true,
              "name":true,
              "type":true
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Edit BLR Veh Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "current",
              null,
              ""
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "string",
              "type",
              null,
              ""
            ],
            [
              "in",
              "string",
              "config",
              null,
              ""
            ],
            [
              "in",
              "string",
              "bsfile",
              null,
              ""
            ],
            [
              "in",
              "string",
              "mfile",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gas",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ],
            [
              "in",
              "number",
              "damage",
              null,
              ""
            ]
          ],
          "pos":[
            374,
            568
          ],
          "type":"util/customLua"
        },
        "390":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Accept"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            -872,
            -1280
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "391":{
          "data":{},
          "dynamicMode":"once",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -592,
            778
          ],
          "type":"gameplay/traffic/trafficScatter"
        },
        "392":{
          "code":{
            "work":"local filedata = \"\"\nlocal dtable = self.pinIn.data.value\nfor k,v in pairs(dtable) do\nfiledata = filedata .. k .. \"=\" .. v .. \"\\n\"\nend\nwriteFile(self.pinIn.filename.value, filedata)\n\n\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Table To File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            374,
            708
          ],
          "type":"util/customLua"
        },
        "393":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1124,
            -888
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "394":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            -942,
            -1014
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "395":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Race Over"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1124,
            -790
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "396":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal fn = self.pinIn.file.value\nlocal vid = self.pinIn.vid.value\nextensions.mechDamageLoader.loadDamageFromFile(fn,vid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "vid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Mech Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "vid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            5008,
            330
          ],
          "type":"util/customLua"
        },
        "397":{
          "alpha":1,
          "backgroundColor":[
            0,
            0,
            0,
            1.00392162799835205078
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"mechanical damage save files\\n",
          "commentTitle":"Now be updated to work with",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            5516,
            -420
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "398":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            626,
            1898
          ],
          "type":"logic/once"
        },
        "399":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal fn = self.pinIn.file.value\nlocal vid = self.pinIn.vid.value\nextensions.mechDamageLoader.loadDamageFromFile(fn,vid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "vid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Mech Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "vid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            1522,
            666
          ],
          "type":"util/customLua"
        },
        "400":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":100
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            402,
            1884
          ],
          "type":"logic/frameDelay"
        },
        "401":{
          "alpha":1,
          "backgroundColor":[
            0.00000099999999747524,
            0.00000099998999303352,
            0.00000099998999303352,
            1
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"",
          "commentTitle":"Gas Persistence",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            392,
            840
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "402":{
          "code":{
            "work":"self.pinOut.output.value = self.pinIn.input.value",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "input":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Value Holder",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "any",
              "input",
              null,
              ""
            ],
            [
              "out",
              "any",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            822,
            -2134
          ],
          "type":"util/customLua"
        },
        "403":{
          "customName":"Player Entered",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":true,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -32,
            -468
          ],
          "type":"logic/compare"
        },
        "404":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Sell Value : "
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2166,
            -1868
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "405":{
          "code":{
            "work":"require(\"gameplay/walk\").toggleWalkingMode()",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Toggle Walk",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ]
          ],
          "pos":[
            3020,
            -1742
          ],
          "type":"util/customLua"
        },
        "406":{
          "alpha":1,
          "backgroundColor":[
            0,
            0,
            0,
            1
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"BLRUtils extensions to delete \\nsold car file from player garage\\nand rearranges the other files\\nas necessary to update garage",
          "commentTitle":"Vehicle selling system uses",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            2800,
            -2198
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "407":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "customName":"Load Player Prefs",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "filename":{
              "type":"string",
              "value":"beamLR/preferences"
            }
          },
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            374,
            -76
          ],
          "type":"util/customLua"
        },
        "408":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            894,
            561
          ],
          "commentText":"",
          "commentTitle":"Selling Mode",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            2520,
            -2240
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "409":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal key = self.pinIn.wid.value .. \"x\"\nif dtable[key] ~= nil then\nself.pinOut.x.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"y\"\nself.pinOut.y.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"w\"\nself.pinOut.w.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"h\"\nself.pinOut.h.value = tonumber(dtable[key])\nelse\nself.pinOut.x.value = 100\nself.pinOut.y.value = 100\nself.pinOut.w.value = 200\nself.pinOut.h.value = 220\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "wid":{
              "type":"string",
              "value":"shop"
            }
          },
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "wid":false
            },
            "p_out":{
              "flow":false,
              "h":false,
              "w":false,
              "x":false,
              "y":false
            }
          },
          "name":"Get IM Prefs",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "x",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ],
            [
              "out",
              "number",
              "w",
              null,
              ""
            ],
            [
              "out",
              "number",
              "h",
              null,
              ""
            ]
          ],
          "pos":[
            1508,
            -2302
          ],
          "type":"util/customLua"
        },
        "410":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal newFuelValue = self.pinIn.gas.value\nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(string.format(\"energyStorage.getStorage(\\\"mainTank\\\"):setRemainingVolume(%.12f)\", newFuelValue))\nprint(\"WTF SHOULD HAVE SET GAS??? TO \" .. newFuelValue)\n\n"
          },
          "customIcon":"local_gas_station",
          "customName":"Force Set Gas",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gas":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Force Set Gas",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gas",
              null,
              ""
            ]
          ],
          "pos":[
            1046,
            -2162
          ],
          "type":"util/customLua"
        },
        "411":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal veid = self.pinIn.veid.value\nlocal gid = self.pinIn.gid.value\nextensions.blrutils.garagePaintReload(veid, gid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gid":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Garage Paint",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gid",
              null,
              ""
            ]
          ],
          "pos":[
            1004,
            -1938
          ],
          "type":"util/customLua"
        },
        "412":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal key = self.pinIn.wid.value .. \"x\"\nif dtable[key] ~= nil then\nself.pinOut.x.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"y\"\nself.pinOut.y.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"w\"\nself.pinOut.w.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"h\"\nself.pinOut.h.value = tonumber(dtable[key])\nelse\nself.pinOut.x.value = 100\nself.pinOut.y.value = 100\nself.pinOut.w.value = 200\nself.pinOut.h.value = 220\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "wid":{
              "type":"string",
              "value":"pick"
            }
          },
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "wid":false
            },
            "p_out":{
              "flow":false,
              "h":false,
              "w":false,
              "x":false,
              "y":false
            }
          },
          "name":"Get IM Prefs",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "x",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ],
            [
              "out",
              "number",
              "w",
              null,
              ""
            ],
            [
              "out",
              "number",
              "h",
              null,
              ""
            ]
          ],
          "pos":[
            1438,
            -3492
          ],
          "type":"util/customLua"
        },
        "413":{
          "code":{
            "work":"local bv = self.pinIn.baseprice.value or 0\nlocal dv = self.pinIn.dmgcost.value or 0\nlocal pv = self.pinIn.partprice.value or 0\nlocal sv = self.pinIn.scrapval.value or 0\n\nlocal scrap = (pv+sv)\nif scrap < 0 then scrap = 0 end\n\nlocal sell = (bv+pv) - dv\nif sell < scrap then \nsell = scrap \nself.pinOut.isScrap.value = true\nend\n\nself.pinOut.sellval.value = sell * (1.0-self.pinIn.storecut.value)\nself.pinOut.scrapval.value = scrap * (1.0-self.pinIn.storecut.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "storecut":{
              "type":"number",
              "value":0.10000000100000000502
            }
          },
          "hiddenPins":{
            "p_in":{
              "baseprice":false,
              "dmgcost":false,
              "flow":false,
              "partprice":false,
              "scrapval":false,
              "storecut":false
            },
            "p_out":{
              "sellval":false,
              "flow":false,
              "isScrap":false,
              "scrapval":false
            }
          },
          "name":"Get Car Sell Value",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "baseprice",
              null,
              ""
            ],
            [
              "in",
              "number",
              "partprice",
              null,
              ""
            ],
            [
              "out",
              "number",
              "sellval",
              null,
              ""
            ],
            [
              "out",
              "number",
              "scrapval",
              null,
              ""
            ],
            [
              "in",
              "number",
              "scrapval",
              null,
              ""
            ],
            [
              "in",
              "number",
              "dmgcost",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "isScrap",
              null,
              ""
            ],
            [
              "in",
              "number",
              "storecut",
              null,
              ""
            ]
          ],
          "pos":[
            1676,
            -1840
          ],
          "type":"util/customLua"
        },
        "414":{
          "code":{
            "work":"self.pinOut.filename.value = \"beamLR/garage/car\" .. self.pinIn.carid.value\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carid":false,
              "flow":false
            },
            "p_out":{
              "filename":false,
              "flow":false
            }
          },
          "name":"Get Garage Car File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "carid",
              null,
              ""
            ],
            [
              "out",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            1662,
            -2092
          ],
          "type":"util/customLua"
        },
        "415":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -1992,
            904
          ],
          "type":"logic/branch"
        },
        "416":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1452,
            -2008
          ],
          "type":"types/genericValue"
        },
        "417":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            1452,
            -1882
          ],
          "type":"util/customLua"
        },
        "418":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            2642,
            176
          ],
          "type":"util/customLua"
        },
        "419":{
          "code":{
            "work":"local currentObj = scenetree.findObjectById(self.pinIn.id.value)\nif currentObj ~= nil then\ncurrentObj:delete()\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "id":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Delete Object",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "id",
              null,
              ""
            ]
          ],
          "pos":[
            -760,
            -790
          ],
          "type":"util/customLua"
        },
        "420":{
          "code":{
            "work":"self.pinOut.filename.value = \"beamLR/garage/car\" .. self.pinIn.carid.value\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carid":false,
              "flow":false
            },
            "p_out":{
              "filename":false,
              "flow":false
            }
          },
          "name":"Get Garage Car File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "carid",
              null,
              ""
            ],
            [
              "out",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            2642,
            64
          ],
          "type":"util/customLua"
        },
        "421":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"triggerFilterPlayerTrigID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            388,
            -902
          ],
          "type":"types/genericValue"
        },
        "422":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"triggerFilterPlayerTrigID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            178,
            -426
          ],
          "type":"types/genericValue"
        },
        "423":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"triggerFilterPlayerTrigName"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -32,
            -1350
          ],
          "type":"types/genericValue"
        },
        "424":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nself.pinOut.baseprice.value = dtable[\"baseprice\"]\nself.pinOut.partprice.value = dtable[\"partprice\"]\nself.pinOut.scrapval.value = dtable[\"scrapval\"]",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "scrapval":false,
              "baseprice":false,
              "flow":false,
              "partprice":false
            }
          },
          "name":"Car Monetary Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "number",
              "baseprice",
              null,
              ""
            ],
            [
              "out",
              "number",
              "partprice",
              null,
              ""
            ],
            [
              "out",
              "number",
              "scrapval",
              null,
              ""
            ]
          ],
          "pos":[
            1452,
            -1784
          ],
          "type":"util/customLua"
        },
        "425":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentRepairCost"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1690,
            -1980
          ],
          "type":"types/genericValue"
        },
        "426":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1782,
            904
          ],
          "type":"types/genericValue"
        },
        "427":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -18,
            -846
          ],
          "type":"logic/frameDelay"
        },
        "428":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local toRet = \"\"\n\nif self.pinIn.prefix.value ~= nil and self.pinIn.showPre.value then\ntoRet = self.pinIn.prefix.value .. self.pinIn.value.value\nelse\ntoRet = self.pinIn.value.value\nend\n\nif self.pinIn.suffix.value ~= nil and self.pinIn.showSuf.value then\ntoRet = toRet .. self.pinIn.suffix.value\nend\n\nself.pinOut.output.value = toRet"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "prefix":{
              "type":"string",
              "value":"$"
            },
            "showPre":{
              "type":"bool",
              "value":true
            },
            "suffix":{
              "type":"string",
              "value":" (SCRAP VALUE)"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "prefix":true,
              "showPre":true,
              "showSuf":false,
              "suffix":true,
              "value":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Prefixed Value Display",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "value",
              null,
              ""
            ],
            [
              "in",
              "string",
              "prefix",
              null,
              ""
            ],
            [
              "out",
              "string",
              "output",
              null,
              ""
            ],
            [
              "in",
              "string",
              "suffix",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "showPre",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "showSuf",
              null,
              ""
            ]
          ],
          "pos":[
            1928,
            -1826
          ],
          "type":"util/customLua"
        },
        "429":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1480,
            -2106
          ],
          "type":"logic/once"
        },
        "430":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1656,
            -297
          ],
          "type":"logic/bundle"
        },
        "431":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -1600,
            400
          ],
          "type":"logic/compare"
        },
        "432":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1642,
            -594
          ],
          "type":"logic/flowSwitch"
        },
        "433":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal key = self.pinIn.wid.value .. \"x\"\nif dtable[key] ~= nil then\nself.pinOut.x.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"y\"\nself.pinOut.y.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"w\"\nself.pinOut.w.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"h\"\nself.pinOut.h.value = tonumber(dtable[key])\nelse\nself.pinOut.x.value = 100\nself.pinOut.y.value = 100\nself.pinOut.w.value = 200\nself.pinOut.h.value = 220\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "wid":{
              "type":"string",
              "value":"miss"
            }
          },
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "wid":false
            },
            "p_out":{
              "flow":false,
              "h":false,
              "w":false,
              "x":false,
              "y":false
            }
          },
          "name":"Get IM Prefs",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "x",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ],
            [
              "out",
              "number",
              "w",
              null,
              ""
            ],
            [
              "out",
              "number",
              "h",
              null,
              ""
            ]
          ],
          "pos":[
            -550,
            -2610
          ],
          "type":"util/customLua"
        },
        "434":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "attempt":true,
              "flow":false
            },
            "p_out":{}
          },
          "pos":[
            766,
            918
          ],
          "type":"activity/activityStop"
        },
        "435":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Mission Giver"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            -102,
            -2568
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "436":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal key = self.pinIn.wid.value .. \"x\"\nif dtable[key] ~= nil then\nself.pinOut.x.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"y\"\nself.pinOut.y.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"w\"\nself.pinOut.w.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"h\"\nself.pinOut.h.value = tonumber(dtable[key])\nelse\nself.pinOut.x.value = 100\nself.pinOut.y.value = 100\nself.pinOut.w.value = 200\nself.pinOut.h.value = 220\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "wid":{
              "type":"string",
              "value":"miss"
            }
          },
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "wid":false
            },
            "p_out":{
              "flow":false,
              "h":false,
              "w":false,
              "x":false,
              "y":false
            }
          },
          "name":"Get IM Prefs",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "x",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ],
            [
              "out",
              "number",
              "w",
              null,
              ""
            ],
            [
              "out",
              "number",
              "h",
              null,
              ""
            ]
          ],
          "pos":[
            -550,
            -3828
          ],
          "type":"util/customLua"
        },
        "437":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            192,
            -888
          ],
          "type":"logic/flowSwitch"
        },
        "438":{
          "data":{
            "filterName":""
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "enter":false,
              "exit":false,
              "flow":false,
              "triggerId":false,
              "triggerName":false,
              "vehId":false,
              "vehicleName":false
            }
          },
          "pos":[
            -3672,
            36
          ],
          "type":"events/onBeamNGTrigger"
        },
        "439":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            2672,
            590
          ],
          "commentText":"",
          "commentTitle":"Race Checkpoint Detector",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -3696,
            -14
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "440":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -3000,
            36
          ],
          "type":"logic/compare"
        },
        "441":{
          "count":2,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "value_2":false,
              "flow":false,
              "value":false,
              "value_1":false
            },
            "p_out":{
              "none":false,
              "flow":false,
              "match_1":false,
              "match_2":false
            }
          },
          "pos":[
            -3420,
            330
          ],
          "type":"logic/switchcase"
        },
        "442":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":false,
              "carUsed":true,
              "flow":false,
              "health":true,
              "money":false,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            2852,
            -3352
          ],
          "type":"util/customLua"
        },
        "443":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal key = self.pinIn.wid.value .. \"x\"\nif dtable[key] ~= nil then\nself.pinOut.x.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"y\"\nself.pinOut.y.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"w\"\nself.pinOut.w.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"h\"\nself.pinOut.h.value = tonumber(dtable[key])\nelse\nself.pinOut.x.value = 100\nself.pinOut.y.value = 100\nself.pinOut.w.value = 200\nself.pinOut.h.value = 220\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "wid":{
              "type":"string",
              "value":"race"
            }
          },
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "wid":false
            },
            "p_out":{
              "flow":false,
              "h":false,
              "w":false,
              "x":false,
              "y":false
            }
          },
          "name":"Get IM Prefs",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "x",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ],
            [
              "out",
              "number",
              "w",
              null,
              ""
            ],
            [
              "out",
              "number",
              "h",
              null,
              ""
            ]
          ],
          "pos":[
            -1628,
            -1462
          ],
          "type":"util/customLua"
        },
        "444":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -3644,
            288
          ],
          "type":"scene/getPlayerVehicle"
        },
        "445":{
          "data":{
            "filterName":""
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "enter":false,
              "exit":false,
              "flow":false,
              "triggerId":false,
              "triggerName":false,
              "vehId":false,
              "vehicleName":false
            }
          },
          "pos":[
            -2888,
            -468
          ],
          "type":"events/onBeamNGTrigger"
        },
        "446":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal key = self.pinIn.wid.value .. \"x\"\nif dtable[key] ~= nil then\nself.pinOut.x.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"y\"\nself.pinOut.y.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"w\"\nself.pinOut.w.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"h\"\nself.pinOut.h.value = tonumber(dtable[key])\nelse\nself.pinOut.x.value = 100\nself.pinOut.y.value = 100\nself.pinOut.w.value = 200\nself.pinOut.h.value = 220\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "wid":{
              "type":"string",
              "value":"gara"
            }
          },
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "wid":false
            },
            "p_out":{
              "flow":false,
              "h":false,
              "w":false,
              "x":false,
              "y":false
            }
          },
          "name":"Get IM Prefs",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "x",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ],
            [
              "out",
              "number",
              "w",
              null,
              ""
            ],
            [
              "out",
              "number",
              "h",
              null,
              ""
            ]
          ],
          "pos":[
            2628,
            -580
          ],
          "type":"util/customLua"
        },
        "447":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal key = self.pinIn.wid.value .. \"x\"\nif dtable[key] ~= nil then\nself.pinOut.x.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"y\"\nself.pinOut.y.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"w\"\nself.pinOut.w.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"h\"\nself.pinOut.h.value = tonumber(dtable[key])\nelse\nself.pinOut.x.value = 100\nself.pinOut.y.value = 100\nself.pinOut.w.value = 200\nself.pinOut.h.value = 220\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "wid":{
              "type":"string",
              "value":"repa"
            }
          },
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "wid":false
            },
            "p_out":{
              "flow":false,
              "h":false,
              "w":false,
              "x":false,
              "y":false
            }
          },
          "name":"Get IM Prefs",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "x",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ],
            [
              "out",
              "number",
              "w",
              null,
              ""
            ],
            [
              "out",
              "number",
              "h",
              null,
              ""
            ]
          ],
          "pos":[
            -396,
            -2008
          ],
          "type":"util/customLua"
        },
        "448":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -2426,
            -496
          ],
          "type":"logic/compare"
        },
        "449":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3392,
            232
          ],
          "type":"types/genericValue"
        },
        "450":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"raceWinner"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2006,
            162
          ],
          "type":"types/genericValue"
        },
        "451":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -3434,
            134
          ],
          "type":"logic/compare"
        },
        "452":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            -1600,
            -2694
          ],
          "type":"util/customLua"
        },
        "453":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal fid = self.pinIn.vid.value\nif extensions.blrhooks.getFilter() ~= fid then\nextensions.blrhooks.setFilter(fid)\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Set BLRHooks Filter",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "vid",
              null,
              ""
            ]
          ],
          "pos":[
            -438,
            512
          ],
          "type":"util/customLua"
        },
        "454":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -2944,
            -916
          ],
          "type":"logic/compare"
        },
        "455":{
          "count":2,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2188,
            -566
          ],
          "type":"logic/and"
        },
        "456":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceWinner"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1628,
            -818
          ],
          "type":"types/genericValue"
        },
        "457":{
          "code":{
            "work":"local winner = self.pinIn.winner.value\nself.pinOut.over.value = (winner ~= 0)\nself.pinOut.won.value = (winner == 1)\n\nif self.pinIn.plyrdy.value ~= 1 then\nself.pinOut.text.value = \"Get In Position\"\nself.pinOut.btntxt.value = \"Give Up\"\nelseif winner == 0 then\nlocal pgtxt = \"Race In Progress!\\n\"\npgtxt = pgtxt .. \"Lap \" .. (self.pinIn.clap.value or 1) .. \"/\".. self.pinIn.laps.value .. \"\\n\"\npgtxt = pgtxt .. \"Checkpoint \" .. (self.pinIn.cpid.value or 1) .. \"/\" .. self.pinIn.cpc.value\nself.pinOut.text.value = pgtxt\nself.pinOut.btntxt.value = \"Give Up\"\nelseif winner == 1 then\nself.pinOut.text.value = \"You won the race!\"\nself.pinOut.btntxt.value = \"Claim Reward\"\nelse\nself.pinOut.text.value = \"You lost the race!\"\nself.pinOut.btntxt.value = \"Continue...\"\nend\n\nself.pinOut.slips.value = self.pinIn.slips.value == 1\n\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "clap":false,
              "cpc":false,
              "cpid":false,
              "flow":false,
              "laps":false,
              "plyrdy":false,
              "slips":false,
              "winner":false
            },
            "p_out":{
              "btntxt":false,
              "flow":false,
              "over":false,
              "slips":false,
              "text":false,
              "won":false
            }
          },
          "name":"Race Progress",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "winner",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "over",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "won",
              null,
              ""
            ],
            [
              "out",
              "string",
              "text",
              null,
              ""
            ],
            [
              "out",
              "string",
              "btntxt",
              null,
              ""
            ],
            [
              "in",
              "number",
              "plyrdy",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "slips",
              null,
              ""
            ],
            [
              "in",
              "number",
              "slips",
              null,
              ""
            ],
            [
              "in",
              "number",
              "clap",
              null,
              ""
            ],
            [
              "in",
              "number",
              "laps",
              null,
              ""
            ],
            [
              "in",
              "number",
              "cpid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "cpc",
              null,
              ""
            ]
          ],
          "pos":[
            -1362,
            -818
          ],
          "type":"util/customLua"
        },
        "458":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1642,
            -468
          ],
          "type":"types/genericValue"
        },
        "459":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2202,
            -314
          ],
          "type":"vehicle/freeze"
        },
        "460":{
          "code":{
            "work":"local mid = self.pinIn.mid.value or 0\nself.pinOut.filename.value = \"beamLR/missions/\" .. self.pinIn.missions.value[\"m\" .. mid]",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "mid":false,
              "missions":false
            },
            "p_out":{
              "filename":false,
              "flow":false
            }
          },
          "name":"Get Mission File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "missions",
              null,
              ""
            ],
            [
              "in",
              "number",
              "mid",
              null,
              ""
            ],
            [
              "out",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            -1600,
            -2820
          ],
          "type":"util/customLua"
        },
        "461":{
          "data":{
            "filterName":""
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "enter":false,
              "exit":false,
              "flow":false,
              "triggerId":false,
              "triggerName":false,
              "vehId":false,
              "vehicleName":false
            }
          },
          "pos":[
            -3630,
            -3268
          ],
          "type":"events/onBeamNGTrigger"
        },
        "462":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceWinner"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2944,
            -1042
          ],
          "type":"types/genericValue"
        },
        "463":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "duration":{
              "type":"number",
              "value":3
            }
          },
          "hiddenPins":{
            "p_in":{
              "duration":false,
              "flow":false,
              "reset":false
            },
            "p_out":{
              "incomplete":false,
              "complete":false,
              "completed":false,
              "flow":false
            }
          },
          "pos":[
            94,
            1954
          ],
          "type":"ui/fadeToBlack"
        },
        "464":{
          "data":{
            "useMessages":false,
            "bigFinishMsg":true,
            "playSounds":true,
            "useImgui":false
          },
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "finishMsgDuration":{
              "type":"number",
              "value":1
            },
            "countdownMsg":{
              "type":"string",
              "value":"%d"
            },
            "duration":{
              "type":"number",
              "value":3
            },
            "finishMsg":{
              "type":"string",
              "value":"Go!"
            }
          },
          "hiddenPins":{
            "p_in":{
              "countdownMsg":true,
              "duration":true,
              "finishMsg":true,
              "finishMsgDuration":true,
              "flow":false,
              "reset":false
            },
            "p_out":{
              "finished":false,
              "flow":false,
              "ongoing":false
            }
          },
          "pos":[
            -2734,
            -216
          ],
          "type":"gameplay/countdown"
        },
        "465":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -3084,
            -342
          ],
          "type":"logic/flowSwitch"
        },
        "466":{
          "data":{
            "useMessages":false,
            "bigFinishMsg":false,
            "playSounds":true,
            "useImgui":false
          },
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "finishMsgDuration":{
              "type":"number",
              "value":1
            },
            "countdownMsg":{
              "type":"string",
              "value":"%d"
            },
            "duration":{
              "type":"number",
              "value":3
            },
            "finishMsg":{
              "type":"string",
              "value":"Go!"
            }
          },
          "hiddenPins":{
            "p_in":{
              "countdownMsg":true,
              "duration":false,
              "finishMsg":false,
              "finishMsgDuration":true,
              "flow":false,
              "reset":false
            },
            "p_out":{
              "finished":false,
              "flow":false,
              "ongoing":false
            }
          },
          "pos":[
            -984,
            2542
          ],
          "type":"gameplay/countdown"
        },
        "467":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -998,
            2416
          ],
          "type":"logic/flowSwitch"
        },
        "468":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1230,
            631
          ],
          "commentText":"Waiting for player to get into position.\\nFreezing cars until countdown is over.\\n",
          "commentTitle":"Race Countdown",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -3248,
            -714
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "469":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            824,
            394
          ],
          "commentText":"Deletes career files and restores init\\nstate files before restarting",
          "commentTitle":"Reset Career",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -1988,
            2226
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "470":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1418,
            -636
          ],
          "type":"logic/once"
        },
        "471":{
          "data":{
            "btnName":"Print Player Rotation"
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -158,
            473
          ],
          "type":"events/interactiveButton"
        },
        "472":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -144,
            2206
          ],
          "type":"logic/branch"
        },
        "473":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal count = self.pinIn.carCount.value\nextensions.blrutils.resetCareer(count)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Reset Career",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ]
          ],
          "pos":[
            -1362,
            2388
          ],
          "type":"util/customLua"
        },
        "474":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1544,
            2290
          ],
          "type":"types/genericValue"
        },
        "475":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1202,
            478
          ],
          "commentText":"Moves time forward and heals player to 100%%\\n",
          "commentTitle":"Fast Forward",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -2352,
            1484
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "476":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -1614,
            2416
          ],
          "type":"scene/getPlayerVehicle"
        },
        "477":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal id = self.pinIn.fetchID.value\nlocal toFetch = self.pinIn.toFetch.value\nlocal vecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. id .. \"'))\"\nif ve.queueLuaCommand ~= nil then\nve:queueLuaCommand(vecmd)\nself.pinOut.output.value = extensions.vluaFetchModule.getVal(id)\nend"
          },
          "customIcon":"simobject_lightning",
          "customName":"Fetch VLUA Variable",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "fetchID":{
              "type":"string",
              "value":"gx"
            },
            "toFetch":{
              "type":"string",
              "value":"sensors.gx"
            }
          },
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "fetchID":false,
              "flow":false,
              "toFetch":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Fetch VLUA Variable",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "toFetch",
              null,
              ""
            ],
            [
              "out",
              "string",
              "output",
              null,
              ""
            ],
            [
              "in",
              "string",
              "fetchID",
              null,
              ""
            ]
          ],
          "pos":[
            -284,
            1212
          ],
          "type":"util/customLua"
        },
        "478":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -228,
            1128
          ],
          "type":"scene/getPlayerVehicle"
        },
        "479":{
          "code":{
            "work":"local gx = tonumber(self.pinIn.gx.value) or 0\nlocal gy = tonumber(self.pinIn.gy.value) or 0\nlocal gz = tonumber(self.pinIn.gz.value) or 0\n\nlocal len = math.sqrt(gx * gx + gy * gy + gz * gz)\nself.pinOut.length.value = len",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "customName":"Force Vector (m/s)",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "gz":false,
              "flow":false,
              "gx":false,
              "gy":false
            },
            "p_out":{
              "flow":false,
              "length":false
            }
          },
          "name":"Vector Length",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "gx",
              null,
              ""
            ],
            [
              "in",
              "string",
              "gy",
              null,
              ""
            ],
            [
              "in",
              "string",
              "gz",
              null,
              ""
            ],
            [
              "out",
              "number",
              "length",
              null,
              ""
            ]
          ],
          "pos":[
            -32,
            1240
          ],
          "type":"util/customLua"
        },
        "480":{
          "code":{
            "work":"local cval = self.pinIn.cval.value or 0\nlocal cmax = self.pinIn.cmax.value or 0\nlocal nmax = math.max(cval,cmax)\nself.pinOut.nmax.value = nmax\nself.pinOut.update.value = cval > cmax\nself.pinOut.trig.value = cval >= self.pinIn.tval.value\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "tval":{
              "type":"number",
              "value":98
            }
          },
          "hiddenPins":{
            "p_in":{
              "tval":false,
              "cmax":false,
              "cval":false,
              "flow":false
            },
            "p_out":{
              "update":false,
              "flow":false,
              "nmax":false,
              "trig":false
            }
          },
          "name":"Session Maximum",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "cval",
              null,
              ""
            ],
            [
              "in",
              "number",
              "cmax",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "update",
              null,
              ""
            ],
            [
              "out",
              "number",
              "nmax",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "trig",
              null,
              ""
            ],
            [
              "in",
              "number",
              "tval",
              null,
              ""
            ]
          ],
          "pos":[
            -32,
            1408
          ],
          "type":"util/customLua"
        },
        "481":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"gmax"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            178,
            1240
          ],
          "type":"types/genericValue"
        },
        "482":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -130,
            1576
          ],
          "type":"logic/branch"
        },
        "483":{
          "data":{
            "btnName":"Interactive Button"
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -760,
            2419
          ],
          "type":"events/interactiveButton"
        },
        "484":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -634,
            2640
          ],
          "type":"vehicle/freeze"
        },
        "485":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            656,
            408
          ],
          "commentText":"Race Countdown Example, Same system used in scenarios.\\nFreeze Vehicle node uses Player Veh if no id is supplied.",
          "commentTitle":"Countdown Example",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -1092,
            2338
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "486":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"Car delivery missions\\n",
          "commentTitle":"TODO",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            -1848,
            -2548
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "487":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceInProgress"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            388,
            -412
          ],
          "type":"types/genericValue"
        },
        "488":{
          "customName":"Spawn Delay",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1194,
            -664
          ],
          "type":"logic/frameDelay"
        },
        "489":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            698,
            1024
          ],
          "commentText":"G Force Calculator used to detect player injury.",
          "commentTitle":"Fatal Accident Detector",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            -364,
            1064
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "490":{
          "code":{
            "work":"local rval = self.pinIn.fval.value / (75.0*9.8)\nrval = math.min(1, rval)\nrval = math.max(0,rval)\nself.pinOut.nhp.value = self.pinIn.chp.value - (rval  * 30)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "chp":false,
              "flow":false,
              "fval":false
            },
            "p_out":{
              "flow":false,
              "nhp":false
            }
          },
          "name":"Player Injury",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "chp",
              null,
              ""
            ],
            [
              "in",
              "number",
              "fval",
              null,
              ""
            ],
            [
              "out",
              "number",
              "nhp",
              null,
              ""
            ]
          ],
          "pos":[
            136,
            1702
          ],
          "type":"util/customLua"
        },
        "491":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":100
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1964,
            2430
          ],
          "type":"logic/frameDelay"
        },
        "492":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerHealth"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -298,
            1828
          ],
          "type":"types/genericValue"
        },
        "493":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"<=",
          "pos":[
            -116,
            1940
          ],
          "type":"logic/compare"
        },
        "494":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1348,
            2290
          ],
          "type":"logic/once"
        },
        "495":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":true,
              "carUsed":false,
              "flow":false,
              "health":true,
              "money":true,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            5330,
            470
          ],
          "type":"util/customLua"
        },
        "496":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{}
          },
          "pos":[
            -1796,
            2556
          ],
          "type":"debug/restartManager"
        },
        "497":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal model = self.pinIn.model.value\nlocal config = self.pinIn.config.value\nlocal pos = vec3(self.pinIn.pos.value)\nlocal rot = quat(self.pinIn.rot.value)\nlocal paintdata = self.pinIn.paintdata.value\nlocal paintA = extensions.blrutils.createPaint(extensions.blrutils.ssplit(paintdata[\"paintA\"], \",\"))\nif paintdata[\"paintB\"] then\nlocal paintB = extensions.blrutils.createPaint(extensions.blrutils.ssplit(paintdata[\"paintB\"], \",\"))\nend\nif paintdata[\"paintC\"] then\nlocal paintC = extensions.blrutils.createPaint(extensions.blrutils.ssplit(paintdata[\"paintC\"], \",\"))\nend\nlocal spawnOptions = {config = config, pos = pos, rot = rot, paint=paintA, paint2 = paintB, paint3=paintC}\nlocal veh = extensions.core_vehicles.spawnNewVehicle(model, spawnOptions)\nself.pinOut.veid.value = veh:getId()\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "config":false,
              "flow":false,
              "model":false,
              "paintdata":false,
              "pos":false,
              "rot":false
            },
            "p_out":{
              "flow":false,
              "veid":false
            }
          },
          "name":"BLR Spawn Veh",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "model",
              null,
              ""
            ],
            [
              "in",
              "string",
              "config",
              null,
              ""
            ],
            [
              "in",
              "vec3",
              "pos",
              null,
              ""
            ],
            [
              "in",
              "quat",
              "rot",
              null,
              ""
            ],
            [
              "in",
              "table",
              "paintdata",
              null,
              ""
            ],
            [
              "out",
              "number",
              "veid",
              null,
              ""
            ]
          ],
          "pos":[
            4742,
            260
          ],
          "type":"util/customLua"
        },
        "498":{
          "customName":"Del AI CFG call to avoid bug",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -3000,
            -174
          ],
          "type":"logic/frameDelay"
        },
        "499":{
          "data":{
            "restoreTod":true
          },
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "dayLength":{
              "type":"number",
              "value":86400
            },
            "play":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "azimuthOverride":true,
              "dayLength":true,
              "dayScale":true,
              "flow":false,
              "nightScale":true,
              "play":false,
              "time":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1838,
            1758
          ],
          "type":"environment/setTimeOfDay"
        },
        "500":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1740,
            2290
          ],
          "type":"logic/flowSwitch"
        },
        "501":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "azimuthOverride":false,
              "dayLength":false,
              "dayScale":false,
              "nightScale":false,
              "time":false
            }
          },
          "pos":[
            -1838,
            1548
          ],
          "type":"environment/getTimeOfDay"
        },
        "502":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1936,
            2363
          ],
          "type":"logic/bundle"
        },
        "503":{
          "code":{
            "work":"local hours = (self.pinIn.oh.value or 0) / 24.0\nlocal minutes = (self.pinIn.om.value or 0) / 1440.0\nlocal seconds = (self.pinIn.os.value or 0) / 86400.0\n\nlocal current = self.pinIn.ct.value\nlocal outtime = (current + hours + minutes + seconds) % 1.0\nself.pinOut.ot.value = outtime",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "oh":{
              "type":"number",
              "value":8
            }
          },
          "hiddenPins":{
            "p_in":{
              "ct":false,
              "flow":false,
              "oh":false,
              "om":false,
              "os":false
            },
            "p_out":{
              "flow":false,
              "ot":false
            }
          },
          "name":"Get Offset Time",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "ct",
              null,
              ""
            ],
            [
              "in",
              "number",
              "oh",
              null,
              ""
            ],
            [
              "in",
              "number",
              "om",
              null,
              ""
            ],
            [
              "in",
              "number",
              "os",
              null,
              ""
            ],
            [
              "out",
              "number",
              "ot",
              null,
              ""
            ]
          ],
          "pos":[
            -2034,
            1618
          ],
          "type":"util/customLua"
        },
        "504":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "pos":{
              "type":"vec3",
              "value":[
                764.29901099999995039980,
                -159.53700299999999856482,
                144.44000199999999267675
              ]
            },
            "rot":{
              "type":"quat",
              "value":[
                -0.00100000005000000047,
                0,
                0.86599999700000040992,
                -0.49900001300000013105
              ]
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "pos":true,
              "rot":true,
              "safeTeleport":true,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1586,
            2500
          ],
          "type":"vehicle/moveTo"
        },
        "505":{
          "data":{
            "btnName":"Get Offset Time"
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2272,
            1551
          ],
          "type":"events/interactiveButton"
        },
        "506":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4840,
            484
          ],
          "type":"logic/once"
        },
        "507":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4742,
            120
          ],
          "type":"logic/flowSwitch"
        },
        "508":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":100
            },
            "varName":{
              "type":"string",
              "value":"playerHealth"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1642,
            1716
          ],
          "type":"types/genericValue"
        },
        "509":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4938,
            78
          ],
          "type":"logic/frameDelay"
        },
        "510":{
          "data":{},
          "dynamicMode":"once",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1404,
            2500
          ],
          "type":"scene/camera/returnToVehicle"
        },
        "511":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            5162,
            78
          ],
          "type":"logic/once"
        },
        "512":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"~=",
          "pos":[
            -2874,
            820
          ],
          "type":"logic/compare"
        },
        "513":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "duration":{
              "type":"number",
              "value":3
            }
          },
          "hiddenPins":{
            "p_in":{
              "biggerText":true,
              "duration":false,
              "flow":false,
              "instant":true,
              "message":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -3098,
            960
          ],
          "type":"ui/flashMessage"
        },
        "514":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            614,
            436
          ],
          "commentText":"",
          "commentTitle":"Veh Type Getter",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -3122,
            658
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "515":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":-1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            3286,
            -104
          ],
          "type":"logic/compare"
        },
        "516":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal model = self.pinIn.model.value\nlocal config = self.pinIn.config.value\nlocal pos = vec3(self.pinIn.pos.value)\nlocal rot = quat(self.pinIn.rot.value)\nlocal paintdata = self.pinIn.paintdata.value\nlocal paintA = extensions.blrutils.createPaint(extensions.blrutils.ssplit(paintdata[\"paintA\"], \",\"))\nif paintdata[\"paintB\"] then\nlocal paintB = extensions.blrutils.createPaint(extensions.blrutils.ssplit(paintdata[\"paintB\"], \",\"))\nend\nif paintdata[\"paintC\"] then\nlocal paintC = extensions.blrutils.createPaint(extensions.blrutils.ssplit(paintdata[\"paintC\"], \",\"))\nend\nlocal spawnOptions = {config=config,pos = pos, rot = rot, paint=paintA, paint2=paintB,paint3=paintC}\nlocal veh = extensions.blrutils.blrSpawn(model, spawnOptions)\nself.pinOut.veid.value = veh:getId()\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "config":false,
              "flow":false,
              "model":false,
              "paintdata":false,
              "pos":false,
              "rot":false
            },
            "p_out":{
              "flow":false,
              "veid":false
            }
          },
          "name":"BLR Spawn Veh",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "model",
              null,
              ""
            ],
            [
              "in",
              "string",
              "config",
              null,
              ""
            ],
            [
              "in",
              "vec3",
              "pos",
              null,
              ""
            ],
            [
              "in",
              "quat",
              "rot",
              null,
              ""
            ],
            [
              "in",
              "table",
              "paintdata",
              null,
              ""
            ],
            [
              "out",
              "number",
              "veid",
              null,
              ""
            ]
          ],
          "pos":[
            1522,
            162
          ],
          "type":"util/customLua"
        },
        "517":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1340,
            442
          ],
          "type":"logic/once"
        },
        "518":{
          "code":{
            "work":"local id = self.pinIn.carid.value\nlocal count = self.pinIn.count.value\nlocal extensions = require(\"extensions\")\nextensions.blrutils.deleteFile(\"beamLR/garage/car\" .. id)\nextensions.blrutils.deleteFile(\"beamLR/garage/config/car\" .. id)\nextensions.blrutils.deleteFile(\"beamLR/beamstate/car\" .. id .. \".save.json\")\nextensions.blrutils.deleteFile(\"beamLR/beamstate/mech/car\" .. id)\nextensions.blrutils.deleteFile(\"beamLR/beamstate/integrity/car\" .. id)\nfor v=id+1,count-1 do \nextensions.blrutils.moveFile(\"beamLR/garage/car\" .. v, \"beamLR/garage/car\" .. v-1)\nextensions.blrutils.moveFile(\"beamLR/garage/config/car\" .. v, \"beamLR/garage/config/car\" .. v-1)\nextensions.blrutils.moveFile(\"beamLR/beamstate/car\" .. v .. \".save.json\",\"beamLR/beamstate/car\" .. v-1 .. \".save.json\")\nextensions.blrutils.moveFile(\"beamLR/beamstate/mech/car\" .. v,\"beamLR/beamstate/mech/car\" .. v-1)\nextensions.blrutils.moveFile(\"beamLR/beamstate/integrity/car\" .. v,\"beamLR/beamstate/integrity/car\" .. v-1)\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carid":false,
              "count":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Remove Garage Car",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "carid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "count",
              null,
              ""
            ]
          ],
          "pos":[
            2782,
            -1980
          ],
          "type":"util/customLua"
        },
        "519":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1522,
            372
          ],
          "type":"logic/frameDelay"
        },
        "520":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1536,
            470
          ],
          "type":"logic/once"
        },
        "521":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2796,
            -1840
          ],
          "type":"vehicle/removeVehicle"
        },
        "522":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            2768,
            -1728
          ],
          "type":"scene/getPlayerVehicle"
        },
        "523":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value + self.pinIn.DX.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X+DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            3048,
            -2008
          ],
          "type":"util/customLua"
        },
        "524":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            3006,
            -1868
          ],
          "type":"types/genericValue"
        },
        "525":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "carUsed":{
              "type":"number",
              "value":-1
            }
          },
          "hiddenPins":{
            "p_in":{
              "carCount":false,
              "carUsed":false,
              "flow":false,
              "health":true,
              "money":false,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            3230,
            -1938
          ],
          "type":"util/customLua"
        },
        "526":{
          "customName":"Loaded",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1152,
            -552
          ],
          "type":"logic/once"
        },
        "527":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2558,
            -2106
          ],
          "type":"types/genericValue"
        },
        "528":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            3034,
            -2162
          ],
          "type":"util/customLua"
        },
        "529":{
          "data":{
            "value":1
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "pos":[
            2880,
            -2064
          ],
          "type":"types/number"
        },
        "530":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1340,
            540
          ],
          "type":"vehicle/removeVehicle"
        },
        "531":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal vdata = extensions.blrutils.getVehicleData()\nlocal ctrig = self.pinIn.ctrig.value\nlocal ccp = self.pinIn.ccp.value\nlocal type = self.pinIn.type.value\nlocal triggers = self.pinIn.triggers.value\nlocal tcount = #triggers\nlocal ttrig = triggers[ccp]\n\nif ccp == -1 then\nself.pinOut.nextcp.value = 1\nself.pinOut.nexttrigid.value = scenetree.findObject(triggers[1]):getID()\nself.pinOut.cpsound.value = false\nself.pinOut.finished.value = false\nelse\n\nif self.pinIn.completed.value == 1 then\nself.pinOut.finished.value = true\nself.pinOut.nextcp.value = ccp\nself.pinOut.nexttrigid.value = scenetree.findObject(triggers[ccp]):getID()\nself.pinOut.cpsound.value = false\nelse\n\nif type == \"jump\" then\nself.pinOut.finished.value = ctrig == ttrig\nself.pinOut.nextcp.value = ccp\nself.pinOut.nexttrigid.value = scenetree.findObject(triggers[ccp]):getID()\nself.pinOut.cpsound.value = false\nend\n\nif type == \"speed\" then\nself.pinOut.finished.value = (ctrig == ttrig) and (vdata[\"velocity\"] >= self.pinIn.targetSpd.value)\nself.pinOut.nextcp.value = ccp\nself.pinOut.nexttrigid.value = scenetree.findObject(triggers[ccp]):getID()\nself.pinOut.cpsound.value = false\nend\nend\nend\n\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "ccp":false,
              "completed":false,
              "ctrig":false,
              "driftPoints":false,
              "flow":false,
              "targetSpd":false,
              "targetTime":false,
              "timeLimit":false,
              "triggers":false,
              "type":false
            },
            "p_out":{
              "cpsound":false,
              "finished":false,
              "flow":false,
              "nextcp":false,
              "nexttrigid":false
            }
          },
          "name":"Challenge Completion",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "ctrig",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "ccp",
              null,
              ""
            ],
            [
              "in",
              "string",
              "type",
              null,
              ""
            ],
            [
              "in",
              "table",
              "triggers",
              null,
              ""
            ],
            [
              "in",
              "number",
              "targetSpd",
              null,
              ""
            ],
            [
              "in",
              "number",
              "timeLimit",
              null,
              ""
            ],
            [
              "in",
              "number",
              "driftPoints",
              null,
              ""
            ],
            [
              "in",
              "number",
              "targetTime",
              null,
              ""
            ],
            [
              "out",
              "number",
              "nextcp",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "finished",
              null,
              ""
            ],
            [
              "out",
              "number",
              "nexttrigid",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "cpsound",
              null,
              ""
            ],
            [
              "in",
              "number",
              "completed",
              null,
              ""
            ]
          ],
          "pos":[
            -2944,
            -3240
          ],
          "type":"util/customLua"
        },
        "532":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            -830,
            1814
          ],
          "type":"util/customLua"
        },
        "533":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "duration":{
              "type":"number",
              "value":3
            }
          },
          "hiddenPins":{
            "p_in":{
              "duration":false,
              "flow":false,
              "reset":false
            },
            "p_out":{
              "incomplete":false,
              "complete":false,
              "completed":false,
              "flow":false
            }
          },
          "pos":[
            -2286,
            1744
          ],
          "type":"ui/fadeToBlack"
        },
        "534":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2272,
            1618
          ],
          "type":"logic/flowSwitch"
        },
        "535":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1642,
            1576
          ],
          "type":"logic/flowSwitch"
        },
        "536":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "duration":{
              "type":"number",
              "value":3
            }
          },
          "hiddenPins":{
            "p_in":{
              "duration":false,
              "flow":false,
              "reset":false
            },
            "p_out":{
              "incomplete":false,
              "complete":false,
              "completed":false,
              "flow":false
            }
          },
          "pos":[
            -1418,
            1520
          ],
          "type":"ui/fadeFromBlack"
        },
        "537":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2034,
            1814
          ],
          "type":"vehicle/freeze"
        },
        "538":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -2286,
            1912
          ],
          "type":"scene/getPlayerVehicle"
        },
        "539":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1978,
            1523
          ],
          "type":"logic/bundle"
        },
        "540":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2880,
            708
          ],
          "type":"logic/flowSwitch"
        },
        "541":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "duration":{
              "type":"number",
              "value":2
            }
          },
          "hiddenPins":{
            "p_in":{
              "duration":false,
              "flow":false,
              "reset":false
            },
            "p_out":{
              "incomplete":false,
              "complete":false,
              "completed":false,
              "flow":false
            }
          },
          "pos":[
            2894,
            834
          ],
          "type":"ui/fadeToBlack"
        },
        "542":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2670,
            711
          ],
          "type":"logic/bundle"
        },
        "543":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":false,
              "carUsed":false,
              "flow":false,
              "health":false,
              "money":false,
              "time":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            570,
            890
          ],
          "type":"util/customLua"
        },
        "544":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "duration":{
              "type":"number",
              "value":2
            }
          },
          "hiddenPins":{
            "p_in":{
              "duration":false,
              "flow":false,
              "reset":false
            },
            "p_out":{
              "incomplete":false,
              "complete":false,
              "completed":false,
              "flow":false
            }
          },
          "pos":[
            3398,
            1184
          ],
          "type":"ui/fadeFromBlack"
        },
        "545":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2684,
            1058
          ],
          "type":"vehicle/freeze"
        },
        "546":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "filename":{
              "type":"string",
              "value":"beamLR/mainData"
            }
          },
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            626,
            -76
          ],
          "type":"util/customLua"
        },
        "547":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            654,
            498
          ],
          "type":"types/genericValue"
        },
        "548":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "azimuthOverride":true,
              "dayLength":true,
              "dayScale":true,
              "nightScale":true,
              "time":false
            }
          },
          "pos":[
            766,
            1016
          ],
          "type":"environment/getTimeOfDay"
        },
        "549":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":true,
              "carUsed":true,
              "flow":false,
              "health":true,
              "money":false,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            1018,
            -3982
          ],
          "type":"util/customLua"
        },
        "550":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":true,
              "carUsed":true,
              "flow":false,
              "health":true,
              "money":false,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            -312,
            -594
          ],
          "type":"util/customLua"
        },
        "551":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerIsWalking"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2180,
            -104
          ],
          "type":"types/genericValue"
        },
        "552":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal k = self.pinIn.key.value\nlocal flag = extensions.blrglobals.getFlag(k)\nlocal toRet = extensions.blrglobals.fgPeekVal(k)\nself.pinOut.val.value = toRet\nself.pinOut.flag.value = flag\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"postEditActionsQueued"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false
            },
            "p_out":{
              "flag":false,
              "flow":false,
              "val":false
            }
          },
          "name":"BLRGlobal Peek",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "out",
              "any",
              "val",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            -1054,
            1604
          ],
          "type":"util/customLua"
        },
        "553":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Impound Vehicle"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            1788,
            1184
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "554":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "health":{
              "type":"number",
              "value":100
            }
          },
          "hiddenPins":{
            "p_in":{
              "carCount":true,
              "carUsed":true,
              "flow":false,
              "health":false,
              "money":true,
              "time":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            -1376,
            1828
          ],
          "type":"util/customLua"
        },
        "555":{
          "code":{
            "work":"\nlocal cost = 0\nlocal prefix = \"\"\n\nif self.pinIn.walking.value == 0 then\ncost = 50\nprefix = \"Call Tow Truck \"\nelse\ncost = 10\nprefix = \"Take Bus Home \"\nend\n\nlocal costtext = string.format(\"($%.2f)\", cost )\nlocal fulltext = prefix .. costtext\nself.pinOut.txt.value = fulltext\nself.pinOut.cost.value = cost",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "walking":false
            },
            "p_out":{
              "cost":false,
              "flow":false,
              "txt":false
            }
          },
          "name":"Towing Text",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "walking",
              null,
              ""
            ],
            [
              "out",
              "string",
              "txt",
              null,
              ""
            ],
            [
              "out",
              "number",
              "cost",
              null,
              ""
            ]
          ],
          "pos":[
            2138,
            -6
          ],
          "type":"util/customLua"
        },
        "556":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1216,
            309
          ],
          "commentText":"",
          "commentTitle":"Pink Slips",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -2954,
            -1078
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "557":{
          "code":{
            "work":"local id = self.pinIn.carid.value\nlocal count = self.pinIn.count.value\nlocal extensions = require(\"extensions\")\nextensions.blrutils.deleteFile(\"beamLR/garage/car\" .. id)\nextensions.blrutils.deleteFile(\"beamLR/garage/config/car\" .. id)\nextensions.blrutils.deleteFile(\"beamLR/beamstate/car\" .. id .. \".save.json\")\nextensions.blrutils.deleteFile(\"beamLR/beamstate/mech/car\" .. id)\nextensions.blrutils.deleteFile(\"beamLR/beamstate/integrity/car\" .. id)\nfor v=id+1,count-1 do \nextensions.blrutils.moveFile(\"beamLR/garage/car\" .. v, \"beamLR/garage/car\" .. v-1)\nextensions.blrutils.moveFile(\"beamLR/garage/config/car\" .. v, \"beamLR/garage/config/car\" .. v-1)\nextensions.blrutils.moveFile(\"beamLR/beamstate/car\" .. v .. \".save.json\",\"beamLR/beamstate/car\" .. v-1 .. \".save.json\")\nextensions.blrutils.moveFile(\"beamLR/beamstate/mech/car\" .. v,\"beamLR/beamstate/mech/car\" .. v-1)\nextensions.blrutils.moveFile(\"beamLR/beamstate/integrity/car\" .. v,\"beamLR/beamstate/integrity/car\" .. v-1)\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carid":false,
              "count":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Remove Garage Car",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "carid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "count",
              null,
              ""
            ]
          ],
          "pos":[
            -2468,
            -1392
          ],
          "type":"util/customLua"
        },
        "558":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2902,
            -1364
          ],
          "type":"types/genericValue"
        },
        "559":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2300,
            -1252
          ],
          "type":"vehicle/removeVehicle"
        },
        "560":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -2916,
            -1224
          ],
          "type":"scene/getPlayerVehicle"
        },
        "561":{
          "code":{
            "work":"require(\"gameplay/walk\").toggleWalkingMode()",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Toggle Walk",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ]
          ],
          "pos":[
            -2482,
            -1252
          ],
          "type":"util/customLua"
        },
        "562":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":-1
            },
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2258,
            -1378
          ],
          "type":"types/genericValue"
        },
        "563":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"outstandingTicket"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2222,
            1044
          ],
          "type":"types/genericValue"
        },
        "564":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\n\nlocal filedata = \"\"\nlocal filename = \"beamLR/garage/car\" .. (self.pinIn.count.value)\nfiledata = \"name=boughtCar\" .. (self.pinIn.count.value + 1) .. \"\\n\"\nfiledata = filedata .. \"type=\" .. self.pinIn.model.value .. \"\\n\"\nfiledata = filedata .. \"config=beamLR/garage/config/car\" .. (self.pinIn.count.value) .. \"\\n\"\nfiledata = filedata .. \"bsfile=beamLR/beamstate/car\" .. (self.pinIn.count.value) .. \".save.json\\n\" \nfiledata = filedata .. \"mfile=beamLR/beamstate/mech/car\" .. (self.pinIn.count.value) .. \"\\n\"\nfiledata = filedata .. \"ifile=beamLR/beamstate/integrity/car\" .. (self.pinIn.count.value) .. \"\\n\"\nfiledata = filedata .. \"gas=2\" .. \"\\n\"\nfiledata = filedata .. \"baseprice=\" .. self.pinIn.baseprice.value .. \"\\n\"\nfiledata = filedata .. \"partprice=\" .. self.pinIn.partprice.value .. \"\\n\"\nfiledata = filedata .. \"scrapval=\" .. self.pinIn.scrapval.value .. \"\\n\"\nfiledata = filedata .. \"paintA=\" .. self.pinIn.paintdata.value .. \"\\n\"\nfiledata = filedata .. \"paintB=\" .. self.pinIn.paintdata.value .. \"\\n\"\nfiledata = filedata .. \"paintC=\" .. self.pinIn.paintdata.value .. \"\\n\"\nfiledata = filedata .. \"damage=0\\n\"\nfiledata = filedata .. \"impoundval=0\\n\"\nwriteFile(filename, filedata)\n\nextensions.blrutils.copyFile(self.pinIn.config.value, \"beamLR/garage/config/car\" .. (self.pinIn.count.value))\nextensions.blrutils.copyFile(self.pinIn.ifile.value, \"beamLR/beamstate/integrity/car\" .. (self.pinIn.count.value))\n\nlocal mechdata = extensions.mechDamageLoader.getNewCarMechData()\nwriteFile(\"beamLR/beamstate/mech/car\" .. (self.pinIn.count.value), mechdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "baseprice":false,
              "config":false,
              "count":false,
              "flow":false,
              "ifile":false,
              "model":false,
              "paintdata":false,
              "partprice":false,
              "scrapval":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Add Car To Garage",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "count",
              null,
              ""
            ],
            [
              "in",
              "string",
              "model",
              null,
              ""
            ],
            [
              "in",
              "string",
              "config",
              null,
              ""
            ],
            [
              "in",
              "number",
              "baseprice",
              null,
              ""
            ],
            [
              "in",
              "number",
              "partprice",
              null,
              ""
            ],
            [
              "in",
              "number",
              "scrapval",
              null,
              ""
            ],
            [
              "in",
              "string",
              "paintdata",
              null,
              ""
            ],
            [
              "in",
              "string",
              "ifile",
              null,
              ""
            ]
          ],
          "pos":[
            -2314,
            -1042
          ],
          "type":"util/customLua"
        },
        "565":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            824,
            1444
          ],
          "commentText":"",
          "commentTitle":"Police & Tickets",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            1750,
            224
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "566":{
          "code":{
            "work":"self.pinOut.output.value = self.pinIn.input.value",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "input":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Value Holder",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "input",
              null,
              ""
            ],
            [
              "out",
              "number",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            -1488,
            -314
          ],
          "type":"util/customLua"
        },
        "567":{
          "code":{
            "work":"local namelib = self.pinIn.nlib.value\nlocal ticket = \"Utah State Police Ticket\\n--------------------\\nInfractions\\n\"\nlocal cost = 0\nlocal costtable = self.pinIn.cdata.value\nlocal olist = self.pinIn.olist.value\nfor k,v in pairs(olist) do\nticket = ticket .. (namelib[v] or v) .. \": $\" .. string.format(\"%.2f\",costtable[v] or 69) .. \"\\n\"\ncost = cost + (costtable[v] or 69)\nend\nticket = ticket .. \"\\nTotal: $\" .. string.format(\"%.2f\", cost) .. \"\\n\" \nticket = ticket .. \"\\nThe corrupt cops want you to pay in cash or they'll impound your vehicle!\"\n\nself.pinOut.tkttxt.value = ticket\nself.pinOut.cost.value = cost\n\nwriteFile(\"beamLR/policeTicket\", ticket)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "olist":false,
              "cdata":false,
              "flow":false,
              "nlib":false
            },
            "p_out":{
              "cost":false,
              "flow":false,
              "tkttxt":false
            }
          },
          "name":"Update Ticket",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "olist",
              null,
              ""
            ],
            [
              "in",
              "table",
              "cdata",
              null,
              ""
            ],
            [
              "out",
              "number",
              "cost",
              null,
              ""
            ],
            [
              "out",
              "string",
              "tkttxt",
              null,
              ""
            ],
            [
              "in",
              "table",
              "nlib",
              null,
              ""
            ]
          ],
          "pos":[
            2404,
            1058
          ],
          "type":"util/customLua"
        },
        "568":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -1642,
            -244
          ],
          "type":"scene/getPlayerVehicle"
        },
        "569":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value + self.pinIn.DX.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "DX":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X+DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            -2090,
            -1042
          ],
          "type":"util/customLua"
        },
        "570":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1922,
            -1042
          ],
          "type":"types/genericValue"
        },
        "571":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":false,
              "carUsed":true,
              "flow":false,
              "health":true,
              "money":true,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            -1922,
            -888
          ],
          "type":"util/customLua"
        },
        "572":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"outstandingTicket"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2152,
            484
          ],
          "type":"types/genericValue"
        },
        "573":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            1788,
            1394
          ],
          "type":"logic/compare"
        },
        "574":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">=",
          "pos":[
            2180,
            1394
          ],
          "type":"logic/compare"
        },
        "575":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1984,
            1394
          ],
          "type":"types/genericValue"
        },
        "576":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -326,
            2332
          ],
          "type":"logic/once"
        },
        "577":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            2418,
            1268
          ],
          "type":"util/customLua"
        },
        "578":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1788,
            1562
          ],
          "type":"types/genericValue"
        },
        "579":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":true,
              "carUsed":true,
              "flow":false,
              "health":true,
              "money":false,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            1956,
            1562
          ],
          "type":"util/customLua"
        },
        "580":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4462,
            -104
          ],
          "type":"types/genericValue"
        },
        "581":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"ticketCost"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2180,
            372
          ],
          "type":"types/genericValue"
        },
        "582":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nself.pinOut.flag.value = extensions.blrglobals.blrFlagGet(self.pinIn.name.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "name":{
              "type":"string",
              "value":"trafficEnable"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "name":false
            },
            "p_out":{
              "flag":false,
              "flow":false
            }
          },
          "name":"BLR Flag Get",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "bool",
              "flag",
              null,
              ""
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ]
          ],
          "pos":[
            -1530,
            1170
          ],
          "type":"util/customLua"
        },
        "583":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"ticketText"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2180,
            260
          ],
          "type":"types/genericValue"
        },
        "584":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"ticketMenuState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1984,
            512
          ],
          "type":"types/genericValue"
        },
        "585":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            1984,
            638
          ],
          "type":"logic/compare"
        },
        "586":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1992,
            260
          ],
          "type":"logic/flowSwitch"
        },
        "587":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1998,
            260
          ],
          "type":"logic/once"
        },
        "588":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -1138,
            1226
          ],
          "type":"logic/compare"
        },
        "589":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"trafficEnableFlag"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1530,
            1282
          ],
          "type":"types/genericValue"
        },
        "590":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -900,
            1128
          ],
          "type":"logic/once"
        },
        "591":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":false,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -928,
            1226
          ],
          "type":"logic/compare"
        },
        "592":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            250,
            58
          ],
          "commentText":"",
          "commentTitle":"Stat UI End Flow",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            2296,
            854
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "593":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"ticketMenuState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2320,
            1562
          ],
          "type":"types/genericValue"
        },
        "594":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            2082,
            1268
          ],
          "type":"logic/branch"
        },
        "595":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1202,
            323
          ],
          "commentText":"Used by pink slips and impounding mechanic, removes player vehicle from garage\\nand sends player into walk mode before despawning the vehicle. Does not pay money\\nlike selling mechanic.",
          "commentTitle":"BeamLR Vehicle Delete",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -2940,
            -1484
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "596":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2390,
            582
          ],
          "type":"vehicle/freeze"
        },
        "597":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal fullpath = self.pinIn.filename.value\nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(\"beamstate.save(\\\"\" .. fullpath .. \"\\\")\" )\nself.pinOut.dbgval.value = fullpath\n\n\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "dbgval":false,
              "flow":false
            }
          },
          "name":"Save Beamstate To File",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "string",
              "dbgval",
              null,
              ""
            ]
          ],
          "pos":[
            2894,
            1758
          ],
          "type":"util/customLua"
        },
        "598":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":-1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"~=",
          "pos":[
            2180,
            582
          ],
          "type":"logic/compare"
        },
        "599":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"ticketMenuState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2390,
            722
          ],
          "type":"types/genericValue"
        },
        "600":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = self.pinIn.dmg.value\nextensions.mechDamageLoader.saveDamageToFile(self.pinIn.file.value, dtable)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "dmg":false,
              "file":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Mech Damage",
          "pins":[
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "dmg",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            3384,
            1758
          ],
          "type":"util/customLua"
        },
        "601":{
          "code":{
            "work":"self.pinOut.filename.value = \"beamLR/garage/car\" .. self.pinIn.carid.value\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carid":false,
              "flow":false
            },
            "p_out":{
              "filename":false,
              "flow":false
            }
          },
          "name":"Get Garage Car File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "carid",
              null,
              ""
            ],
            [
              "out",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            2852,
            1422
          ],
          "type":"util/customLua"
        },
        "602":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.data.value\nself.pinOut.name.value = dtable[\"name\"]\nself.pinOut.type.value = dtable[\"type\"]\nself.pinOut.bsfile.value = dtable[\"bsfile\"]\nself.pinOut.config.value = dtable[\"config\"]\nself.pinOut.mfile.value = dtable[\"mfile\"]\nself.pinOut.gas.value = tonumber(dtable[\"gas\"])\nself.pinOut.paintdata.value = dtable[\"paint\"]\nself.pinOut.ifile.value = dtable[\"ifile\"]"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "bsfile":false,
              "config":true,
              "flow":false,
              "gas":true,
              "ifile":false,
              "mfile":false,
              "name":true,
              "paintdata":true,
              "type":true
            }
          },
          "name":"Get BLR Vehicle Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "type",
              null,
              ""
            ],
            [
              "out",
              "string",
              "config",
              null,
              ""
            ],
            [
              "out",
              "string",
              "bsfile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "mfile",
              null,
              ""
            ],
            [
              "out",
              "number",
              "gas",
              null,
              ""
            ],
            [
              "out",
              "string",
              "paintdata",
              null,
              ""
            ],
            [
              "out",
              "string",
              "ifile",
              null,
              ""
            ]
          ],
          "pos":[
            2880,
            1590
          ],
          "type":"util/customLua"
        },
        "603":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            2670,
            1786
          ],
          "type":"util/customLua"
        },
        "604":{
          "code":{
            "work":"self.pinOut.data.value = jsonReadFile(self.pinIn.file.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "file":{
              "type":"string",
              "value":"beamLR/spawngroups/traffic.json"
            }
          },
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false
            },
            "p_out":{
              "data":false,
              "flow":false
            }
          },
          "name":"Load JSON Table",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ],
            [
              "out",
              "table",
              "data",
              null,
              ""
            ]
          ],
          "pos":[
            -1334,
            666
          ],
          "type":"util/customLua"
        },
        "605":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "controllable":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "controllable":false,
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1306,
            -300
          ],
          "type":"vehicle/playerUsable"
        },
        "606":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2656,
            1436
          ],
          "type":"types/genericValue"
        },
        "607":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1530,
            904
          ],
          "type":"logic/flowSwitch"
        },
        "608":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "active":false,
              "arrest":false,
              "evade":false,
              "flow":false,
              "mode":false,
              "offenses":false,
              "offensesList":false,
              "score":false,
              "sightValue":false,
              "timeElapsed":false,
              "uniqueOffenses":true
            }
          },
          "pos":[
            1774,
            274
          ],
          "type":"gameplay/traffic/pursuitInformation"
        },
        "609":{
          "code":{
            "work":"local mode = self.pinIn.mode.value or 0\nlocal score = self.pinIn.score.value\nlocal sight = self.pinIn.sight.value\nlocal offenses = self.pinIn.offenses.value\nlocal olist = self.pinIn.olist.value\nlocal time = self.pinIn.time.value\nlocal topay = self.pinIn.gottkt.value\nlocal tickettxt = self.pinIn.tkttxt.value\nlocal viewTicket = false\n\nlocal txt = \"\"\nlocal btntxt = \"\"\n\nif mode == 0 then\n\nif topay > 0 then\ntxt = self.pinIn.tkttxt.value\nviewTicket=true\nbtntxt = \"Pay Ticket (\" .. string.format(\"$%.2f\", self.pinIn.tktcost.value) .. \")\"\nelse\ntxt = \"Not Being Chased\"\nbtntxt = \"Close Menu\"\nend\n\nelseif mode >= 1 then\ntxt = \"Police! Stop Right Now!\\n\"\ntxt = txt .. \"Wanted Level : \" .. mode .. \"/3\\n\"\ntxt = txt .. \"Score : \" .. string.format(\"%.2f\",score) .. \"\\n\"\ntxt = txt .. \"Visibility : \" .. string.format(\"%.2f\",sight*100) .. \"%%\\n\"\ntxt = txt .. \"Time : \" .. string.format(\"%.2f\", time) .. \"\\n\"\ntxt = txt .. \"Offenses : \\n\"\n\nfor k,v in pairs(olist) do\ntxt = txt .. k .. \" - \" .. v .. \"\\n\"\nend\n\nelseif mode == -1 then\ntxt = \"Busted!\"\nend\n\nself.pinOut.text.value = txt\nself.pinOut.btntxt.value = btntxt\nself.pinOut.oticket.value = viewTicket",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gottkt":false,
              "mode":false,
              "offenses":false,
              "olist":false,
              "score":false,
              "sight":false,
              "time":false,
              "tktcost":false,
              "tkttxt":false
            },
            "p_out":{
              "text":false,
              "btntxt":false,
              "flow":false,
              "oticket":false
            }
          },
          "name":"Police Pursuit UI",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "mode",
              null,
              ""
            ],
            [
              "in",
              "number",
              "score",
              null,
              ""
            ],
            [
              "in",
              "number",
              "sight",
              null,
              ""
            ],
            [
              "in",
              "number",
              "offenses",
              null,
              ""
            ],
            [
              "in",
              "table",
              "olist",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gottkt",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ],
            [
              "out",
              "string",
              "text",
              null,
              ""
            ],
            [
              "out",
              "string",
              "btntxt",
              null,
              ""
            ],
            [
              "in",
              "number",
              "tktcost",
              null,
              ""
            ],
            [
              "in",
              "string",
              "tkttxt",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "oticket",
              null,
              ""
            ]
          ],
          "pos":[
            2348,
            260
          ],
          "type":"util/customLua"
        },
        "610":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Police Info"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            1788,
            820
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "611":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal key = self.pinIn.wid.value .. \"x\"\nif dtable[key] ~= nil then\nself.pinOut.x.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"y\"\nself.pinOut.y.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"w\"\nself.pinOut.w.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"h\"\nself.pinOut.h.value = tonumber(dtable[key])\nelse\nself.pinOut.x.value = 100\nself.pinOut.y.value = 100\nself.pinOut.w.value = 200\nself.pinOut.h.value = 220\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "wid":{
              "type":"string",
              "value":"cops"
            }
          },
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "wid":false
            },
            "p_out":{
              "flow":false,
              "h":false,
              "w":false,
              "x":false,
              "y":false
            }
          },
          "name":"Get IM Prefs",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "x",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ],
            [
              "out",
              "number",
              "w",
              null,
              ""
            ],
            [
              "out",
              "number",
              "h",
              null,
              ""
            ]
          ],
          "pos":[
            1802,
            624
          ],
          "type":"util/customLua"
        },
        "612":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1788,
            1296
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "613":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2012,
            1030
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "614":{
          "code":{
            "work":"self.pinOut.output.value = self.pinIn.input.value",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "input":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Value Holder",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "input",
              null,
              ""
            ],
            [
              "out",
              "number",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            2656,
            1660
          ],
          "type":"util/customLua"
        },
        "615":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            2642,
            1576
          ],
          "type":"scene/getPlayerVehicle"
        },
        "616":{
          "code":{
            "work":"require(\"gameplay/walk\").toggleWalkingMode()",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Toggle Walk",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ]
          ],
          "pos":[
            3902,
            1702
          ],
          "type":"util/customLua"
        },
        "617":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3888,
            1772
          ],
          "type":"vehicle/removeVehicle"
        },
        "618":{
          "code":{
            "work":"local dtable = {}\ndtable[\"engine\"] = {}\ndtable[\"powertrain\"] = {}\ndtable[\"wheels\"] = {}\n\ntable.insert(dtable[\"engine\"], \"engineReducedTorque\")\ntable.insert(dtable[\"engine\"], \"engineDisabled\")\ntable.insert(dtable[\"engine\"], \"engineLockedUp\")\ntable.insert(dtable[\"engine\"], \"engineIsHydrolocking\")\ntable.insert(dtable[\"engine\"], \"engineHydrolocked\")\ntable.insert(dtable[\"engine\"], \"overRevDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"mildOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"overTorqueDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverTorqueDamage\")\ntable.insert(dtable[\"engine\"], \"impactDamage\")\ntable.insert(dtable[\"engine\"], \"oilpanLeak\")\ntable.insert(dtable[\"engine\"], \"oilRadiatorLeak\")\ntable.insert(dtable[\"engine\"], \"headGasketDamaged\")\ntable.insert(dtable[\"engine\"], \"pistonRingsDamaged\")\ntable.insert(dtable[\"engine\"], \"rodBearingsDamaged\")\ntable.insert(dtable[\"engine\"], \"blockMelted\")\ntable.insert(dtable[\"engine\"], \"oilHot\")\ntable.insert(dtable[\"engine\"], \"cylinderWallsMelted\")\ntable.insert(dtable[\"engine\"], \"radiatorLeak\")\ntable.insert(dtable[\"engine\"], \"coolantHot\")\ntable.insert(dtable[\"engine\"], \"oilLevelCritical\")\ntable.insert(dtable[\"engine\"], \"oilStarvation\")\ntable.insert(dtable[\"engine\"], \"oilLevelTooHigh\")\ntable.insert(dtable[\"engine\"], \"exhaustBroken\")\n\ntable.insert(dtable[\"powertrain\"], \"mainEngine\")\ntable.insert(dtable[\"powertrain\"], \"torqueConverter\")\ntable.insert(dtable[\"powertrain\"], \"gearbox\")\ntable.insert(dtable[\"powertrain\"], \"rangebox\")\ntable.insert(dtable[\"powertrain\"], \"transfercase\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorR\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft\")\ntable.insert(dtable[\"powertrain\"], \"differential_R\")\ntable.insert(dtable[\"powertrain\"], \"transfercase_F\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft_F\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorF\")\ntable.insert(dtable[\"powertrain\"], \"differential_F\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFR\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFR\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRL\")\ntable.insert(dtable[\"powertrain\"], \"clutch\")\n\ntable.insert(dtable[\"wheels\"], \"FR\")\ntable.insert(dtable[\"wheels\"], \"brakeFR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFR\")\ntable.insert(dtable[\"wheels\"], \"tireFR\")\n\ntable.insert(dtable[\"wheels\"], \"FL\")\ntable.insert(dtable[\"wheels\"], \"brakeFL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFL\")\ntable.insert(dtable[\"wheels\"], \"tireFL\")\n\ntable.insert(dtable[\"wheels\"], \"RR\")\ntable.insert(dtable[\"wheels\"], \"brakeRR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRR\")\ntable.insert(dtable[\"wheels\"], \"tireRR\")\n\ntable.insert(dtable[\"wheels\"], \"RL\")\ntable.insert(dtable[\"wheels\"], \"brakeRL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRL\")\ntable.insert(dtable[\"wheels\"], \"tireRL\")\n\n\nself.pinOut.devices.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"Mech Damage Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            3132,
            1604
          ],
          "type":"util/customLua"
        },
        "619":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devices = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\nlocal cfidb = \"\"\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\n-- Loop to fetch damage values and add them to table\n\nfor k,v in pairs(devices) do\ndtable[k] = {}\nfor _,dev in pairs(devices[k]) do\n\ntoFetch = \"damageTracker.getDamage('\" .. k .. \"', '\" .. dev .. \"')\"\ncfid = \"dmgtrk\" .. cfidval\n\nif self.pinIn.uid.value ~= nil then\ncfid = cfid .. self.pinIn.uid.value\nend\n\n\nif dev == \"engineReducedTorque\" or dev == \"mildOverrevDamage\" or dev == \"catastrophicOverTorqueDamage\" then\ncfidb = cfid .. \"B\"\nend\n\n-- Fetching main damage tracker value\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\n\n-- Now fetching extra values in some cases\nif dev == \"engineReducedTorque\" or dev == \"mildOverrevDamage\" then\ntoFetch = \"powertrain.getDevice('mainEngine').outputTorqueState\"\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfidb ..\"'))\" \nve:queueLuaCommand(vecmd)\ndtable[k][dev] = tostring(extensions.vluaFetchModule.getVal(cfid)) .. \",\" .. tostring(extensions.vluaFetchModule.getVal(cfidb))\nelseif dev == \"catastrophicOverTorqueDamage\" then\ntoFetch = \"powertrain.getDevice('mainEngine').overTorqueDamage\"\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfidb ..\"'))\" \nve:queueLuaCommand(vecmd)\ndtable[k][dev] = tostring(extensions.vluaFetchModule.getVal(cfid)) .. \",\" .. tostring(extensions.vluaFetchModule.getVal(cfidb))\nelse\ndtable[k][dev] = extensions.vluaFetchModule.getVal(cfid)\nend\n\n\ncfidval = cfidval + 1\nend\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.damageData.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "uid":{
              "type":"string",
              "value":"impmech"
            }
          },
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "devices":false,
              "flow":false,
              "uid":true
            },
            "p_out":{
              "damageData":false,
              "flow":false,
              "ready":true
            }
          },
          "name":"Detailed Vehicle Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "damageData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ],
            [
              "in",
              "string",
              "uid",
              null,
              ""
            ]
          ],
          "pos":[
            3622,
            1422
          ],
          "type":"util/customLua"
        },
        "620":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -2384,
            428
          ],
          "type":"logic/compare"
        },
        "621":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1454,
            744
          ],
          "commentText":"",
          "commentTitle":"Impound",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            2632,
            1386
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "622":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":-1
            },
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3902,
            1870
          ],
          "type":"types/genericValue"
        },
        "623":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "carUsed":{
              "type":"number",
              "value":-1
            }
          },
          "hiddenPins":{
            "p_in":{
              "carCount":true,
              "carUsed":false,
              "flow":false,
              "health":true,
              "money":true,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            3678,
            2024
          ],
          "type":"util/customLua"
        },
        "624":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">",
          "pos":[
            3706,
            -146
          ],
          "type":"logic/compare"
        },
        "625":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">=",
          "pos":[
            3888,
            64
          ],
          "type":"logic/compare"
        },
        "626":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            3678,
            22
          ],
          "type":"types/genericValue"
        },
        "627":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -2398,
            22
          ],
          "type":"logic/branch"
        },
        "628":{
          "code":{
            "work":"local filedata = readFile(self.pinIn.file.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\ndtable[self.pinIn.key.value] = self.pinIn.val.value\nlocal ndata = \"\"\nfor k,v in pairs(dtable) do\nndata = ndata .. k .. \"=\" .. dtable[k] .. \"\\n\"\nend\n\nwriteFile(self.pinIn.file.value, ndata)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"impoundval"
            },
            "val":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "val":false,
              "file":false,
              "flow":false,
              "key":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Table Value",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "in",
              "any",
              "val",
              null,
              ""
            ]
          ],
          "pos":[
            3888,
            -188
          ],
          "type":"util/customLua"
        },
        "629":{
          "code":{
            "work":"self.pinOut.filename.value = \"beamLR/garage/car\" .. self.pinIn.carid.value\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carid":false,
              "flow":false
            },
            "p_out":{
              "filename":false,
              "flow":false
            }
          },
          "name":"Get Garage Car File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "carid",
              null,
              ""
            ],
            [
              "out",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            3888,
            -34
          ],
          "type":"util/customLua"
        },
        "630":{
          "code":{
            "work":"local filedata = readFile(self.pinIn.file.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\ndtable[self.pinIn.tkey.value] = self.pinIn.tval.value or 0\nlocal ndata = \"\"\nfor k,v in pairs(dtable) do\nndata = ndata .. k .. \"=\" .. dtable[k] .. \"\\n\"\nend\n\nprint(ndata)\n\nwriteFile(self.pinIn.file.value, ndata)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "tkey":{
              "type":"string",
              "value":"impoundval"
            }
          },
          "hiddenPins":{
            "p_in":{
              "tval":false,
              "file":false,
              "flow":false,
              "tkey":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Table Value",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ],
            [
              "in",
              "string",
              "tkey",
              null,
              ""
            ],
            [
              "in",
              "any",
              "tval",
              null,
              ""
            ]
          ],
          "pos":[
            3048,
            1422
          ],
          "type":"util/customLua"
        },
        "631":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":true,
              "carUsed":true,
              "flow":false,
              "health":true,
              "money":false,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            4266,
            -104
          ],
          "type":"util/customLua"
        },
        "632":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2656,
            2024
          ],
          "type":"logic/flowSwitch"
        },
        "633":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "name":false
            },
            "p_out":{
              "objID":false
            }
          },
          "pos":[
            -1628,
            -146
          ],
          "type":"scene/idByName"
        },
        "634":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3062,
            2024
          ],
          "type":"logic/frameDelay"
        },
        "635":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2670,
            1915
          ],
          "type":"logic/bundle"
        },
        "636":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceWinner"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1586,
            498
          ],
          "type":"types/genericValue"
        },
        "637":{
          "customName":"Was Walking?",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":-1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            640,
            22
          ],
          "type":"logic/compare"
        },
        "638":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3132,
            1884
          ],
          "type":"logic/flowSwitch"
        },
        "639":{
          "code":{
            "work":"require(\"gameplay/walk\").toggleWalkingMode()",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Toggle Walk",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ]
          ],
          "pos":[
            1396,
            50
          ],
          "type":"util/customLua"
        },
        "640":{
          "code":{
            "work":"self.pinOut.output.value = self.pinIn.input.value",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "input":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Value Holder",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "input",
              null,
              ""
            ],
            [
              "out",
              "number",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            1200,
            50
          ],
          "type":"util/customLua"
        },
        "641":{
          "code":{
            "work":"self.pinOut.output.value = self.pinIn.input.value",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "input":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Value Holder",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "input",
              null,
              ""
            ],
            [
              "out",
              "number",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            -2678,
            -1252
          ],
          "type":"util/customLua"
        },
        "642":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":60
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3384,
            1632
          ],
          "type":"logic/frameDelay"
        },
        "643":{
          "code":{
            "work":"local currentObj = scenetree.findObjectById(self.pinIn.id.value)\ncurrentObj:delete()",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "id":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Delete Object",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "id",
              null,
              ""
            ]
          ],
          "pos":[
            4434,
            428
          ],
          "type":"util/customLua"
        },
        "644":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4602,
            470
          ],
          "type":"logic/frameDelay"
        },
        "645":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3636,
            1632
          ],
          "type":"logic/once"
        },
        "646":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            604,
            631
          ],
          "commentText":"",
          "commentTitle":"Rep And Part Rewards",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -3588,
            -1414
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "647":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -3560,
            -1375
          ],
          "type":"logic/bundle"
        },
        "648":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal points = self.pinIn.points.value\nlocal limits = self.pinIn.limits.value\nlocal id = self.pinIn.vehId.value\nlocal laps = self.pinIn.laps.value\nlocal mode = self.pinIn.speedMode.value\nlocal lane = self.pinIn.useLanes.value\nlocal risk = self.pinIn.risk.value\nlocal avoid = self.pinIn.avoid.value == 1\nlocal speed = self.pinIn.routeSpd.value\nlocal count = #points\n\nlocal wtable = extensions.blrutils.ssplit(points, \",\")\n\nlocal cwp = \"\"\nlocal clim = 0\n\nlocal args = \"{\"\n\nif laps ~= nil then\nargs = args .. \"noOfLaps = \" .. laps .. \",\"\nend\n\nif lane ~= nil then\nargs = args .. \"driveInLane = \" .. extensions.blrutils.boolToText(lane, \"'on'\", \"'off'\") .. \",\"\nend\n\nif avoid ~= nil then\nargs = args .. \"avoidCars = \" .. extensions.blrutils.boolToText(avoid, \"'on'\", \"'off'\") .. \",\"\nend\n\nif risk ~= nil then\nargs = args .. \"aggression = \" .. risk .. \",\"\nend\n\nif speed ~= nil then\nargs = args .. \"routeSpeed = \" .. speed .. \",\"\nend\n\nif mode ~= nil then\nargs = args .. \"routeSpeedMode = '\" .. mode .. \"',\"\nend\n\nargs = args .. \"wpTargetList = {\"\nfor k,v in ipairs(wtable) do\nargs = args .. \"'\" .. wtable[k] .. \"'\"\nif k ~= count then\nargs = args .. \",\"\nend\nend\nargs = args .. \"}\"\n\nif limits ~= nil then\nargs = args .. \",wpSpeeds = {\"\nfor k,v in ipairs(wtable) do\nargs = args .. wtable[k] .. \"=\" .. ltable[k] \nif k ~= count then\nargs = args .. \",\"\nend\nend\nargs = args .. \"}\"\nend\n\nargs = args .. \"}\"\n\nlocal veh = scenetree.findObjectById(self.pinIn.vehId.value)\n\nprint(args)\n\nif veh ~= nil then\nveh:queueLuaCommand(\"ai.driveUsingPath(\" .. args .. \")\")\nend\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "useLanes":{
              "type":"bool",
              "value":false
            },
            "laps":{
              "type":"number",
              "value":99
            },
            "routeSpd":{
              "type":"number",
              "value":50
            },
            "speedMode":{
              "type":"string",
              "value":"limit"
            }
          },
          "hiddenPins":{
            "p_in":{
              "avoid":false,
              "flow":false,
              "laps":true,
              "limits":true,
              "points":false,
              "risk":false,
              "routeSpd":true,
              "speedMode":true,
              "useLanes":true,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"AI Custom Path",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "vehId",
              null,
              ""
            ],
            [
              "in",
              "string",
              "points",
              null,
              ""
            ],
            [
              "in",
              "string",
              "limits",
              null,
              ""
            ],
            [
              "in",
              "number",
              "laps",
              null,
              ""
            ],
            [
              "in",
              "string",
              "speedMode",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "useLanes",
              null,
              ""
            ],
            [
              "in",
              "number",
              "risk",
              null,
              ""
            ],
            [
              "in",
              "number",
              "routeSpd",
              null,
              ""
            ],
            [
              "in",
              "number",
              "avoid",
              null,
              ""
            ]
          ],
          "pos":[
            -886,
            -510
          ],
          "type":"util/customLua"
        },
        "649":{
          "data":{
            "zOffset":0
          },
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "color":{
              "type":"color",
              "value":[
                1,
                0,
                0,
                1
              ]
            },
            "radius":{
              "type":"number",
              "value":5
            }
          },
          "hiddenPins":{
            "p_in":{
              "color":true,
              "fadeFarDist":true,
              "fadeNearDist":true,
              "flow":false,
              "markerType":true,
              "position":false,
              "radius":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1614,
            120
          ],
          "type":"scene/singleMarker"
        },
        "650":{
          "alpha":1,
          "backgroundColor":[
            0.50196081399917602539,
            0.50196081399917602539,
            0.50196081399917602539,
            1
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"RESTORE GAS AFTER \\nINTEGRITY OTHERWISE\\nGAS VAL IS RESET",
          "commentTitle":"SINCE 0.26 NEED TO",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            840,
            -1820
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "651":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"racePlayerLap"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -3224,
            -636
          ],
          "type":"types/genericValue"
        },
        "652":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal trigs = self.pinIn.trigs.value\nlocal ways = self.pinIn.wps.value\nlocal cid = self.pinIn.current.value\nlocal lap = self.pinIn.clap.value\nlocal count = self.pinIn.cpc.value\nlocal laps = self.pinIn.laps.value\nlocal ttable = extensions.blrutils.ssplit(trigs, \",\")\nlocal wtable = extensions.blrutils.ssplit(ways, \",\")\nlocal ntg = \"\"\nlocal nwa = \"\"\nlocal nid = 0\nlocal nla = 0\nlocal finish = false\nlocal ftid = 0\nlocal followtrig = \"\"\nlocal showfollow = false\nlocal pstatus = self.pinIn.status.value or 0\n\nif pstatus == -1 then\nnid = 1\nntg = ttable[nid]\nnla = 1\nfinish = false\nshowfollow = count > 1\nif showfollow then\nfollowtrig = ttable[2]\nend\n\nelse\n\nif cid == count then\nnid = 1\nntg = ttable[nid]\nnwa = wtable[nid]\nnla = lap + 1\nfinish = (laps == lap)\nelse\nnid = cid + 1\nntg = ttable[nid]\nnwa = wtable[nid]\nnla = lap\nend\n\nif count <= 1 then\nshowfollow = false\nfollowtrig = \"none\"\nftid = -1\nelseif nid == count then\nftid = 1\nfollowtrig = ttable[ftid]\nshowfollow = (lap < laps)\nelse\nftid = nid + 1\nfollowtrig = ttable[ftid]\nshowfollow = true\nend\n\nend\n\nself.pinOut.nextTrig.value = ntg\nself.pinOut.nextWp.value = nwa\nself.pinOut.nextId.value = nid\nself.pinOut.newLap.value = nla\nself.pinOut.finished.value = finish\nself.pinOut.ftrig.value = followtrig\nself.pinOut.showft.value = showfollow\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "clap":false,
              "cpc":false,
              "current":false,
              "flow":false,
              "laps":false,
              "status":false,
              "trigs":false,
              "wps":false
            },
            "p_out":{
              "finished":false,
              "flow":false,
              "ftrig":false,
              "newLap":false,
              "nextId":false,
              "nextTrig":false,
              "nextWp":false,
              "showft":false
            }
          },
          "name":"Race Next CP",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "cpc",
              null,
              ""
            ],
            [
              "in",
              "string",
              "trigs",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wps",
              null,
              ""
            ],
            [
              "in",
              "number",
              "current",
              null,
              ""
            ],
            [
              "out",
              "string",
              "nextTrig",
              null,
              ""
            ],
            [
              "out",
              "string",
              "nextWp",
              null,
              ""
            ],
            [
              "out",
              "number",
              "nextId",
              null,
              ""
            ],
            [
              "out",
              "number",
              "newLap",
              null,
              ""
            ],
            [
              "in",
              "number",
              "clap",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "finished",
              null,
              ""
            ],
            [
              "in",
              "number",
              "laps",
              null,
              ""
            ],
            [
              "out",
              "string",
              "ftrig",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "showft",
              null,
              ""
            ],
            [
              "in",
              "number",
              "status",
              null,
              ""
            ]
          ],
          "pos":[
            -2608,
            22
          ],
          "type":"util/customLua"
        },
        "653":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1516,
            851
          ],
          "type":"logic/bundle"
        },
        "654":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "fadeInTime":{
              "type":"number",
              "value":-1
            },
            "fadeOutTime":{
              "type":"number",
              "value":-1
            },
            "file":{
              "type":"string",
              "value":"art/sound/ui_checkpoint.ogg"
            },
            "pitch":{
              "type":"number",
              "value":1
            },
            "unique":{
              "type":"bool",
              "value":false
            },
            "volume":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "channel":true,
              "fadeInTime":true,
              "fadeOutTime":true,
              "file":false,
              "flow":false,
              "pitch":true,
              "reset":false,
              "unique":true,
              "volume":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1404,
            442
          ],
          "type":"audio/playOnce"
        },
        "655":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceRepReward"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3378,
            -1364
          ],
          "type":"types/genericValue"
        },
        "656":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">",
          "pos":[
            -3210,
            -1364
          ],
          "type":"logic/compare"
        },
        "657":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "on":false,
          "pos":[
            -1796,
            428
          ],
          "type":"logic/flowSwitch"
        },
        "658":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1418,
            8
          ],
          "type":"logic/flowSwitch"
        },
        "659":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1222,
            134
          ],
          "type":"logic/flowSwitch"
        },
        "660":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1586,
            274
          ],
          "type":"logic/flowSwitch"
        },
        "661":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -1222,
            8
          ],
          "type":"logic/branch"
        },
        "662":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -942,
            260
          ],
          "type":"scene/getPlayerVehicle"
        },
        "663":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":-1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"~=",
          "pos":[
            -1796,
            302
          ],
          "type":"logic/compare"
        },
        "664":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -592,
            1702
          ],
          "type":"logic/once"
        },
        "665":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -830,
            1632
          ],
          "type":"logic/frameDelay"
        },
        "666":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal k = self.pinIn.key.value\nlocal v = self.pinIn.val.value\nextensions.blrglobals.forceSetFlag(k,v)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"postEditActionsQueued"
            },
            "val":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLRGlobal Flag Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "val",
              null,
              ""
            ]
          ],
          "pos":[
            -606,
            1520
          ],
          "type":"util/customLua"
        },
        "667":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            726,
            744
          ],
          "commentText":"Fixes weird bug with orbit camera using delayed call to restore cam and\\nalso restores gas value after part edit.\\nupdated for odometer & integrity\\nworks with tuning vars apply\\n",
          "commentTitle":"Post Part Edit Actions",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -1092,
            1484
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "668":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal k = self.pinIn.key.value\nlocal flag = extensions.blrglobals.getFlag(k)\nlocal toRet = extensions.blrglobals.fgGetVal(k)\nself.pinOut.val.value = toRet\nself.pinOut.flag.value = flag\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"pgas"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false
            },
            "p_out":{
              "flag":false,
              "flow":false,
              "val":false
            }
          },
          "name":"BLRGlobal Get",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "out",
              "any",
              "val",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            -1040,
            1814
          ],
          "type":"util/customLua"
        },
        "669":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal newFuelValue = self.pinIn.gas.value\nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(string.format(\"energyStorage.getStorage(\\\"mainTank\\\"):setRemainingVolume(%.12f)\", newFuelValue))\nprint(\"should have set gas for veid \" .. self.pinIn.veid.value .. \" to \" .. newFuelValue)\n"
          },
          "customIcon":"local_gas_station",
          "customName":"Force Set Gas",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gas":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Force Set Gas",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gas",
              null,
              ""
            ]
          ],
          "pos":[
            -858,
            2108
          ],
          "type":"util/customLua"
        },
        "670":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -844,
            1744
          ],
          "type":"scene/getPlayerVehicle"
        },
        "671":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal val = self.pinIn.val.value or 0\nlocal key = self.pinIn.key.value\nextensions.customGuiStream.sendDataToUI(key,val)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"playerDamage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Send Value To UI",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "in",
              "any",
              "val",
              null,
              ""
            ]
          ],
          "pos":[
            -1138,
            -3156
          ],
          "type":"util/customLua"
        },
        "672":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"~=",
          "pos":[
            -1642,
            -3030
          ],
          "type":"logic/compare"
        },
        "673":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"uiRepairCost"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1642,
            -3142
          ],
          "type":"types/genericValue"
        },
        "674":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            754,
            351
          ],
          "commentText":"Sends player damage to UI for garage menu.\\nAlso deals with UI Init Request to send back\\npart list and damage cost after UI reset \\n(happens when player hits escape)",
          "commentTitle":"Player Damage UI Sync & UI INIT REQ PROCESS",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -1666,
            -3262
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "675":{
          "code":{
            "work":"\nspawnPrefab(\"myPrefab1\",\"levels/Utah/art/prefabs/ut_lampost_camp_light.prefab.json\",\"791.807 -149.723 144.305\", \"0 0 0 1\", \"1 1 1\")\nlocal extensions = require(\"extensions\")\nextensions.blrutils.spawnPrefab(\"myPrefab2\",\"levels/Utah/art/prefabs/ut_lampost_camp_light.prefab.json\",\"791.807 -146.188 144.305\", \"0 0 0 1\", \"1 1 1\")",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Spawn Prefab BLR",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ]
          ],
          "pos":[
            -900,
            316
          ],
          "type":"util/customLua"
        },
        "676":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -2874,
            694
          ],
          "type":"logic/branch"
        },
        "677":{
          "customName":"Disable Walking Injury",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"~=",
          "pos":[
            -88,
            1800
          ],
          "type":"logic/compare"
        },
        "678":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = extensions.mechDamageLoader.getIntegrityDevices()\nself.pinOut.devices.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"Integrity Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            892,
            918
          ],
          "type":"util/customLua"
        },
        "679":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":false,
              "false":true,
              "flow":false,
              "true":true
            }
          },
          "opSymbol":"~=",
          "pos":[
            1774,
            -370
          ],
          "type":"logic/compare"
        },
        "680":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -130,
            1702
          ],
          "type":"logic/branch"
        },
        "681":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceLeague"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2482,
            -2036
          ],
          "type":"types/genericValue"
        },
        "682":{
          "code":{
            "work":"local club = self.pinIn.club.value\nself.pinOut.folder.value = \"beamLR/races/\" .. club .. \"/\" .. self.pinIn.league.value .. \"/\"\nself.pinOut.infoFile.value = \"beamLR/races/\" .. club .. \"/\" .. self.pinIn.league.value .. \"/info\"\nself.pinOut.progress.value = \"beamLR/races/\" .. club .. \"/progress\"",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "club":false,
              "flow":false,
              "league":false
            },
            "p_out":{
              "progress":false,
              "flow":false,
              "folder":false,
              "infoFile":false
            }
          },
          "name":"Get Race League",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "league",
              null,
              ""
            ],
            [
              "out",
              "string",
              "folder",
              null,
              ""
            ],
            [
              "out",
              "string",
              "infoFile",
              null,
              ""
            ],
            [
              "in",
              "string",
              "club",
              null,
              ""
            ],
            [
              "out",
              "string",
              "progress",
              null,
              ""
            ]
          ],
          "pos":[
            -2482,
            -1938
          ],
          "type":"util/customLua"
        },
        "683":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            -2482,
            -1784
          ],
          "type":"util/customLua"
        },
        "684":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal rtable = {}\nlocal count = tonumber(dtable[\"count\"])\nself.pinOut.raceCount.value = count\nfor i=0,count-1 do\nrtable[i] = \"race\" .. i\nend\nself.pinOut.races.value = rtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "raceCount":false,
              "races":false
            }
          },
          "name":"Race League Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "number",
              "raceCount",
              null,
              ""
            ],
            [
              "out",
              "table",
              "races",
              null,
              ""
            ]
          ],
          "pos":[
            -2482,
            -1672
          ],
          "type":"util/customLua"
        },
        "685":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = self.pinIn.data.value\nlocal league = self.pinIn.league.value\nlocal pstring = dtable[league]\n\nlocal count = self.pinIn.count.value\nlocal races = self.pinIn.races.value\n\nlocal prog = {}\nlocal remain = {}\n\nlocal rcount = 0\nlocal pcount = 0\n\nif pstring ~= \"0\" then\nlocal ptable = extensions.blrutils.ssplit(pstring:sub(1,#pstring-1), \",\")\n\nfor k,v in pairs(ptable) do\nprog[v] = true\npcount= pcount + 1\nend\n\nfor k,v in pairs(races) do\nif not prog[v] then\nremain[rcount] = v\nrcount = rcount + 1\nend\nend\n\nelse\nremain = races\nrcount = count\nend\n\nself.pinOut.prog.value = prog\nself.pinOut.remain.value = remain\nself.pinOut.rcount.value = rcount\nself.pinOut.rrange.value = rcount -1",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "count":false,
              "data":false,
              "flow":false,
              "league":false,
              "races":false
            },
            "p_out":{
              "flow":false,
              "prog":false,
              "rcount":false,
              "remain":false,
              "rrange":false
            }
          },
          "name":"Get League Progress",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "league",
              null,
              ""
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "table",
              "prog",
              null,
              ""
            ],
            [
              "in",
              "number",
              "count",
              null,
              ""
            ],
            [
              "out",
              "table",
              "remain",
              null,
              ""
            ],
            [
              "out",
              "number",
              "rcount",
              null,
              ""
            ],
            [
              "in",
              "table",
              "races",
              null,
              ""
            ],
            [
              "out",
              "number",
              "rrange",
              null,
              ""
            ]
          ],
          "pos":[
            -2244,
            -1854
          ],
          "type":"util/customLua"
        },
        "686":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            -2244,
            -1952
          ],
          "type":"util/customLua"
        },
        "687":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            626,
            -1406
          ],
          "type":"util/customLua"
        },
        "688":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devtable = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\n\nlocal itmd = \"\"\nlocal itsd = \"\"\nlocal splitres = {}\n\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\nfor _,v in pairs(devtable) do\n\nif v == \"odometer\" then \ntoFetch = \"electrics.values.odometer\"\nelseif string.match(v,\"integrity\") then\nsplitres = extensions.blrutils.ssplit(v, \".\")\nitmd = splitres[2]\nitsd = splitres[3]\nif itsd ~= nil then\ntoFetch = \"powertrain.getDevice('\" .. itmd .. \"'):getPartCondition('\" .. itsd .. \"')\"\nelse\ntoFetch = \"powertrain.getDevice('\" .. itmd .. \"'):getPartCondition()\"\nend\nend\n\n\ncfid = \"integ\" .. cfidval\n\nif self.pinIn.uid.value ~= nil then\ncfid = cfid .. self.pinIn.uid.value\nend\n\n-- Fetching main damage tracker value\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\ndtable[v] = extensions.vluaFetchModule.getVal(cfid)\n\n\ncfidval = cfidval + 1\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.integrityData.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "uid":{
              "type":"string",
              "value":"persiteg"
            }
          },
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "devices":false,
              "flow":false,
              "uid":false
            },
            "p_out":{
              "flow":false,
              "integrityData":false,
              "ready":false
            }
          },
          "name":"Detailed Vehicle Integrity",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ],
            [
              "in",
              "string",
              "uid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "integrityData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ]
          ],
          "pos":[
            1088,
            946
          ],
          "type":"util/customLua"
        },
        "689":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false,
              "value":false
            },
            "p_out":{
              "flow":false,
              "value":false
            }
          },
          "pos":[
            -1964,
            -1868
          ],
          "type":"util/getTableValueByKey"
        },
        "690":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            206,
            -2008
          ],
          "type":"util/customLua"
        },
        "691":{
          "code":{
            "work":"self.pinOut.fullpath.value = self.pinIn.folder.value .. self.pinIn.file.value",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "folder":false
            },
            "p_out":{
              "flow":false,
              "fullpath":false
            }
          },
          "name":"Get File In Folder",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "folder",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ],
            [
              "out",
              "string",
              "fullpath",
              null,
              ""
            ]
          ],
          "pos":[
            -2020,
            -1742
          ],
          "type":"util/customLua"
        },
        "692":{
          "alpha":1,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"race victory happens. can\\nalso send progress data to\\npre-race UI to show league\\nand how many races left to\\nwin before next league",
          "commentTitle":"Should be updated when",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            -2128,
            -2170
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "693":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2496,
            -2103
          ],
          "type":"logic/bundle"
        },
        "694":{
          "code":{
            "work":"local rcount = self.pinIn.rcount.value\nlocal league = self.pinIn.league.value\nlocal prog = self.pinIn.prog.value\nlocal full = self.pinIn.full.value\nlocal next = \"\"\nlocal nps = \"\"\nlocal crace = self.pinIn.crace.value\n\nprog[crace] = true\n\nfor k,v in pairs(prog) do\nnps = nps .. k .. \",\"\nend\n\nif league ~= \"hero\" then\nfull[league] = nps\nend\n\nif rcount == 1 then\nif league == \"bronze\" then\nnext = \"silver\"\nelseif league == \"silver\" then\nnext = \"gold\"\nelseif league == \"gold\" then\nnext = \"hero\"\nelse\nnext = \"hero\"\nend\nelse\nnext = league\nend\n\nfull[\"current\"] = next\n\nself.pinOut.league.value = next\nself.pinOut.newfull.value = full\n\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "crace":false,
              "flow":false,
              "full":false,
              "league":false,
              "prog":false,
              "rcount":false
            },
            "p_out":{
              "flow":false,
              "league":false,
              "newfull":false
            }
          },
          "name":"Update League Progress",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "rcount",
              null,
              ""
            ],
            [
              "out",
              "string",
              "league",
              null,
              ""
            ],
            [
              "in",
              "string",
              "league",
              null,
              ""
            ],
            [
              "in",
              "table",
              "prog",
              null,
              ""
            ],
            [
              "in",
              "table",
              "full",
              null,
              ""
            ],
            [
              "in",
              "string",
              "crace",
              null,
              ""
            ],
            [
              "out",
              "table",
              "newfull",
              null,
              ""
            ]
          ],
          "pos":[
            -354,
            -510
          ],
          "type":"util/customLua"
        },
        "695":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal veid = self.pinIn.veid.value\nlocal file = self.pinIn.file.value\nextensions.mechDamageLoader.loadIntegrityFromFile(file,veid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            1004,
            -2218
          ],
          "type":"util/customLua"
        },
        "696":{
          "code":{
            "work":"local filedata = \"\"\nlocal dtable = self.pinIn.data.value\nfor k,v in pairs(dtable) do\nfiledata = filedata .. k .. \"=\" .. v .. \"\\n\"\nend\nwriteFile(self.pinIn.filename.value, filedata)\n\n\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Table To File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            -634,
            -426
          ],
          "type":"util/customLua"
        },
        "697":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = extensions.mechDamageLoader.getIntegrityDevices()\nself.pinOut.devices.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"Integrity Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            206,
            -1812
          ],
          "type":"util/customLua"
        },
        "698":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devtable = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\n\nlocal itmd = \"\"\nlocal itsd = \"\"\nlocal splitres = {}\n\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\nfor _,v in pairs(devtable) do\n\nif v == \"odometer\" then \ntoFetch = \"electrics.values.odometer\"\nelseif string.match(v,\"integrity\") then\nsplitres = extensions.blrutils.ssplit(v, \".\")\nitmd = splitres[2]\nitsd = splitres[3]\nif itsd ~= nil then\ntoFetch = \"powertrain.getDevice('\" .. itmd .. \"'):getPartCondition('\" .. itsd .. \"')\"\nelse\ntoFetch = \"powertrain.getDevice('\" .. itmd .. \"'):getPartCondition()\"\nend\nend\n\n\ncfid = \"integ\" .. cfidval\n\nif self.pinIn.uid.value ~= nil then\ncfid = cfid .. self.pinIn.uid.value\nend\n\n-- Fetching main damage tracker value\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\ndtable[v] = extensions.vluaFetchModule.getVal(cfid)\n\n\ncfidval = cfidval + 1\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.integrityData.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "uid":{
              "type":"string",
              "value":"repair"
            }
          },
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "devices":false,
              "flow":false,
              "uid":false
            },
            "p_out":{
              "flow":false,
              "integrityData":false,
              "ready":false
            }
          },
          "name":"Detailed Vehicle Integrity",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ],
            [
              "in",
              "string",
              "uid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "integrityData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ]
          ],
          "pos":[
            416,
            -1994
          ],
          "type":"util/customLua"
        },
        "699":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceLeague"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -662,
            -300
          ],
          "type":"types/genericValue"
        },
        "700":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2776,
            -2624
          ],
          "type":"logic/flowSwitch"
        },
        "701":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2356,
            -2596
          ],
          "type":"logic/once"
        },
        "702":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -2524,
            -2764
          ],
          "type":"logic/compare"
        },
        "703":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2398,
            -2817
          ],
          "type":"logic/bundle"
        },
        "704":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"leagueProgressUpdate"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2734,
            -2764
          ],
          "type":"types/genericValue"
        },
        "705":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            600,
            334
          ],
          "commentText":"Gotta reload league progress\\ndata tables for next race.",
          "commentTitle":"League Progress Updated",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -2800,
            -2856
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "706":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -802,
            -1462
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "707":{
          "code":{
            "work":"local league = self.pinIn.league.value or \"none\"\nlocal lcount = self.pinIn.lcount.value or 0\nlocal rcount = self.pinIn.rcount.value or 0\nlocal club = self.pinIn.club.value or \"none\"\nlocal txt = \"\"\ntxt = txt .. \"Club: \" .. club .. \"\\n\"\ntxt = txt .. \"League: \" .. league .. \"\\n\"\ntxt = txt .. \"Completed \" .. lcount-rcount .. \"/\" .. lcount .. \" races\"\nself.pinOut.text.value = txt",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "club":false,
              "flow":false,
              "lcount":false,
              "league":false,
              "rcount":false
            },
            "p_out":{
              "flow":false,
              "text":false
            }
          },
          "name":"League Progress Text",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "league",
              null,
              ""
            ],
            [
              "in",
              "string",
              "club",
              null,
              ""
            ],
            [
              "in",
              "number",
              "lcount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "rcount",
              null,
              ""
            ],
            [
              "out",
              "string",
              "text",
              null,
              ""
            ]
          ],
          "pos":[
            -1012,
            -1462
          ],
          "type":"util/customLua"
        },
        "708":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -354,
            -1767
          ],
          "type":"logic/bundle"
        },
        "709":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":100
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            612,
            -1840
          ],
          "type":"logic/frameDelay"
        },
        "710":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            654,
            -1952
          ],
          "type":"logic/once"
        },
        "711":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            416,
            -1840
          ],
          "type":"logic/flowSwitch"
        },
        "712":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal itable = self.pinIn.iteg.value\nlocal file = self.pinIn.file.value\nextensions.mechDamageLoader.saveIntegrityToFile(file, itable)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "iteg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "iteg",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            822,
            -1910
          ],
          "type":"util/customLua"
        },
        "713":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":200
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -32,
            -1826
          ],
          "type":"logic/frameDelay"
        },
        "714":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            430,
            -2260
          ],
          "type":"logic/flowSwitch"
        },
        "715":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            626,
            -2260
          ],
          "type":"logic/frameDelay"
        },
        "716":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            752,
            -2190
          ],
          "type":"logic/once"
        },
        "717":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "on":false,
          "pos":[
            -1530,
            708
          ],
          "type":"logic/flowSwitch"
        },
        "718":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(self.pinIn.name.value, self.pinIn.flag.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "name":{
              "type":"string",
              "value":"trafficEnable"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flag":false,
              "flow":false,
              "name":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLR Flag Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            -718,
            1254
          ],
          "type":"util/customLua"
        },
        "719":{
          "code":{
            "work":"self.pinOut.val.value = self.pinIn.num.value ~= 0",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "num":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "name":"Int To Bool",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "num",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "val",
              null,
              ""
            ]
          ],
          "pos":[
            -1334,
            1254
          ],
          "type":"util/customLua"
        },
        "720":{
          "code":{
            "work":"if self.pinIn.val.value then\nself.pinOut.num.value = self.pinIn.tval.value\nelse\nself.pinOut.num.value = self.pinIn.fval.value\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "fval":{
              "type":"number",
              "value":0
            },
            "tval":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "val":false,
              "flow":false,
              "fval":true,
              "tval":true
            },
            "p_out":{
              "flow":false,
              "num":false
            }
          },
          "name":"Bool To Int",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "val",
              null,
              ""
            ],
            [
              "out",
              "number",
              "num",
              null,
              ""
            ],
            [
              "in",
              "number",
              "fval",
              null,
              ""
            ],
            [
              "in",
              "number",
              "tval",
              null,
              ""
            ]
          ],
          "pos":[
            -718,
            1128
          ],
          "type":"util/customLua"
        },
        "721":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"triggerFilterPlayerTrigName"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            556,
            -776
          ],
          "type":"types/genericValue"
        },
        "722":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal map = extensions.blrutils.getLevelName()\nself.pinOut.file.value = \"beamLR/mapdata/\" .. map .. \"/markers\"\n\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "file":false,
              "flow":false
            }
          },
          "name":"Get Map Marker File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            402,
            1394
          ],
          "type":"util/customLua"
        },
        "723":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            612,
            1394
          ],
          "type":"util/customLua"
        },
        "724":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrutils.deleteMarkers()\nlocal dtable = self.pinIn.markers.value\nextensions.blrutils.spawnMarkers(dtable)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "markers":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Spawn Map Markers",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "markers",
              null,
              ""
            ]
          ],
          "pos":[
            402,
            1506
          ],
          "type":"util/customLua"
        },
        "725":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.data.value\nself.pinOut.name.value = dtable[\"name\"]\nself.pinOut.type.value = dtable[\"type\"]\nself.pinOut.bsfile.value = dtable[\"bsfile\"]\nself.pinOut.config.value = dtable[\"config\"]\nself.pinOut.mfile.value = dtable[\"mfile\"]\nself.pinOut.ifile.value = dtable[\"ifile\"]"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "bsfile":true,
              "config":false,
              "flow":false,
              "ifile":false,
              "mfile":true,
              "name":true,
              "type":true
            }
          },
          "name":"Get BLR Vehicle Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "type",
              null,
              ""
            ],
            [
              "out",
              "string",
              "config",
              null,
              ""
            ],
            [
              "out",
              "string",
              "bsfile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "mfile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "ifile",
              null,
              ""
            ]
          ],
          "pos":[
            -830,
            1926
          ],
          "type":"util/customLua"
        },
        "726":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal veid = self.pinIn.veid.value\nlocal file = self.pinIn.file.value\nextensions.mechDamageLoader.loadIntegrityFromFile(file,veid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            -606,
            1800
          ],
          "type":"util/customLua"
        },
        "727":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal k = self.pinIn.key.value\nlocal flag = extensions.blrglobals.getFlag(k)\nlocal toRet = extensions.blrglobals.fgGetVal(k)\nself.pinOut.val.value = toRet\nself.pinOut.flag.value = flag\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"podo"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false
            },
            "p_out":{
              "flag":true,
              "flow":false,
              "val":false
            }
          },
          "name":"BLRGlobal Get",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "out",
              "any",
              "val",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            -536,
            1870
          ],
          "type":"util/customLua"
        },
        "728":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal odoval = self.pinIn.odo.value or 0\nextensions.mechDamageLoader.forceSetOdometer(self.pinIn.veid.value, odoval)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "odo":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Force Set Odometer",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "odo",
              null,
              ""
            ]
          ],
          "pos":[
            -592,
            1968
          ],
          "type":"util/customLua"
        },
        "729":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.betterpartmgmt.saveConfig(self.pinIn.filename.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save BLR Veh Config",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            -592,
            2066
          ],
          "type":"util/customLua"
        },
        "730":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.betterpartmgmt.saveInventoryToFile(\"beamLR/partinv\")",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Part Inventory",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ]
          ],
          "pos":[
            -1068,
            2164
          ],
          "type":"util/customLua"
        },
        "731":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.betterpartmgmt.saveInventoryToFile(\"beamLR/partinv\")",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Part Inventory",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ]
          ],
          "pos":[
            -1978,
            1002
          ],
          "type":"util/customLua"
        },
        "732":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nif self.pinIn.league.value ~= nil then\ndtable[\"league\"] = self.pinIn.league.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":true,
              "carUsed":true,
              "flow":false,
              "health":true,
              "league":true,
              "money":false,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ],
            [
              "in",
              "string",
              "league",
              null,
              ""
            ]
          ],
          "pos":[
            -1810,
            778
          ],
          "type":"util/customLua"
        },
        "733":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nextensions.betterpartmgmt.setFilter(\"all\")\n\nlocal list = extensions.betterpartmgmt.getAvailablePartList()\nlist = extensions.betterpartmgmt.categoryFilter(list, true)\nextensions.customGuiStream.sendDataToUI(\"availParts\", list)\n\nlist = extensions.betterpartmgmt.getGarageUIData()\nlist = extensions.betterpartmgmt.categoryFilter(list, true)\nextensions.customGuiStream.sendDataToUI(\"garageData\", list)\n\nlist = extensions.betterpartmgmt.getPartPriceLibrary()\nextensions.customGuiStream.sendDataToUI(\"partPrices\", list)\n\nlist = extensions.betterpartmgmt.getTuningUIData()\nextensions.customGuiStream.sendDataToUI(\"tuningData\", list)\n\nlist = extensions.betterpartmgmt.getTuningUIValues()\nextensions.customGuiStream.sendDataToUI(\"tuningValues\", list)\nextensions.customGuiStream.sendDataToUI(\"tuningValuesSlider\", list)\nextensions.customGuiStream.sendDataToUI(\"tuningValuesNumfield\", list)\n\nextensions.customGuiCallbacks.exec(\"reloadPaint\")\n\nlist = extensions.betterpartmgmt.getPartPreviewImageTable()\nextensions.customGuiStream.sendDataToUI(\"partpreview\", list )\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"UI Part List",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ]
          ],
          "pos":[
            -1124,
            -3226
          ],
          "type":"util/customLua"
        },
        "734":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nself.pinOut.flag.value = extensions.blrglobals.blrFlagGet(self.pinIn.name.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "name":{
              "type":"string",
              "value":"uiInitRequest"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "name":false
            },
            "p_out":{
              "flag":false,
              "flow":false
            }
          },
          "name":"BLR Flag Get",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "bool",
              "flag",
              null,
              ""
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ]
          ],
          "pos":[
            -1362,
            -3226
          ],
          "type":"util/customLua"
        },
        "735":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -1390,
            -3128
          ],
          "type":"logic/branch"
        },
        "736":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(self.pinIn.name.value, self.pinIn.flag.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "flag":{
              "type":"bool",
              "value":false
            },
            "name":{
              "type":"string",
              "value":"uiInitRequest"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flag":false,
              "flow":false,
              "name":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLR Flag Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            -1418,
            -3016
          ],
          "type":"util/customLua"
        },
        "737":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"triggerDataPath"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            584,
            -902
          ],
          "type":"types/genericValue"
        },
        "738":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            1452,
            -3044
          ],
          "type":"util/customLua"
        },
        "739":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"triggerDataPath"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1452,
            -3156
          ],
          "type":"types/genericValue"
        },
        "740":{
          "code":{
            "work":"local dtable = self.pinIn.tdata.value\nself.pinOut.shopFile.value = dtable[\"shopfile\"]",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "tdata":false
            },
            "p_out":{
              "flow":false,
              "shopFile":false
            }
          },
          "name":"Car Shop Extra Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "tdata",
              null,
              ""
            ],
            [
              "out",
              "string",
              "shopFile",
              null,
              ""
            ]
          ],
          "pos":[
            1662,
            -3170
          ],
          "type":"util/customLua"
        },
        "741":{
          "code":{
            "work":"local dtable = self.pinIn.dtable.value\nself.pinOut.league.value = dtable[\"current\"]\nself.pinOut.bronze.value = dtable[\"bronze\"]\nself.pinOut.silver.value = dtable[\"silver\"]\nself.pinOut.gold.value = dtable[\"gold\"]\nself.pinOut.hero.value = dtable[\"hero\"]",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "dtable":false,
              "flow":false
            },
            "p_out":{
              "bronze":true,
              "flow":false,
              "gold":true,
              "hero":true,
              "league":false,
              "silver":true
            }
          },
          "name":"Club Progress Info",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "string",
              "league",
              null,
              ""
            ],
            [
              "out",
              "string",
              "bronze",
              null,
              ""
            ],
            [
              "out",
              "string",
              "silver",
              null,
              ""
            ],
            [
              "out",
              "string",
              "gold",
              null,
              ""
            ],
            [
              "out",
              "string",
              "hero",
              null,
              ""
            ],
            [
              "in",
              "table",
              "dtable",
              null,
              ""
            ]
          ],
          "pos":[
            612,
            -1308
          ],
          "type":"util/customLua"
        },
        "742":{
          "code":{
            "work":"if self.pinIn.val.value then\nself.pinOut.num.value = self.pinIn.tval.value\nelse\nself.pinOut.num.value = self.pinIn.fval.value\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "fval":{
              "type":"number",
              "value":0
            },
            "tval":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "val":false,
              "flow":false,
              "fval":true,
              "tval":true
            },
            "p_out":{
              "flow":false,
              "num":false
            }
          },
          "name":"Bool To Int",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "val",
              null,
              ""
            ],
            [
              "out",
              "number",
              "num",
              null,
              ""
            ],
            [
              "in",
              "number",
              "fval",
              null,
              ""
            ],
            [
              "in",
              "number",
              "tval",
              null,
              ""
            ]
          ],
          "pos":[
            -116,
            652
          ],
          "type":"util/customLua"
        },
        "743":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -438,
            428
          ],
          "type":"scene/getPlayerVehicle"
        },
        "744":{
          "code":{
            "work":"local vid = self.pinIn.vehid.value\nlocal gsize = scenetree.SpawnedVehicles:size()\nlocal todel = {}\nlocal cid = 0\nfor i=0,gsize-1 do\ncid = scenetree.SpawnedVehicles:at(i):getId()\ntodel[i] = cid\nend\n\nfor i=0, #todel-1 do\nif todel[i] ~= nil then\nscenetree.findObjectById(todel[i]):delete()\nend\nend\n\n\nif scenetree.findObject(\"thePlayer\") ~= nil then\ncid = scenetree.findObject(\"thePlayer\"):getId()\nif cid ~= vid then\nscenetree.findObject(\"thePlayer\"):delete()\nend\nend\n\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Remove Other Vehicles",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "vehid",
              null,
              ""
            ]
          ],
          "pos":[
            -424,
            218
          ],
          "type":"util/customLua"
        },
        "745":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"waitmsgState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -326,
            764
          ],
          "type":"types/genericValue"
        },
        "746":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":true,
              "true":true
            }
          },
          "opSymbol":"==",
          "pos":[
            -130,
            764
          ],
          "type":"logic/compare"
        },
        "747":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal val = self.pinIn.val.value or 0\nlocal key = self.pinIn.key.value\nextensions.customGuiStream.sendDataToUI(key,val)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"waitmsg"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Send Value To UI",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "in",
              "any",
              "val",
              null,
              ""
            ]
          ],
          "pos":[
            -312,
            904
          ],
          "type":"util/customLua"
        },
        "748":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "active":true,
              "damage":true,
              "dirVec":true,
              "dirVecUp":true,
              "flow":false,
              "position":false,
              "rotation":false,
              "velocity":true,
              "velocityVector":true
            }
          },
          "pos":[
            108,
            400
          ],
          "type":"vehicle/vehicleMapData"
        },
        "749":{
          "code":{
            "work":"dump(self.pinIn.pos.value)\ndump(self.pinIn.rot.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "pos":false,
              "rot":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Debug Pos Rot",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "vec3",
              "pos",
              null,
              ""
            ],
            [
              "in",
              "quat",
              "rot",
              null,
              ""
            ]
          ],
          "pos":[
            94,
            554
          ],
          "type":"util/customLua"
        },
        "750":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(self.pinIn.name.value, self.pinIn.flag.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "flag":{
              "type":"bool",
              "value":false
            },
            "name":{
              "type":"string",
              "value":"careerResetRequest"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flag":false,
              "flow":false,
              "name":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLR Flag Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            -158,
            2332
          ],
          "type":"util/customLua"
        },
        "751":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            628,
            310
          ],
          "commentText":"",
          "commentTitle":"UI Career Reset Request",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -364,
            2142
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "752":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            66,
            2206
          ],
          "type":"logic/flowSwitch"
        },
        "753":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal k = self.pinIn.key.value\nlocal v = self.pinIn.val.value\nextensions.blrglobals.fgSetVal(k,v)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"cvgid"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLRGlobal Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "in",
              "any",
              "val",
              null,
              ""
            ]
          ],
          "pos":[
            -2874,
            988
          ],
          "type":"util/customLua"
        },
        "754":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerRep"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3560,
            -1322
          ],
          "type":"types/genericValue"
        },
        "755":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal val = self.pinIn.val.value or 0\nlocal key = self.pinIn.key.value\nextensions.customGuiStream.sendDataToUI(key,val)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"playerWalking"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Send Value To UI",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "in",
              "any",
              "val",
              null,
              ""
            ]
          ],
          "pos":[
            -2692,
            988
          ],
          "type":"util/customLua"
        },
        "756":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value + self.pinIn.DX.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X+DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            -3560,
            -1210
          ],
          "type":"util/customLua"
        },
        "757":{
          "code":{
            "work":"local veh = scenetree.findObjectById(self.pinIn.veid.value)\nself.pinOut.damage.value = map.objects[veh:getId()].damage",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "veid":false
            },
            "p_out":{
              "damage":false,
              "flow":false
            }
          },
          "name":"Get Vehicle Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "damage",
              null,
              ""
            ]
          ],
          "pos":[
            5568,
            64
          ],
          "type":"util/customLua"
        },
        "758":{
          "data":{},
          "dynamicMode":"once",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1522,
            1114
          ],
          "type":"vehicle/recoverInPlace"
        },
        "759":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            388,
            -510
          ],
          "type":"logic/compare"
        },
        "760":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nif self.pinIn.league.value ~= nil then\ndtable[\"league\"] = self.pinIn.league.value\nend\n\nif self.pinIn.reputation.value ~= nil then\ndtable[\"rep\"] = self.pinIn.reputation.value\nend\n\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carCount":true,
              "carUsed":true,
              "flow":false,
              "health":true,
              "league":true,
              "money":true,
              "reputation":false,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ],
            [
              "in",
              "string",
              "league",
              null,
              ""
            ],
            [
              "in",
              "number",
              "reputation",
              null,
              ""
            ]
          ],
          "pos":[
            -3196,
            -1210
          ],
          "type":"util/customLua"
        },
        "761":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"triggerDataPath"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2048,
            -2792
          ],
          "type":"types/genericValue"
        },
        "762":{
          "data":{},
          "dynamicMode":"once",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            5778,
            64
          ],
          "type":"vehicle/recoverInPlace"
        },
        "763":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">",
          "pos":[
            5792,
            204
          ],
          "type":"logic/compare"
        },
        "764":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            5232,
            148
          ],
          "type":"logic/flowSwitch"
        },
        "765":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "asDuration":{
              "type":"bool",
              "value":false
            },
            "input":{
              "type":"number",
              "value":50
            },
            "reverseHit":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "asDuration":true,
              "dt":true,
              "flow":false,
              "input":true,
              "reset":true,
              "reverseHit":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            94,
            1604
          ],
          "type":"logic/rateLimit"
        },
        "766":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            5330,
            64
          ],
          "type":"logic/frameDelay"
        },
        "767":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            5372,
            218
          ],
          "type":"logic/once"
        },
        "768":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePartReward"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3546,
            -1070
          ],
          "type":"types/genericValue"
        },
        "769":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            906,
            1086
          ],
          "type":"logic/compare"
        },
        "770":{
          "code":{
            "work":"local veh = scenetree.findObjectById(self.pinIn.veid.value)\nself.pinOut.damage.value = map.objects[veh:getId()].damage",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "veid":false
            },
            "p_out":{
              "damage":false,
              "flow":false
            }
          },
          "name":"Get Vehicle Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "damage",
              null,
              ""
            ]
          ],
          "pos":[
            1102,
            1114
          ],
          "type":"util/customLua"
        },
        "771":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            556,
            1114
          ],
          "type":"logic/frameDelay"
        },
        "772":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            752,
            1128
          ],
          "type":"logic/once"
        },
        "773":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "checkVelocity":{
              "type":"number",
              "value":0.01000000000000000541
            }
          },
          "hiddenPins":{
            "p_in":{
              "reset":false,
              "aiVehId":false,
              "checkVelocity":true,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "stopped":false
            }
          },
          "pos":[
            -2006,
            400
          ],
          "type":"vehicle/ai/stop"
        },
        "774":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            -2104,
            -2680
          ],
          "type":"util/customLua"
        },
        "775":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nself.pinOut.missionFile.value = dtable[\"missionFile\"]\nself.pinOut.shopFile.value = dtable[\"shopFile\"]",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "missionFile":false,
              "shopFile":false
            }
          },
          "name":"Part Shop Extra Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "string",
              "missionFile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "shopFile",
              null,
              ""
            ]
          ],
          "pos":[
            -2104,
            -2568
          ],
          "type":"util/customLua"
        },
        "776":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentRepairCost"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            5022,
            -244
          ],
          "type":"types/genericValue"
        },
        "777":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2866,
            2024
          ],
          "type":"logic/flowSwitch"
        },
        "778":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":70
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2866,
            1898
          ],
          "type":"logic/frameDelay"
        },
        "779":{
          "alpha":1,
          "backgroundColor":[
            0.50196081399917602539,
            0.50196081399917602539,
            0.50196081399917602539,
            1.00392162799835205078
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"ACTIVE FLOW BECAUSE THE\\nPOLICE CODE WILL UNFREEZE\\nWHEN \"you can drive away\" \\nSHOWS UP IN THE UI",
          "commentTitle":"THIS FREEZE NODE NEEDS",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            2170,
            714
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "780":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentRepairCost"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            402,
            484
          ],
          "type":"types/genericValue"
        },
        "781":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentRepairCost"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2880,
            1506
          ],
          "type":"types/genericValue"
        },
        "782":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            4238,
            -580
          ],
          "type":"util/customLua"
        },
        "783":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            4238,
            232
          ],
          "type":"util/customLua"
        },
        "784":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            948,
            218
          ],
          "type":"util/customLua"
        },
        "785":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            -1348,
            -3660
          ],
          "type":"util/customLua"
        },
        "786":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "fadeInTime":{
              "type":"number",
              "value":-1
            },
            "fadeOutTime":{
              "type":"number",
              "value":-1
            },
            "file":{
              "type":"string",
              "value":"core/art/sound/ui_mission_complete_gold.ogg"
            },
            "pitch":{
              "type":"number",
              "value":1
            },
            "unique":{
              "type":"bool",
              "value":false
            },
            "volume":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "channel":true,
              "fadeInTime":true,
              "fadeOutTime":true,
              "file":false,
              "flow":false,
              "pitch":true,
              "reset":false,
              "unique":true,
              "volume":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            990,
            -3716
          ],
          "type":"audio/playOnce"
        },
        "787":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            780,
            -3716
          ],
          "type":"logic/flowSwitch"
        },
        "788":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal allparts = extensions.blrutils.ssplit(self.pinIn.parts.value, \",\")\nif allparts[1] ~= \"none\" then\nfor i=1,#allparts do\nextensions.betterpartmgmt.addToInventory(allparts[i])\nend\nextensions.betterpartmgmt.saveInventoryToFile(\"beamLR/partInv\")\nend\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "parts":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Process Part Reward",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "parts",
              null,
              ""
            ]
          ],
          "pos":[
            -3364,
            -1070
          ],
          "type":"util/customLua"
        },
        "789":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerRep"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -3378,
            -1224
          ],
          "type":"types/genericValue"
        },
        "790":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -382,
            -3912
          ],
          "type":"scene/getPlayerVehicle"
        },
        "791":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -32,
            -3968
          ],
          "type":"logic/compare"
        },
        "792":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            1958,
            953
          ],
          "commentText":"",
          "commentTitle":"Challenges",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -3654,
            -3878
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "793":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "azimuthOverride":false,
              "dayLength":false,
              "dayScale":false,
              "nightScale":false,
              "time":false
            }
          },
          "pos":[
            -998,
            414
          ],
          "type":"environment/getTimeOfDay"
        },
        "794":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":false,
              "false":true,
              "flow":false,
              "true":true
            }
          },
          "opSymbol":"==",
          "pos":[
            -3392,
            -3254
          ],
          "type":"logic/compare"
        },
        "795":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "color":false,
              "flow":false,
              "value":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -704,
            470
          ],
          "type":"ui/cornerTimer"
        },
        "796":{
          "code":{
            "work":"local time = self.pinIn.inTime.value\nlocal timeval = (time * 24.0 * 60.0) + (12.0 * 60.0)\nlocal uitime = math.floor(timeval % (24.0*60.0))\nlocal i,f = math.modf(timeval)\nlocal seconds = f * 60.0 / 100.0\nself.pinOut.outTime.value = uitime + (seconds)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "inTime":false
            },
            "p_out":{
              "flow":false,
              "outTime":false
            }
          },
          "name":"Day Time to UI",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "inTime",
              null,
              ""
            ],
            [
              "out",
              "number",
              "outTime",
              null,
              ""
            ]
          ],
          "pos":[
            -914,
            484
          ],
          "type":"util/customLua"
        },
        "797":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -3392,
            -3338
          ],
          "type":"scene/getPlayerVehicle"
        },
        "798":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"challengeCheckpoint"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3140,
            -3310
          ],
          "type":"types/genericValue"
        },
        "799":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -3630,
            -3013
          ],
          "type":"logic/bundle"
        },
        "800":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -2706,
            -3324
          ],
          "type":"logic/branch"
        },
        "801":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"challengeCheckpoint"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2692,
            -3422
          ],
          "type":"types/genericValue"
        },
        "802":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local myObj = scenetree.findObjectById(self.pinIn.newPin.value)\nlocal objPos = {}\nif myObj ~= nil then\nobjPos = myObj:getPosition()\nend\nself.pinOut.pos.value = {objPos.x, objPos.y, objPos.z}"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "newPin":false
            },
            "p_out":{
              "flow":false,
              "pos":false
            }
          },
          "name":"Get Obj Pos",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "vec3",
              "pos",
              null,
              ""
            ],
            [
              "in",
              "number",
              "newPin",
              null,
              ""
            ]
          ],
          "pos":[
            -2650,
            -3226
          ],
          "type":"util/customLua"
        },
        "803":{
          "data":{
            "zOffset":0
          },
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "color":{
              "type":"color",
              "value":[
                1,
                0,
                0.00006008148190000004,
                1
              ]
            },
            "radius":{
              "type":"number",
              "value":5
            }
          },
          "hiddenPins":{
            "p_in":{
              "color":true,
              "fadeFarDist":true,
              "fadeNearDist":true,
              "flow":false,
              "markerType":true,
              "position":false,
              "radius":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2440,
            -3128
          ],
          "type":"scene/singleMarker"
        },
        "804":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2272,
            -3338
          ],
          "type":"logic/flowSwitch"
        },
        "805":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "fadeInTime":{
              "type":"number",
              "value":-1
            },
            "fadeOutTime":{
              "type":"number",
              "value":-1
            },
            "file":{
              "type":"string",
              "value":"core/art/sound/ui_mission_complete_gold.ogg"
            },
            "pitch":{
              "type":"number",
              "value":1
            },
            "unique":{
              "type":"bool",
              "value":false
            },
            "volume":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "channel":true,
              "fadeInTime":true,
              "fadeOutTime":true,
              "file":true,
              "flow":false,
              "pitch":true,
              "reset":false,
              "unique":true,
              "volume":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2062,
            -3324
          ],
          "type":"audio/playOnce"
        },
        "806":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -3392,
            -3114
          ],
          "type":"logic/branch"
        },
        "807":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -2636,
            -3114
          ],
          "type":"logic/compare"
        },
        "808":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -2538,
            -3422
          ],
          "type":"logic/branch"
        },
        "809":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -2496,
            -3338
          ],
          "type":"logic/branch"
        },
        "810":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"challengeInProgress"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3616,
            -3380
          ],
          "type":"types/genericValue"
        },
        "811":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -3630,
            -3534
          ],
          "type":"logic/compare"
        },
        "812":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2272,
            -3268
          ],
          "type":"logic/once"
        },
        "813":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1852,
            -3828
          ],
          "type":"types/genericValue"
        },
        "814":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            -1866,
            -3730
          ],
          "type":"util/customLua"
        },
        "815":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1866,
            -3604
          ],
          "type":"types/genericValue"
        },
        "816":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1866,
            -3478
          ],
          "type":"types/genericValue"
        },
        "817":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Daredevil Challenges"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":true,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            -3168,
            -3814
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "818":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal key = self.pinIn.wid.value .. \"x\"\nif dtable[key] ~= nil then\nself.pinOut.x.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"y\"\nself.pinOut.y.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"w\"\nself.pinOut.w.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"h\"\nself.pinOut.h.value = tonumber(dtable[key])\nelse\nself.pinOut.x.value = 100\nself.pinOut.y.value = 100\nself.pinOut.w.value = 200\nself.pinOut.h.value = 220\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "wid":{
              "type":"string",
              "value":"dare"
            }
          },
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "wid":false
            },
            "p_out":{
              "flow":false,
              "h":false,
              "w":false,
              "x":false,
              "y":false
            }
          },
          "name":"Get IM Prefs",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "x",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ],
            [
              "out",
              "number",
              "w",
              null,
              ""
            ],
            [
              "out",
              "number",
              "h",
              null,
              ""
            ]
          ],
          "pos":[
            -3364,
            -3814
          ],
          "type":"util/customLua"
        },
        "819":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value + self.pinIn.DX.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X+DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            -1866,
            -3296
          ],
          "type":"util/customLua"
        },
        "820":{
          "count":3,
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "value_1":{
              "type":"number",
              "value":0
            },
            "value_2":{
              "type":"number",
              "value":1
            },
            "value_3":{
              "type":"number",
              "value":2
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "value":false,
              "value_1":false,
              "value_2":false,
              "value_3":false
            },
            "p_out":{
              "flow":false,
              "match_1":false,
              "match_2":false,
              "match_3":false,
              "none":false
            }
          },
          "pos":[
            -2944,
            -3716
          ],
          "type":"logic/switchcase"
        },
        "821":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"challengeUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2944,
            -3814
          ],
          "type":"types/genericValue"
        },
        "822":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Get Challenge"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            -2734,
            -3814
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "823":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2174,
            -3828
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "824":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2720,
            -3716
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "825":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Accept"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            -2538,
            -3814
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "826":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            -3154,
            -3590
          ],
          "type":"util/customLua"
        },
        "827":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"triggerDataPath"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3364,
            -3604
          ],
          "type":"types/genericValue"
        },
        "828":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal toRet = {}\nlocal count = tonumber(dtable[\"count\"])\nself.pinOut.count.value = count\nfor i=1,count do\ntoRet[i] = dtable[\"c\" .. i]\nend\nself.pinOut.cfiles.value = toRet\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "cfiles":false,
              "count":false,
              "flow":false
            }
          },
          "name":"Get Challenges ",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "number",
              "count",
              null,
              ""
            ],
            [
              "out",
              "table",
              "cfiles",
              null,
              ""
            ]
          ],
          "pos":[
            -3350,
            -3464
          ],
          "type":"util/customLua"
        },
        "829":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal unit = extensions.blrutils.getSettingValue(\"uiUnits\")\nlocal dtable = self.pinIn.cfiles.value\nlocal pick = self.pinIn.pick.value\nlocal cfile = \"beamLR/challenges/\" .. extensions.blrutils.getLevelName() .. \"/\" .. dtable[pick]\nlocal ctable = extensions.blrutils.loadDataTable(cfile)\nlocal processed = extensions.blrutils.processChallengeRandoms(ctable)\nlocal txttmp = \"\"\nself.pinOut.desc.value = ctable[\"desc\"]\nself.pinOut.type.value = ctable[\"type\"]\nself.pinOut.trigs.value = extensions.blrutils.ssplit(ctable[\"triggers\"], \",\")\nself.pinOut.wager.value = processed[\"wager\"]\nself.pinOut.reputation.value = processed[\"rep\"]\nself.pinOut.targetSpd.value = processed[\"targetspd\"]\nself.pinOut.timeLimit.value = processed[\"timelimit\"]\nself.pinOut.targetTime.value = processed[\"targettime\"]\nself.pinOut.driftPoints.value = processed[\"driftpts\"]\nself.pinOut.gmwp.value = ctable[\"gmwp\"]\n\nlocal infotxt = ctable[\"desc\"] .. \"\\n\"\ninfotxt = infotxt .. \"Wager: $\" .. processed[\"wager\"] .. \"\\n\"\ninfotxt = infotxt .. \"Rep: \" .. processed[\"rep\"] .. \"\\n\"\n\nif processed[\"targetspd\"] ~= nil then\nif unit == \"imperial\" then\ntxttmp = string.format(\"%.1f\", (processed[\"targetspd\"]*2.237))\ninfotxt = infotxt .. \"Target Speed: \" ..  txttmp .. \" mph \\n\"\nelse\ntxttmp = string.format(\"%.1f\", (processed[\"targetspd\"]*3.6))\ninfotxt = infotxt .. \"Target Speed: \" .. txttmp .. \" km/h \\n\"\nend\nend\n\nif processed[\"timelimit\"] ~= nil then\ninfotxt = infotxt .. \"Time Limit: \" .. processed[\"timelimit\"] .. \"\\n\"\nend\n\nif processed[\"targettime\"] ~= nil then\ninfotxt = infotxt .. \"Target Time: \" .. processed[\"targettime\"] .. \"\\n\"\nend\n\nif processed[\"driftpts\"] ~= nil then\ninfotxt = infotxt .. \"Drift Points: \" .. processed[\"driftpts\"] .. \"\\n\"\nend\n\nself.pinOut.infotxt.value = infotxt\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "cfiles":false,
              "flow":false,
              "pick":false
            },
            "p_out":{
              "desc":false,
              "driftPoints":false,
              "flow":false,
              "gmwp":false,
              "infotxt":false,
              "reputation":false,
              "targetSpd":false,
              "targetTime":false,
              "timeLimit":false,
              "trigs":false,
              "type":false,
              "wager":false
            }
          },
          "name":"Get Challenge Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "cfiles",
              null,
              ""
            ],
            [
              "in",
              "number",
              "pick",
              null,
              ""
            ],
            [
              "out",
              "string",
              "desc",
              null,
              ""
            ],
            [
              "out",
              "string",
              "type",
              null,
              ""
            ],
            [
              "out",
              "number",
              "wager",
              null,
              ""
            ],
            [
              "out",
              "table",
              "trigs",
              null,
              ""
            ],
            [
              "out",
              "number",
              "targetSpd",
              null,
              ""
            ],
            [
              "out",
              "number",
              "timeLimit",
              null,
              ""
            ],
            [
              "out",
              "number",
              "targetTime",
              null,
              ""
            ],
            [
              "out",
              "number",
              "driftPoints",
              null,
              ""
            ],
            [
              "out",
              "string",
              "infotxt",
              null,
              ""
            ],
            [
              "out",
              "number",
              "reputation",
              null,
              ""
            ],
            [
              "out",
              "string",
              "gmwp",
              null,
              ""
            ]
          ],
          "pos":[
            -2944,
            -3618
          ],
          "type":"util/customLua"
        },
        "830":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -3042,
            1576
          ],
          "type":"logic/branch"
        },
        "831":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(self.pinIn.name.value, self.pinIn.flag.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "flag":{
              "type":"bool",
              "value":true
            },
            "name":{
              "type":"string",
              "value":"gmstate"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flag":false,
              "flow":false,
              "name":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLR Flag Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            -2048,
            -3590
          ],
          "type":"util/customLua"
        },
        "832":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "float":{
              "type":"bool",
              "value":false
            },
            "rangeStart":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "rangeStart":false,
              "float":true,
              "flow":false,
              "rangeEnd":false
            },
            "p_out":{
              "flow":false,
              "random":false
            }
          },
          "pos":[
            -3154,
            -3464
          ],
          "type":"util/randomNumber"
        },
        "833":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"so races can deactivate traffic",
          "commentTitle":"Updated to work with toggle flag",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            -616,
            882
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "834":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal map = extensions.blrutils.getLevelName()\nself.pinOut.file.value = \"beamLR/mapdata/\" .. map .. \"/triggers\"\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "file":false,
              "flow":false
            }
          },
          "name":"Get Map Trigger File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            -228,
            540
          ],
          "type":"util/customLua"
        },
        "835":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            80,
            694
          ],
          "type":"util/customLua"
        },
        "836":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal idtable = {station = 1, repair = 2, usedcarshop = 3, partshop = 4,  garage=5,race=6}\nlocal tname = self.pinIn.name.value\nlocal tdata = self.pinIn.tdata.value\n\nif tdata[tname] == nil then\nself.pinOut.typeName.value = \"empty\"\nself.pinOut.typeID.value = -1\nself.pinOut.extras.value = \"none\"\nelse\nlocal tsplit = extensions.blrutils.ssplit(tdata[tname], \",\")\nlocal type = tsplit[1]\nlocal extras = tsplit[2]\nif type ~= nil then\nself.pinOut.typeName.value = type\nself.pinOut.typeID.value = idtable[type]\nif extras ~= nil then\nself.pinOut.extras.value = \"beamLR/mapdata/\" .. extensions.blrutils.getLevelName() .. \"/triggerData/\" .. extras\nelse\nself.pinOut.extras.value = \"none\"\nend\nelse\nself.pinOut.typeName.value = \"empty\"\nself.pinOut.typeID.value = -1\nself.pinOut.extras.value = \"none\"\nend\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "name":false,
              "tdata":false
            },
            "p_out":{
              "typeName":false,
              "extras":false,
              "flow":false,
              "typeID":false
            }
          },
          "name":"Trigger Name To Type",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "typeName",
              null,
              ""
            ],
            [
              "out",
              "number",
              "typeID",
              null,
              ""
            ],
            [
              "in",
              "table",
              "tdata",
              null,
              ""
            ],
            [
              "out",
              "string",
              "extras",
              null,
              ""
            ]
          ],
          "pos":[
            514,
            -1056
          ],
          "type":"util/customLua"
        },
        "837":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2244,
            -3100
          ],
          "type":"types/genericValue"
        },
        "838":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"challengeComplete"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2244,
            -3184
          ],
          "type":"types/genericValue"
        },
        "839":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2552,
            -3688
          ],
          "type":"types/genericValue"
        },
        "840":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">=",
          "pos":[
            -2342,
            -3716
          ],
          "type":"logic/compare"
        },
        "841":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"challengeUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2706,
            -3520
          ],
          "type":"types/genericValue"
        },
        "842":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2720,
            -3618
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "843":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Give Up"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            -2552,
            -3604
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "844":{
          "code":{
            "work":"self.pinOut.cflow_not.value = self.pinIn.flow.value and (self.pinIn.cstatus.value ~= 1)\nself.pinOut.cflow.value = self.pinIn.flow.value and (self.pinIn.cstatus.value == 1)\nself.pinOut.mflow_not.value = self.pinIn.flow.value and (self.pinIn.mstatus.value ~= 1)\nself.pinOut.mflow.value = self.pinIn.flow.value and (self.pinIn.mstatus.value == 1)\nself.pinOut.rflow.value = self.pinIn.flow.value and (self.pinIn.rstatus.value == 1)\nself.pinOut.rflow_not.value = self.pinIn.flow.value and (self.pinIn.rstatus.value ~= 1)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "rstatus":false,
              "cstatus":false,
              "flow":false,
              "mstatus":false
            },
            "p_out":{
              "cflow":false,
              "cflow_not":false,
              "flow":false,
              "mflow":false,
              "mflow_not":false,
              "rflow":false,
              "rflow_not":false
            }
          },
          "name":"Active Mission UI",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "mstatus",
              null,
              ""
            ],
            [
              "in",
              "number",
              "rstatus",
              null,
              ""
            ],
            [
              "in",
              "number",
              "cstatus",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "mflow",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "rflow",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "cflow",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "mflow_not",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "rflow_not",
              null,
              ""
            ],
            [
              "out",
              "flow",
              "cflow_not",
              null,
              ""
            ]
          ],
          "pos":[
            584,
            -426
          ],
          "type":"util/customLua"
        },
        "845":{
          "count":2,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            906,
            -300
          ],
          "type":"logic/and"
        },
        "846":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal options = extensions.blrutils.loadDataTable(\"beamLR/options\")\nlocal ctraffic = tonumber(options[\"crazytraffic\"])\nif ctraffic == 0 then\nself.pinOut.traffic.value = tonumber(options[\"traffic\"])\nself.pinOut.police.value = tonumber(options[\"police\"])\nself.pinOut.trucks.value = tonumber(options[\"trucks\"])\nself.pinOut.pool.value = (tonumber(options[\"traffic\"]) + tonumber(options[\"police\"]) + tonumber(options[\"trucks\"])) / 3\nelse\nself.pinOut.traffic.value = 8\nself.pinOut.police.value = 8\nself.pinOut.trucks.value = 8\nself.pinOut.pool.value = 18\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false,
              "police":false,
              "pool":false,
              "traffic":false,
              "trucks":false
            }
          },
          "name":"Load BLR Options",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "number",
              "traffic",
              null,
              ""
            ],
            [
              "out",
              "number",
              "police",
              null,
              ""
            ],
            [
              "out",
              "number",
              "trucks",
              null,
              ""
            ],
            [
              "out",
              "number",
              "pool",
              null,
              ""
            ]
          ],
          "pos":[
            -662,
            302
          ],
          "type":"util/customLua"
        },
        "847":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(\"waitmsg\", self.pinIn.msg.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "msg":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "msg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Wait Message",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "msg",
              null,
              ""
            ]
          ],
          "pos":[
            -186,
            -1812
          ],
          "type":"util/customLua"
        },
        "848":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(\"waitmsg\", self.pinIn.msg.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "msg":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "msg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Wait Message",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "msg",
              null,
              ""
            ]
          ],
          "pos":[
            1032,
            -1812
          ],
          "type":"util/customLua"
        },
        "849":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(\"waitmsg\", self.pinIn.msg.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "msg":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "msg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Wait Message",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "msg",
              null,
              ""
            ]
          ],
          "pos":[
            -620,
            190
          ],
          "type":"util/customLua"
        },
        "850":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(\"waitmsg\", self.pinIn.msg.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "msg":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "msg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Wait Message",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "msg",
              null,
              ""
            ]
          ],
          "pos":[
            3790,
            -398
          ],
          "type":"util/customLua"
        },
        "851":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(\"waitmsg\", self.pinIn.msg.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "msg":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "msg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Wait Message",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "msg",
              null,
              ""
            ]
          ],
          "pos":[
            5764,
            372
          ],
          "type":"util/customLua"
        },
        "852":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(\"waitmsg\", self.pinIn.msg.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "msg":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "msg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Wait Message",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "msg",
              null,
              ""
            ]
          ],
          "pos":[
            1942,
            -2008
          ],
          "type":"util/customLua"
        },
        "853":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(\"waitmsg\", self.pinIn.msg.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "msg":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "msg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Wait Message",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "msg",
              null,
              ""
            ]
          ],
          "pos":[
            2502,
            -3170
          ],
          "type":"util/customLua"
        },
        "854":{
          "data":{
            "step":8,
            "color":[
              0.20000000000000001110,
              0.53000000000000002665,
              1,
              1
            ],
            "fadeEnd":150,
            "fadeStart":100
          },
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "color":{
              "type":"color",
              "value":[
                0.20000000000000001110,
                0.53000000000000002665,
                1,
                1
              ]
            }
          },
          "hiddenPins":{
            "p_in":{
              "clear":false,
              "color":true,
              "cutOffDrivability":true,
              "flow":false,
              "penaltyAboveCutoff":true,
              "penaltyBelowCutoff":true,
              "target":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2664,
            1562
          ],
          "type":"gameplay/groundmarkers"
        },
        "855":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":10
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2250,
            -2134
          ],
          "type":"logic/frameDelay"
        },
        "856":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2306,
            -2008
          ],
          "type":"logic/once"
        },
        "857":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2110,
            -2036
          ],
          "type":"logic/flowSwitch"
        },
        "858":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal val = self.pinIn.val.value or 0\nlocal key = self.pinIn.key.value\nextensions.customGuiStream.sendDataToUI(key,val)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"waitmsg"
            },
            "val":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Send Value To UI",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "val",
              null,
              ""
            ]
          ],
          "pos":[
            2026,
            -2106
          ],
          "type":"util/customLua"
        },
        "859":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(\"waitmsg\", self.pinIn.msg.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "msg":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "msg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Wait Message",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "msg",
              null,
              ""
            ]
          ],
          "pos":[
            1984,
            1254
          ],
          "type":"util/customLua"
        },
        "860":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(\"waitmsg\", self.pinIn.msg.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "msg":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "msg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Wait Message",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "msg",
              null,
              ""
            ]
          ],
          "pos":[
            3902,
            2024
          ],
          "type":"util/customLua"
        },
        "861":{
          "data":{
            "drawDebug":false
          },
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "allowDonut":{
              "type":"bool",
              "value":true
            },
            "damageThreshold":{
              "type":"number",
              "value":150
            },
            "minAngle":{
              "type":"number",
              "value":20
            },
            "minVelocity":{
              "type":"number",
              "value":5
            },
            "raycastDist":{
              "type":"number",
              "value":1.80000000000000004441
            },
            "raycastHeight":{
              "type":"number",
              "value":0.50000000000000000000
            },
            "raycastInwardOffset":{
              "type":"number",
              "value":0.65000000000000024425
            },
            "totalDriftAngleModulo":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "allowDonut":true,
              "damageThreshold":true,
              "flow":false,
              "minAngle":true,
              "minVelocity":true,
              "raycastDist":true,
              "raycastHeight":true,
              "raycastInwardOffset":true,
              "resetDonut":true,
              "totalDriftAngleModulo":true,
              "vehId":false
            },
            "p_out":{
              "closestWallDistance":false,
              "crashed":false,
              "donutDetected":true,
              "driftAngle":false,
              "driftAngleAvg":true,
              "driftDirection":true,
              "driftUniformity":true,
              "driftVelocity":true,
              "drifting":false,
              "flow":false,
              "notDrifting":true,
              "tapped":false,
              "totalDriftDeg":true,
              "totalDriftDistance":true,
              "totalDriftTime":true
            }
          },
          "pos":[
            -984,
            -48
          ],
          "type":"vehicle/driftInformation"
        },
        "862":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            -844,
            -132
          ],
          "type":"scene/getPlayerVehicle"
        },
        "863":{
          "code":{
            "work":"if self.pinIn.drifting.value then\nprint(\"DRIFT DEBUG: DRIFTING\")\nprint(\"Wall Distance : \" .. self.pinIn.walldist.value)\nprint(\"Angle : \" .. self.pinIn.angle.value)\nend\n\nif self.pinIn.tapped.value then\nprint(\"DRIFT DEBUG: TAPPED\")\nend\n\nif self.pinIn.crashed.value then\nprint(\"DRIFT DEBUG: CRASHED\")\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "angle":false,
              "crashed":false,
              "drifting":false,
              "flow":false,
              "tapped":false,
              "walldist":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Drift Debug",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "flow",
              "drifting",
              null,
              ""
            ],
            [
              "in",
              "flow",
              "tapped",
              null,
              ""
            ],
            [
              "in",
              "flow",
              "crashed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "walldist",
              null,
              ""
            ],
            [
              "in",
              "number",
              "angle",
              null,
              ""
            ]
          ],
          "pos":[
            -690,
            -48
          ],
          "type":"util/customLua"
        },
        "864":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            614,
            520
          ],
          "commentText":"",
          "commentTitle":"Groundmarkers",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -3066,
            1176
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "865":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nself.pinOut.flag.value = extensions.blrglobals.blrFlagGet(self.pinIn.name.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "name":{
              "type":"string",
              "value":"gmstate"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "name":false
            },
            "p_out":{
              "flag":false,
              "flow":false
            }
          },
          "name":"BLR Flag Get",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "bool",
              "flag",
              null,
              ""
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ]
          ],
          "pos":[
            -3028,
            1226
          ],
          "type":"util/customLua"
        },
        "866":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"groundMarkersState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3014,
            1324
          ],
          "type":"types/genericValue"
        },
        "867":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(self.pinIn.name.value, self.pinIn.flag.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "flag":{
              "type":"bool",
              "value":false
            },
            "name":{
              "type":"string",
              "value":"gmstate"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flag":false,
              "flow":false,
              "name":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLR Flag Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            -1992,
            -3380
          ],
          "type":"util/customLua"
        },
        "868":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -2818,
            1408
          ],
          "type":"logic/compare"
        },
        "869":{
          "code":{
            "work":"if self.pinIn.val.value then\nself.pinOut.num.value = self.pinIn.tval.value\nelse\nself.pinOut.num.value = self.pinIn.fval.value\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "fval":{
              "type":"number",
              "value":0
            },
            "tval":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "val":false,
              "flow":false,
              "fval":true,
              "tval":true
            },
            "p_out":{
              "flow":false,
              "num":false
            }
          },
          "name":"Bool To Int",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "bool",
              "val",
              null,
              ""
            ],
            [
              "out",
              "number",
              "num",
              null,
              ""
            ],
            [
              "in",
              "number",
              "fval",
              null,
              ""
            ],
            [
              "in",
              "number",
              "tval",
              null,
              ""
            ]
          ],
          "pos":[
            -3014,
            1422
          ],
          "type":"util/customLua"
        },
        "870":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -2832,
            1226
          ],
          "type":"logic/branch"
        },
        "871":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"groundMarkersWP"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2832,
            1576
          ],
          "type":"types/genericValue"
        },
        "872":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(self.pinIn.name.value, self.pinIn.flag.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "flag":{
              "type":"bool",
              "value":true
            },
            "name":{
              "type":"string",
              "value":"gmstate"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flag":false,
              "flow":false,
              "name":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLR Flag Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            752,
            -2778
          ],
          "type":"util/customLua"
        },
        "873":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(self.pinIn.name.value, self.pinIn.flag.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "flag":{
              "type":"bool",
              "value":false
            },
            "name":{
              "type":"string",
              "value":"gmstate"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flag":false,
              "flow":false,
              "name":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLR Flag Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            500,
            -3828
          ],
          "type":"util/customLua"
        },
        "874":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1914,
            -3772
          ],
          "type":"logic/once"
        },
        "875":{
          "code":{
            "work":"self.pinOut.data.value = jsonReadFile(self.pinIn.file.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "file":{
              "type":"string",
              "value":"beamLR/spawngroups/trucks.json"
            }
          },
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false
            },
            "p_out":{
              "data":false,
              "flow":false
            }
          },
          "name":"Load JSON Table",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ],
            [
              "out",
              "table",
              "data",
              null,
              ""
            ]
          ],
          "pos":[
            -1334,
            974
          ],
          "type":"util/customLua"
        },
        "876":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1530,
            1030
          ],
          "type":"logic/flowSwitch"
        },
        "877":{
          "data":{},
          "dynamicMode":"once",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "reset":false
            },
            "p_out":{
              "vehicleIds":false,
              "activated":false,
              "flow":false,
              "total":true
            }
          },
          "pos":[
            -928,
            918
          ],
          "type":"gameplay/traffic/trafficActivate"
        },
        "878":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.data.value\nself.pinOut.name.value = dtable[\"name\"]\nself.pinOut.type.value = dtable[\"type\"]\nself.pinOut.bsfile.value = dtable[\"bsfile\"]\nself.pinOut.config.value = dtable[\"config\"]\nself.pinOut.mfile.value = dtable[\"mfile\"]\nself.pinOut.gas.value = tonumber(dtable[\"gas\"])\nself.pinOut.paintdata.value = {paintA=dtable[\"paintA\"], paintB=dtable[\"paintB\"],paintC=dtable[\"paintC\"] }\nself.pinOut.ifile.value = dtable[\"ifile\"]\nself.pinOut.damage.value = tonumber(dtable[\"damage\"])"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "bsfile":false,
              "config":true,
              "damage":true,
              "flow":false,
              "gas":true,
              "ifile":false,
              "mfile":false,
              "name":true,
              "paintdata":true,
              "type":true
            }
          },
          "name":"Get BLR Vehicle Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "type",
              null,
              ""
            ],
            [
              "out",
              "string",
              "config",
              null,
              ""
            ],
            [
              "out",
              "string",
              "bsfile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "mfile",
              null,
              ""
            ],
            [
              "out",
              "number",
              "gas",
              null,
              ""
            ],
            [
              "out",
              "table",
              "paintdata",
              null,
              ""
            ],
            [
              "out",
              "string",
              "ifile",
              null,
              ""
            ],
            [
              "out",
              "number",
              "damage",
              null,
              ""
            ]
          ],
          "pos":[
            3566,
            722
          ],
          "type":"util/customLua"
        },
        "879":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal fullpath = self.pinIn.filename.value\nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(\"beamstate.save(\\\"\" .. fullpath .. \"\\\")\" )\nself.pinOut.dbgval.value = fullpath\n\n\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "dbgval":false,
              "flow":false
            }
          },
          "name":"Save Beamstate To File",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "string",
              "dbgval",
              null,
              ""
            ]
          ],
          "pos":[
            3776,
            722
          ],
          "type":"util/customLua"
        },
        "880":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devices = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\nlocal cfidb = \"\"\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\n-- Loop to fetch damage values and add them to table\n\nfor k,v in pairs(devices) do\ndtable[k] = {}\nfor _,dev in pairs(devices[k]) do\n\ntoFetch = \"damageTracker.getDamage('\" .. k .. \"', '\" .. dev .. \"')\"\ncfid = \"dmgtrk\" .. cfidval\n\nif self.pinIn.uid.value ~= nil then\ncfid = cfid .. self.pinIn.uid.value\nend\n\n\nif dev == \"engineReducedTorque\" or dev == \"mildOverrevDamage\" or dev == \"catastrophicOverTorqueDamage\" then\ncfidb = cfid .. \"B\"\nend\n\n-- Fetching main damage tracker value\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\n\n-- Now fetching extra values in some cases\nif dev == \"engineReducedTorque\" or dev == \"mildOverrevDamage\" then\ntoFetch = \"powertrain.getDevice('mainEngine').outputTorqueState\"\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfidb ..\"'))\" \nve:queueLuaCommand(vecmd)\ndtable[k][dev] = tostring(extensions.vluaFetchModule.getVal(cfid)) .. \",\" .. tostring(extensions.vluaFetchModule.getVal(cfidb))\nelseif dev == \"catastrophicOverTorqueDamage\" then\ntoFetch = \"powertrain.getDevice('mainEngine').overTorqueDamage\"\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfidb ..\"'))\" \nve:queueLuaCommand(vecmd)\ndtable[k][dev] = tostring(extensions.vluaFetchModule.getVal(cfid)) .. \",\" .. tostring(extensions.vluaFetchModule.getVal(cfidb))\nelse\ndtable[k][dev] = extensions.vluaFetchModule.getVal(cfid)\nend\n\n\ncfidval = cfidval + 1\nend\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.damageData.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "uid":{
              "type":"string",
              "value":"tow"
            }
          },
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "devices":false,
              "flow":false,
              "uid":true
            },
            "p_out":{
              "damageData":false,
              "flow":false,
              "ready":false
            }
          },
          "name":"Detailed Vehicle Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "damageData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ],
            [
              "in",
              "string",
              "uid",
              null,
              ""
            ]
          ],
          "pos":[
            3328,
            722
          ],
          "type":"util/customLua"
        },
        "881":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = self.pinIn.dmg.value\nextensions.mechDamageLoader.saveDamageToFile(self.pinIn.file.value, dtable)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "dmg":false,
              "file":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Mech Damage",
          "pins":[
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "dmg",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            3986,
            722
          ],
          "type":"util/customLua"
        },
        "882":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal veid = self.pinIn.veid.value\nlocal gid = self.pinIn.gid.value\nextensions.blrutils.garagePaintReload(veid, gid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gid":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Garage Paint",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gid",
              null,
              ""
            ]
          ],
          "pos":[
            -718,
            2108
          ],
          "type":"util/customLua"
        },
        "883":{
          "code":{
            "work":"local dtable = {}\ndtable[\"engine\"] = {}\ndtable[\"powertrain\"] = {}\ndtable[\"wheels\"] = {}\n\ntable.insert(dtable[\"engine\"], \"engineReducedTorque\")\ntable.insert(dtable[\"engine\"], \"engineDisabled\")\ntable.insert(dtable[\"engine\"], \"engineLockedUp\")\ntable.insert(dtable[\"engine\"], \"engineIsHydrolocking\")\ntable.insert(dtable[\"engine\"], \"engineHydrolocked\")\ntable.insert(dtable[\"engine\"], \"overRevDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"mildOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"overTorqueDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverTorqueDamage\")\ntable.insert(dtable[\"engine\"], \"impactDamage\")\ntable.insert(dtable[\"engine\"], \"oilpanLeak\")\ntable.insert(dtable[\"engine\"], \"oilRadiatorLeak\")\ntable.insert(dtable[\"engine\"], \"headGasketDamaged\")\ntable.insert(dtable[\"engine\"], \"pistonRingsDamaged\")\ntable.insert(dtable[\"engine\"], \"rodBearingsDamaged\")\ntable.insert(dtable[\"engine\"], \"blockMelted\")\ntable.insert(dtable[\"engine\"], \"oilHot\")\ntable.insert(dtable[\"engine\"], \"cylinderWallsMelted\")\ntable.insert(dtable[\"engine\"], \"radiatorLeak\")\ntable.insert(dtable[\"engine\"], \"coolantHot\")\ntable.insert(dtable[\"engine\"], \"oilLevelCritical\")\ntable.insert(dtable[\"engine\"], \"oilStarvation\")\ntable.insert(dtable[\"engine\"], \"oilLevelTooHigh\")\ntable.insert(dtable[\"engine\"], \"exhaustBroken\")\n\ntable.insert(dtable[\"powertrain\"], \"mainEngine\")\ntable.insert(dtable[\"powertrain\"], \"torqueConverter\")\ntable.insert(dtable[\"powertrain\"], \"gearbox\")\ntable.insert(dtable[\"powertrain\"], \"rangebox\")\ntable.insert(dtable[\"powertrain\"], \"transfercase\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorR\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft\")\ntable.insert(dtable[\"powertrain\"], \"differential_R\")\ntable.insert(dtable[\"powertrain\"], \"transfercase_F\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft_F\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorF\")\ntable.insert(dtable[\"powertrain\"], \"differential_F\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFR\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFR\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRL\")\ntable.insert(dtable[\"powertrain\"], \"clutch\")\n\ntable.insert(dtable[\"wheels\"], \"FR\")\ntable.insert(dtable[\"wheels\"], \"brakeFR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFR\")\ntable.insert(dtable[\"wheels\"], \"tireFR\")\n\ntable.insert(dtable[\"wheels\"], \"FL\")\ntable.insert(dtable[\"wheels\"], \"brakeFL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFL\")\ntable.insert(dtable[\"wheels\"], \"tireFL\")\n\ntable.insert(dtable[\"wheels\"], \"RR\")\ntable.insert(dtable[\"wheels\"], \"brakeRR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRR\")\ntable.insert(dtable[\"wheels\"], \"tireRR\")\n\ntable.insert(dtable[\"wheels\"], \"RL\")\ntable.insert(dtable[\"wheels\"], \"brakeRL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRL\")\ntable.insert(dtable[\"wheels\"], \"tireRL\")\n\n\nself.pinOut.devices.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"Mech Damage Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            3104,
            722
          ],
          "type":"util/customLua"
        },
        "884":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devtable = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\n\nlocal itmd = \"\"\nlocal itsd = \"\"\nlocal splitres = {}\n\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\nfor _,v in pairs(devtable) do\n\nif v == \"odometer\" then \ntoFetch = \"electrics.values.odometer\"\nelseif string.match(v,\"integrity\") then\nsplitres = extensions.blrutils.ssplit(v, \".\")\nitmd = splitres[2]\nitsd = splitres[3]\nif itsd ~= nil then\ntoFetch = \"powertrain.getDevice('\" .. itmd .. \"'):getPartCondition('\" .. itsd .. \"')\"\nelse\ntoFetch = \"powertrain.getDevice('\" .. itmd .. \"'):getPartCondition()\"\nend\nend\n\n\ncfid = \"integ\" .. cfidval\n\nif self.pinIn.uid.value ~= nil then\ncfid = cfid .. self.pinIn.uid.value\nend\n\n-- Fetching main damage tracker value\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\ndtable[v] = extensions.vluaFetchModule.getVal(cfid)\n\n\ncfidval = cfidval + 1\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.integrityData.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "uid":{
              "type":"string",
              "value":"towteg"
            }
          },
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "devices":false,
              "flow":false,
              "uid":true
            },
            "p_out":{
              "flow":false,
              "integrityData":false,
              "ready":false
            }
          },
          "name":"Detailed Vehicle Integrity",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ],
            [
              "in",
              "string",
              "uid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "integrityData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ]
          ],
          "pos":[
            3328,
            834
          ],
          "type":"util/customLua"
        },
        "885":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = extensions.mechDamageLoader.getIntegrityDevices()\nself.pinOut.devices.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"Integrity Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            3132,
            876
          ],
          "type":"util/customLua"
        },
        "886":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal itable = self.pinIn.iteg.value\nlocal file = self.pinIn.file.value\ndump(itable)\nextensions.mechDamageLoader.saveIntegrityToFile(file, itable)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "iteg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "iteg",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            3776,
            848
          ],
          "type":"util/customLua"
        },
        "887":{
          "code":{
            "work":"self.pinOut.filename.value = \"beamLR/garage/car\" .. self.pinIn.carid.value\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carid":false,
              "flow":false
            },
            "p_out":{
              "filename":false,
              "flow":false
            }
          },
          "name":"Get Garage Car File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "carid",
              null,
              ""
            ],
            [
              "out",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            3496,
            974
          ],
          "type":"util/customLua"
        },
        "888":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            3566,
            876
          ],
          "type":"util/customLua"
        },
        "889":{
          "code":{
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nlocal ntable = self.pinIn.data.value\nlocal ndata = \"\"\nfor k,v in pairs(dtable) do\nndata = ndata .. k .. \"=\" .. (ntable[k] or dtable[k]) .. \"\\n\"\nend\n\nwriteFile(self.pinIn.filename.value, ndata)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ]
          ],
          "pos":[
            4182,
            722
          ],
          "type":"util/customLua"
        },
        "890":{
          "code":{
            "work":"local dtable = self.pinIn.current.value\n\nif self.pinIn.name.value ~= nil then\ndtable[\"name\"] = self.pinIn.name.value\nend\n\nif self.pinIn.type.value ~= nil then\ndtable[\"type\"] = self.pinIn.type.value\nend\n\nif self.pinIn.config.value ~= nil then\ndtable[\"config\"] = self.pinIn.config.value\nend\n\nif self.pinIn.bsfile.value ~= nil then\ndtable[\"bsfile\"] = self.pinIn.bsfile.value\nend\n\nif self.pinIn.mfile.value ~= nil then\ndtable[\"mfile\"] = self.pinIn.mfile.value\nend\n\nif self.pinIn.gas.value ~= nil then\ndtable[\"gas\"] = self.pinIn.gas.value\nend\n\nif self.pinIn.damage.value ~= nil then\ndtable[\"damage\"] = self.pinIn.damage.value\nend\n\nself.pinOut.output.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "bsfile":true,
              "config":true,
              "current":false,
              "damage":false,
              "flow":false,
              "gas":false,
              "mfile":true,
              "name":true,
              "type":true
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Edit BLR Veh Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "current",
              null,
              ""
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "string",
              "type",
              null,
              ""
            ],
            [
              "in",
              "string",
              "config",
              null,
              ""
            ],
            [
              "in",
              "string",
              "bsfile",
              null,
              ""
            ],
            [
              "in",
              "string",
              "mfile",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gas",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ],
            [
              "in",
              "number",
              "damage",
              null,
              ""
            ]
          ],
          "pos":[
            3958,
            848
          ],
          "type":"util/customLua"
        },
        "891":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            3300,
            960
          ],
          "type":"types/genericValue"
        },
        "892":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":100
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3342,
            1072
          ],
          "type":"logic/frameDelay"
        },
        "893":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.data.value\nself.pinOut.name.value = dtable[\"name\"]\nself.pinOut.type.value = dtable[\"type\"]\nself.pinOut.bsfile.value = dtable[\"bsfile\"]\nself.pinOut.config.value = dtable[\"config\"]\nself.pinOut.mfile.value = dtable[\"mfile\"]\nself.pinOut.gas.value = tonumber(dtable[\"gas\"])\nself.pinOut.paintdata.value = {paintA=dtable[\"paintA\"], paintB=dtable[\"paintB\"],paintC=dtable[\"paintC\"] }\nself.pinOut.ifile.value = dtable[\"ifile\"]\nself.pinOut.damage.value = tonumber(dtable[\"damage\"])"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "bsfile":true,
              "config":true,
              "damage":false,
              "flow":false,
              "gas":false,
              "ifile":true,
              "mfile":true,
              "name":true,
              "paintdata":true,
              "type":true
            }
          },
          "name":"Get BLR Vehicle Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "type",
              null,
              ""
            ],
            [
              "out",
              "string",
              "config",
              null,
              ""
            ],
            [
              "out",
              "string",
              "bsfile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "mfile",
              null,
              ""
            ],
            [
              "out",
              "number",
              "gas",
              null,
              ""
            ],
            [
              "out",
              "table",
              "paintdata",
              null,
              ""
            ],
            [
              "out",
              "string",
              "ifile",
              null,
              ""
            ],
            [
              "out",
              "number",
              "damage",
              null,
              ""
            ]
          ],
          "pos":[
            3608,
            1072
          ],
          "type":"util/customLua"
        },
        "894":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            3706,
            974
          ],
          "type":"util/customLua"
        },
        "895":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "active":true,
              "damage":false,
              "dirVec":true,
              "dirVecUp":true,
              "flow":false,
              "position":true,
              "rotation":true,
              "velocity":true,
              "velocityVector":true
            }
          },
          "pos":[
            3818,
            1226
          ],
          "type":"vehicle/vehicleMapData"
        },
        "896":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">",
          "pos":[
            3832,
            1072
          ],
          "type":"logic/compare"
        },
        "897":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal fullpath = self.pinIn.filename.value \nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(\"beamstate.load(\\\"\" .. fullpath .. \"\\\")\" )\nself.pinOut.dbgval.value = \"WTF\""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "dbgval":false,
              "flow":false
            }
          },
          "name":"Load Beamstate From File",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "string",
              "dbgval",
              null,
              ""
            ]
          ],
          "pos":[
            4196,
            848
          ],
          "type":"util/customLua"
        },
        "898":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4028,
            988
          ],
          "type":"logic/once"
        },
        "899":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal fn = self.pinIn.file.value\nlocal vid = self.pinIn.vid.value\nextensions.mechDamageLoader.loadDamageFromFile(fn,vid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "vid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Mech Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "vid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            4210,
            960
          ],
          "type":"util/customLua"
        },
        "900":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal veid = self.pinIn.veid.value\nlocal file = self.pinIn.file.value\nextensions.mechDamageLoader.loadIntegrityFromFile(file,veid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            4224,
            1072
          ],
          "type":"util/customLua"
        },
        "901":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            374,
            414
          ],
          "type":"scene/getPlayerVehicle"
        },
        "902":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal newFuelValue = self.pinIn.gas.value\nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(string.format(\"energyStorage.getStorage(\\\"mainTank\\\"):setRemainingVolume(%.12f)\", newFuelValue))\nprint(\"should have set gas for veid \" .. self.pinIn.veid.value .. \" to \" .. newFuelValue)\n"
          },
          "customIcon":"local_gas_station",
          "customName":"Force Set Gas",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gas":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Force Set Gas",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gas",
              null,
              ""
            ]
          ],
          "pos":[
            4238,
            1184
          ],
          "type":"util/customLua"
        },
        "903":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal veid = self.pinIn.veid.value\nlocal gid = self.pinIn.gid.value\nextensions.blrutils.garagePaintReload(veid, gid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gid":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Garage Paint",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gid",
              null,
              ""
            ]
          ],
          "pos":[
            4420,
            1198
          ],
          "type":"util/customLua"
        },
        "906":{
          "code":{
            "work":"local dtable = self.pinIn.idtable.value\nlocal veh = {}\nfor k,v in pairs(dtable) do\nveh = {}\nif v ~= -1 then\nveh = scenetree.findObjectById(v)\nif veh ~= nil then\ncore_vehicleBridge.executeAction(veh,'setFreeze', self.pinIn.freeze.value)\nend\nend\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "idtable":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Mass Freeze",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "idtable",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "freeze",
              null,
              ""
            ]
          ],
          "pos":[
            2320,
            -3170
          ],
          "type":"util/customLua"
        },
        "907":{
          "code":{
            "work":"print(self.pinIn.txt.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "txt":{
              "type":"string",
              "value":"TELEPORT RESET DETECTED, RELOADING..."
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "txt":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"LUA Print",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "txt",
              null,
              ""
            ]
          ],
          "pos":[
            4028,
            1226
          ],
          "type":"util/customLua"
        },
        "908":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            4014,
            1086
          ],
          "type":"logic/flowSwitch"
        },
        "917":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal fullpath = self.pinIn.filename.value \nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(\"beamstate.load(\\\"\" .. fullpath .. \"\\\")\" )\nself.pinOut.dbgval.value = \"WTF\""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "dbgval":false,
              "flow":false
            }
          },
          "name":"Load Beamstate From File",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "string",
              "dbgval",
              null,
              ""
            ]
          ],
          "pos":[
            1508,
            554
          ],
          "type":"util/customLua"
        },
        "1112":{
          "count":7,
          "customName":"Player Inside Trigger",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "value_1":{
              "type":"string",
              "value":"station"
            },
            "value_2":{
              "type":"string",
              "value":"repair"
            },
            "value_3":{
              "type":"string",
              "value":"carshop"
            },
            "value_4":{
              "type":"string",
              "value":"partshop"
            },
            "value_5":{
              "type":"string",
              "value":"garage"
            },
            "value_6":{
              "type":"string",
              "value":"race"
            },
            "value_7":{
              "type":"string",
              "value":"dare"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "value":false,
              "value_1":false,
              "value_2":false,
              "value_3":false,
              "value_4":false,
              "value_5":false,
              "value_6":false,
              "value_7":false
            },
            "p_out":{
              "flow":false,
              "match_1":false,
              "match_2":false,
              "match_3":false,
              "match_4":false,
              "match_5":false,
              "match_6":false,
              "match_7":false,
              "none":false
            }
          },
          "pos":[
            738,
            -1056
          ],
          "type":"logic/switchcase"
        },
        "1113":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            2880,
            -1406
          ],
          "string":"Car Refueled",
          "type":"types/string"
        },
        "1114":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            1802,
            -958
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "1115":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            1802,
            -1042
          ],
          "string":"Drain Tank",
          "type":"types/string"
        },
        "1116":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "biggerText":true,
              "duration":false,
              "flow":false,
              "instant":true,
              "message":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1998,
            -916
          ],
          "type":"ui/flashMessage"
        },
        "1117":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "multiLine":false,
          "pos":[
            1998,
            -1000
          ],
          "string":"Fuel Tank Drained",
          "type":"types/string"
        },
        "1118":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1214,
            -199
          ],
          "type":"logic/bundle"
        },
        "1120":{
          "customName":"Set Car Count Value",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1214,
            -104
          ],
          "type":"types/genericValue"
        },
        "1121":{
          "customName":"Get Car Count",
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1774,
            -468
          ],
          "type":"types/genericValue"
        },
        "1122":{
          "count":2,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            962,
            -958
          ],
          "type":"logic/and"
        },
        "1123":{
          "customName":"Get Gas Cost",
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"gasCost"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2040,
            -1546
          ],
          "type":"types/genericValue"
        },
        "1124":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            1662,
            1926
          ],
          "type":"scene/getPlayerVehicle"
        },
        "1125":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local ve\nlocal newFuelValue = self.pinIn.gas.value\nve = scenetree.findObjectById(self.pinIn.veid.value)\nve:queueLuaCommand(string.format(\"energyStorage.getStorage(\\\"mainTank\\\"):setRemainingVolume(%.12f)\", newFuelValue))\n\n"
          },
          "customIcon":"local_gas_station",
          "customName":"Force Set Gas",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "gas":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Force Set Gas",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "number",
              "gas",
              null,
              ""
            ]
          ],
          "pos":[
            2348,
            -832
          ],
          "type":"util/customLua"
        },
        "1126":{
          "customName":"Gas Val",
          "data":{
            "value":1
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "pos":[
            2208,
            -776
          ],
          "type":"types/number"
        },
        "1130":{
          "customName":"Set Page",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":2
            },
            "varName":{
              "type":"string",
              "value":"carStorePage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2194,
            -2302
          ],
          "type":"types/genericValue"
        },
        "1131":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Previous"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            2474,
            -2904
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "1134":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Sell Current Car"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            2558,
            -1924
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "3059":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Cancel"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            2306,
            -2736
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "4024":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Cancel"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            2558,
            -1784
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "4986":{
          "count":2,
          "customName":"Player Exit",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "value_1":{
              "type":"string",
              "value":"carshop"
            },
            "value_2":{
              "type":"string",
              "value":"garage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "value_2":false,
              "flow":false,
              "value":false,
              "value_1":false
            },
            "p_out":{
              "none":false,
              "flow":false,
              "match_1":false,
              "match_2":false
            }
          },
          "pos":[
            -32,
            -1070
          ],
          "type":"logic/switchcase"
        },
        "4988":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -760,
            -2439
          ],
          "type":"logic/bundle"
        },
        "4992":{
          "customName":"Default State",
          "data":{
            "value":0
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "pos":[
            -382,
            -2554
          ],
          "type":"types/number"
        },
        "4993":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":2
            },
            "varName":{
              "type":"string",
              "value":"missionGiverUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            290,
            -2946
          ],
          "type":"types/genericValue"
        },
        "4994":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -816,
            -2635
          ],
          "type":"logic/bundle"
        },
        "4995":{
          "count":3,
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "value_1":{
              "type":"number",
              "value":1
            },
            "value_2":{
              "type":"number",
              "value":2
            },
            "value_3":{
              "type":"number",
              "value":3
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "value":false,
              "value_1":false,
              "value_2":false,
              "value_3":false
            },
            "p_out":{
              "flow":false,
              "match_1":false,
              "match_2":false,
              "match_3":false,
              "none":false
            }
          },
          "pos":[
            150,
            -2666
          ],
          "type":"logic/switchcase"
        },
        "4998":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            374,
            -2554
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "4999":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Failure Screen"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            374,
            -2456
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "5000":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":3
            },
            "varName":{
              "type":"string",
              "value":"missionGiverUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            948,
            -2694
          ],
          "type":"types/genericValue"
        },
        "5001":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"missionGiverUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            752,
            -2498
          ],
          "type":"types/genericValue"
        },
        "5002":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"missionGiverUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -116,
            -2918
          ],
          "type":"types/genericValue"
        },
        "5006":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -760,
            -3013
          ],
          "type":"logic/bundle"
        },
        "5007":{
          "alpha":1,
          "backgroundColor":[
            0.00000099999999747524,
            0.00000099998999303352,
            0.00000099998999303352,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            180,
            57
          ],
          "commentText":"",
          "commentTitle":"Active Flow",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -784,
            -3052
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "5008":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Accept"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            556,
            -2680
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "5009":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Accept"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            556,
            -2568
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "5010":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":2
            },
            "varName":{
              "type":"string",
              "value":"missionState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            962,
            -2862
          ],
          "type":"types/genericValue"
        },
        "5016":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentMissionDestid"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1110,
            -2666
          ],
          "type":"types/genericValue"
        },
        "9870":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentMissionDesc"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            150,
            -2470
          ],
          "type":"types/genericValue"
        },
        "9871":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "anchor":{
              "type":"string",
              "value":"TL"
            },
            "title":{
              "type":"string",
              "value":"Mission Failure"
            }
          },
          "hiddenPins":{
            "p_in":{
              "anchor":true,
              "flow":false,
              "height":false,
              "posX":false,
              "posY":false,
              "title":false,
              "width":false
            },
            "p_out":{
              "flow":false,
              "wasClosed":false
            }
          },
          "pos":[
            262,
            -3282
          ],
          "type":"ui/imgui/elemental/imBegin"
        },
        "9875":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"You failed the mission!"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            472,
            -3296
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "9876":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Exit"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            472,
            -3156
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "9877":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            668,
            -3310
          ],
          "type":"ui/imgui/elemental/imEnd"
        },
        "9879":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":4
            },
            "varName":{
              "type":"string",
              "value":"missionState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            724,
            -3842
          ],
          "type":"types/genericValue"
        },
        "9880":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentMissionReward"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1320,
            -2582
          ],
          "type":"types/genericValue"
        },
        "9882":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentMissionReward"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            388,
            -4108
          ],
          "type":"types/genericValue"
        },
        "9883":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            822,
            -4010
          ],
          "type":"types/genericValue"
        },
        "9884":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"missionGiverUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            38,
            -3184
          ],
          "type":"types/genericValue"
        },
        "9885":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"missionGiverUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            864,
            -3226
          ],
          "type":"types/genericValue"
        },
        "9886":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            186,
            71
          ],
          "commentText":"",
          "commentTitle":"UI Flow",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            -784,
            -2492
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "9887":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentMissionDestpos"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -550,
            -4136
          ],
          "type":"types/genericValue"
        },
        "9889":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"currentMissionDestpos"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1110,
            -2498
          ],
          "type":"types/genericValue"
        },
        "9891":{
          "count":2,
          "customName":"Garage",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            962,
            -748
          ],
          "type":"logic/and"
        },
        "9892":{
          "customName":"Garage",
          "data":{
            "value":1
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "pos":[
            2614,
            -244
          ],
          "type":"types/number"
        },
        "9893":{
          "customName":"Tuning",
          "data":{
            "value":2
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "value":false
            }
          },
          "pos":[
            2614,
            -188
          ],
          "type":"types/number"
        },
        "9896":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"playerGarageUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3986,
            -496
          ],
          "type":"types/genericValue"
        },
        "9897":{
          "customName":"Garage",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"playerGarageUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -32,
            -930
          ],
          "type":"types/genericValue"
        },
        "9899":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerGarageSelectedCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3958,
            218
          ],
          "type":"types/genericValue"
        },
        "9901":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.data.value\nself.pinOut.name.value = dtable[\"name\"]\nself.pinOut.type.value = dtable[\"type\"]\nself.pinOut.bsfile.value = dtable[\"bsfile\"]\nself.pinOut.config.value = dtable[\"config\"]\nself.pinOut.mfile.value = dtable[\"mfile\"]\nself.pinOut.ifile.value = dtable[\"ifile\"]"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "bsfile":false,
              "config":false,
              "flow":false,
              "ifile":false,
              "mfile":false,
              "name":false,
              "type":false
            }
          },
          "name":"Get BLR Vehicle Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "type",
              null,
              ""
            ],
            [
              "out",
              "string",
              "config",
              null,
              ""
            ],
            [
              "out",
              "string",
              "bsfile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "mfile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "ifile",
              null,
              ""
            ]
          ],
          "pos":[
            4448,
            -580
          ],
          "type":"util/customLua"
        },
        "9909":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.filename.value = \"beamLR/garage/car\" .. self.pinIn.id.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "id":false
            },
            "p_out":{
              "filename":false,
              "flow":false
            }
          },
          "name":"Car Data Filename",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "id",
              null,
              ""
            ],
            [
              "out",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            4238,
            -468
          ],
          "type":"util/customLua"
        },
        "9910":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "vehId":false
            }
          },
          "pos":[
            4658,
            -594
          ],
          "type":"scene/getPlayerVehicle"
        },
        "9913":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.filename.value = \"beamLR/garage/car\" .. self.pinIn.id.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "id":false
            },
            "p_out":{
              "filename":false,
              "flow":false
            }
          },
          "name":"Car Data Filename",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "id",
              null,
              ""
            ],
            [
              "out",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            738,
            176
          ],
          "type":"util/customLua"
        },
        "9914":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            374,
            316
          ],
          "type":"util/customLua"
        },
        "9915":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = self.pinIn.data.value\nself.pinOut.name.value = dtable[\"name\"]\nself.pinOut.type.value = dtable[\"type\"]\nself.pinOut.bsfile.value = dtable[\"bsfile\"]\nself.pinOut.config.value = dtable[\"config\"]\nself.pinOut.mfile.value = dtable[\"mfile\"]\nself.pinOut.gas.value = tonumber(dtable[\"gas\"])\nself.pinOut.ifile.value = dtable[\"ifile\"]"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false
            },
            "p_out":{
              "bsfile":false,
              "config":false,
              "flow":false,
              "gas":true,
              "ifile":false,
              "mfile":false,
              "name":true,
              "type":true
            }
          },
          "name":"Get BLR Vehicle Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "out",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "type",
              null,
              ""
            ],
            [
              "out",
              "string",
              "config",
              null,
              ""
            ],
            [
              "out",
              "string",
              "bsfile",
              null,
              ""
            ],
            [
              "out",
              "string",
              "mfile",
              null,
              ""
            ],
            [
              "out",
              "number",
              "gas",
              null,
              ""
            ],
            [
              "out",
              "string",
              "ifile",
              null,
              ""
            ]
          ],
          "pos":[
            598,
            316
          ],
          "type":"util/customLua"
        },
        "9916":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"Needs some delay\\nBefore stop project",
          "commentTitle":"Save Beamstate",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            1008,
            406
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "9917":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "pos":false
            },
            "p_out":{
              "flow":false,
              "value":false
            }
          },
          "mode":"from Pin",
          "pos":[
            2082,
            -2750
          ],
          "ppos":[
            -801.91857910155999888957,
            -122.78488922118999937538,
            298.84783935547000055521
          ],
          "type":"scene/camera/setCameraPosition"
        },
        "9927":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "rot":false
            },
            "p_out":{
              "flow":false,
              "value":false
            }
          },
          "mode":"from Pin",
          "pos":[
            2082,
            -2848
          ],
          "rot":[
            0.14785739779472001354,
            0.08601678162813200523,
            -0.49544119834900002264,
            0.85163211822509998772
          ],
          "type":"scene/camera/setCameraRotation"
        },
        "9928":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"carShopSelectedSlot"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2838,
            -2946
          ],
          "type":"types/genericValue"
        },
        "9929":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2152,
            -202
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "9931":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -186,
            -2008
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "9932":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devices = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\n-- Loop to fetch damage values and add them to table\n\nfor k,v in pairs(devices) do\ndtable[k] = {}\nfor _,dev in pairs(devices[k]) do\n\ntoFetch = \"damageTracker.getDamage('\" .. k .. \"', '\" .. dev .. \"')\"\ncfid = \"dmgtrk\" .. cfidval\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\ndtable[k][dev] = extensions.vluaFetchModule.getVal(cfid)\ncfidval = cfidval + 1\nend\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.damageData.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "devices":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "damageData":false,
              "flow":false,
              "ready":false
            }
          },
          "name":"Detailed Vehicle Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "damageData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            1410,
            1324
          ],
          "type":"util/customLua"
        },
        "9991":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"if self.pinIn.ready.value then\nlocal devices = self.pinIn.devices.value\nlocal dtable = self.pinIn.damageData.value\nlocal valtext = \"\"\nlocal text = \"Damage Data : \\n\"\n\nfor k,v in pairs(devices) do\nif dtable[k] ~= nil then\ntext = text .. \"\\n\\t\" .. k .. \" :\\n\\n\"\nfor _,dev in pairs(devices[k]) do\nif dtable[k][dev] ~= nil then\nvaltext = string.format(\"%s\", dtable[k][dev])\ntext = text .. \"\\t\\t\" .. dev .. \" : \" .. valtext .. \"\\n\"\nend\nend\nend\nend\n\nself.pinOut.format.value = text\n\nelse \n\nself.pinOut.format.value = \"Loading...\"\n\nend\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "ready":false,
              "damageData":false,
              "devices":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "format":false
            }
          },
          "name":"Detailed Damage String",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "table",
              "damageData",
              null,
              ""
            ],
            [
              "out",
              "string",
              "format",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "ready",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            1452,
            1464
          ],
          "type":"util/customLua"
        },
        "10000":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local dtable = {}\ndtable[\"body\"] = {}\ndtable[\"engine\"] = {}\ndtable[\"powertrain\"] = {}\ndtable[\"wheels\"] = {}\n\ntable.insert(dtable[\"body\"], \"FL\")\ntable.insert(dtable[\"body\"], \"FR\")\ntable.insert(dtable[\"body\"], \"ML\")\ntable.insert(dtable[\"body\"], \"MR\")\ntable.insert(dtable[\"body\"], \"RL\")\ntable.insert(dtable[\"body\"], \"RR\")\n\ntable.insert(dtable[\"engine\"], \"engineReducedTorque\")\ntable.insert(dtable[\"engine\"], \"engineDisabled\")\ntable.insert(dtable[\"engine\"], \"engineLockedUp\")\ntable.insert(dtable[\"engine\"], \"engineIsHydrolocking\")\ntable.insert(dtable[\"engine\"], \"engineHydrolocked\")\ntable.insert(dtable[\"engine\"], \"overRevDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"mildOverrevDamage\")\ntable.insert(dtable[\"engine\"], \"overTorqueDanger\")\ntable.insert(dtable[\"engine\"], \"catastrophicOverTorqueDamage\")\ntable.insert(dtable[\"engine\"], \"impactDamage\")\ntable.insert(dtable[\"engine\"], \"oilpanLeak\")\ntable.insert(dtable[\"engine\"], \"oilRadiatorLeak\")\ntable.insert(dtable[\"engine\"], \"headGasketDamaged\")\ntable.insert(dtable[\"engine\"], \"pistonRingsDamaged\")\ntable.insert(dtable[\"engine\"], \"rodBearingsDamaged\")\ntable.insert(dtable[\"engine\"], \"blockMelted\")\ntable.insert(dtable[\"engine\"], \"oilHot\")\ntable.insert(dtable[\"engine\"], \"cylinderWallsMelted\")\ntable.insert(dtable[\"engine\"], \"radiatorLeak\")\ntable.insert(dtable[\"engine\"], \"coolantHot\")\ntable.insert(dtable[\"engine\"], \"oilLevelCritical\")\ntable.insert(dtable[\"engine\"], \"oilStarvation\")\ntable.insert(dtable[\"engine\"], \"oilLevelTooHigh\")\ntable.insert(dtable[\"engine\"], \"exhaustBroken\")\n\ntable.insert(dtable[\"powertrain\"], \"mainEngine\")\ntable.insert(dtable[\"powertrain\"], \"torqueConverter\")\ntable.insert(dtable[\"powertrain\"], \"gearbox\")\ntable.insert(dtable[\"powertrain\"], \"rangebox\")\ntable.insert(dtable[\"powertrain\"], \"transfercase\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorR\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft\")\ntable.insert(dtable[\"powertrain\"], \"differential_R\")\ntable.insert(dtable[\"powertrain\"], \"transfercase_F\")\ntable.insert(dtable[\"powertrain\"], \"driveshaft_F\")\ntable.insert(dtable[\"powertrain\"], \"torsionReactorF\")\ntable.insert(dtable[\"powertrain\"], \"differential_F\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFR\")\ntable.insert(dtable[\"powertrain\"], \"halfshaftFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleFR\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRL\")\ntable.insert(dtable[\"powertrain\"], \"wheelaxleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRR\")\ntable.insert(dtable[\"powertrain\"], \"spindleRL\")\ntable.insert(dtable[\"powertrain\"], \"clutch\")\n\ntable.insert(dtable[\"wheels\"], \"FR\")\ntable.insert(dtable[\"wheels\"], \"brakeFR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFR\")\ntable.insert(dtable[\"wheels\"], \"tireFR\")\n\ntable.insert(dtable[\"wheels\"], \"FL\")\ntable.insert(dtable[\"wheels\"], \"brakeFL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatFL\")\ntable.insert(dtable[\"wheels\"], \"tireFL\")\n\ntable.insert(dtable[\"wheels\"], \"RR\")\ntable.insert(dtable[\"wheels\"], \"brakeRR\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRR\")\ntable.insert(dtable[\"wheels\"], \"tireRR\")\n\ntable.insert(dtable[\"wheels\"], \"RL\")\ntable.insert(dtable[\"wheels\"], \"brakeRL\")\ntable.insert(dtable[\"wheels\"], \"brakeOverHeatRL\")\ntable.insert(dtable[\"wheels\"], \"tireRL\")\n\n\nself.pinOut.devices.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"All Damage Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            1130,
            1366
          ],
          "type":"util/customLua"
        },
        "10003":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            2810,
            -3772
          ],
          "type":"util/customLua"
        },
        "10004":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            2600,
            -3758
          ],
          "type":"types/genericValue"
        },
        "10006":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Change Parts"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            3384,
            -286
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "10007":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":2
            },
            "varName":{
              "type":"string",
              "value":"uiTriggerState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            752,
            -748
          ],
          "type":"types/genericValue"
        },
        "10008":{
          "count":2,
          "customName":"Race",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            962,
            -678
          ],
          "type":"logic/and"
        },
        "10011":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Cancel"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            -690,
            -1280
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "10012":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"raceMenuPage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -466,
            -1280
          ],
          "type":"types/genericValue"
        },
        "10013":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":2
            },
            "varName":{
              "type":"string",
              "value":"raceMenuPage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -270,
            -1476
          ],
          "type":"types/genericValue"
        },
        "10014":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":3
            },
            "varName":{
              "type":"string",
              "value":"raceMenuPage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -494,
            -1000
          ],
          "type":"types/genericValue"
        },
        "10015":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"raceInProgress"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -452,
            -1378
          ],
          "type":"types/genericValue"
        },
        "10016":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"raceInProgress"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -746,
            -888
          ],
          "type":"types/genericValue"
        },
        "10017":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Close Menu"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            -942,
            -888
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "10021":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"raceMenuPage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -466,
            -678
          ],
          "type":"types/genericValue"
        },
        "10022":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":2
            },
            "varName":{
              "type":"string",
              "value":"raceWinner"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2580,
            456
          ],
          "type":"types/genericValue"
        },
        "10023":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceInProgress"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3420,
            36
          ],
          "type":"types/genericValue"
        },
        "10024":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"raceWinner"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -480,
            -1196
          ],
          "type":"types/genericValue"
        },
        "10025":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceDesc"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1138,
            -2204
          ],
          "type":"types/genericValue"
        },
        "10026":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceAIWP"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -634,
            -2204
          ],
          "type":"types/genericValue"
        },
        "10027":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceForSlips"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -802,
            -2204
          ],
          "type":"types/genericValue"
        },
        "10028":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceWager"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -970,
            -2204
          ],
          "type":"types/genericValue"
        },
        "10029":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceWager"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1642,
            -1196
          ],
          "type":"types/genericValue"
        },
        "10030":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceForSlips"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1642,
            -1126
          ],
          "type":"types/genericValue"
        },
        "10031":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":2
            },
            "varName":{
              "type":"string",
              "value":"raceWinner"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -718,
            -1070
          ],
          "type":"types/genericValue"
        },
        "10032":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -298,
            -720
          ],
          "type":"types/genericValue"
        },
        "10033":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            -480,
            -1112
          ],
          "type":"util/customLua"
        },
        "10034":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -690,
            -1154
          ],
          "type":"types/genericValue"
        },
        "10035":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1642,
            -1056
          ],
          "type":"types/genericValue"
        },
        "10036":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -270,
            -1280
          ],
          "type":"types/genericValue"
        },
        "10037":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value + self.pinIn.DX.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X+DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            -298,
            -846
          ],
          "type":"util/customLua"
        },
        "10038":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyModel"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1306,
            -2078
          ],
          "type":"types/genericValue"
        },
        "10039":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyConfig"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1138,
            -2078
          ],
          "type":"types/genericValue"
        },
        "10040":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyRisk"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -970,
            -2078
          ],
          "type":"types/genericValue"
        },
        "10041":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyModel"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1992,
            -636
          ],
          "type":"types/genericValue"
        },
        "10042":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyConfig"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1838,
            -636
          ],
          "type":"types/genericValue"
        },
        "10043":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyRisk"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1992,
            -538
          ],
          "type":"types/genericValue"
        },
        "10044":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "block":{
              "type":"bool",
              "value":false
            },
            "ignoreUnrestriced":{
              "type":"bool",
              "value":true
            }
          },
          "hiddenPins":{
            "p_in":{
              "block":true,
              "flow":false,
              "id":true,
              "ignoreUnrestriced":true,
              "reset":false
            },
            "p_out":{
              "flow":false,
              "id":true
            }
          },
          "list":[
            "nodegrabberRender",
            "toggleWalkingMode"
          ],
          "pos":[
            -494,
            -62
          ],
          "type":"input/blacklistAction"
        },
        "10045":{
          "customName":"Player Exited",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":true,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            192,
            -552
          ],
          "type":"logic/compare"
        },
        "10046":{
          "data":{
            "btnName":"Load Damage"
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            430,
            2223
          ],
          "type":"events/interactiveButton"
        },
        "10047":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            640,
            1744
          ],
          "type":"logic/flowSwitch"
        },
        "10048":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":110
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            402,
            1758
          ],
          "type":"logic/frameDelay"
        },
        "10049":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devices = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\nlocal cfidb = \"\"\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\n-- Loop to fetch damage values and add them to table\n\nfor k,v in pairs(devices) do\ndtable[k] = {}\nfor _,dev in pairs(devices[k]) do\n\ntoFetch = \"damageTracker.getDamage('\" .. k .. \"', '\" .. dev .. \"')\"\ncfid = \"dmgtrk\" .. cfidval\n\nif self.pinIn.uid.value ~= nil then\ncfid = cfid .. self.pinIn.uid.value\nend\n\n\nif dev == \"engineReducedTorque\" or dev == \"mildOverrevDamage\" or dev == \"catastrophicOverTorqueDamage\" then\ncfidb = cfid .. \"B\"\nend\n\n-- Fetching main damage tracker value\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\n\n-- Now fetching extra values in some cases\nif dev == \"engineReducedTorque\" or dev == \"mildOverrevDamage\" then\ntoFetch = \"powertrain.getDevice('mainEngine').outputTorqueState\"\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfidb ..\"'))\" \nve:queueLuaCommand(vecmd)\ndtable[k][dev] = tostring(extensions.vluaFetchModule.getVal(cfid)) .. \",\" .. tostring(extensions.vluaFetchModule.getVal(cfidb))\nelseif dev == \"catastrophicOverTorqueDamage\" then\ntoFetch = \"powertrain.getDevice('mainEngine').overTorqueDamage\"\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfidb ..\"'))\" \nve:queueLuaCommand(vecmd)\ndtable[k][dev] = tostring(extensions.vluaFetchModule.getVal(cfid)) .. \",\" .. tostring(extensions.vluaFetchModule.getVal(cfidb))\nelse\ndtable[k][dev] = extensions.vluaFetchModule.getVal(cfid)\nend\n\n\ncfidval = cfidval + 1\nend\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.damageData.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "devices":false,
              "flow":false,
              "uid":false
            },
            "p_out":{
              "damageData":false,
              "flow":false,
              "ready":false
            }
          },
          "name":"Detailed Vehicle Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "damageData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ],
            [
              "in",
              "string",
              "uid",
              null,
              ""
            ]
          ],
          "pos":[
            5540,
            -594
          ],
          "type":"util/customLua"
        },
        "10050":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = self.pinIn.dmg.value\nextensions.mechDamageLoader.saveDamageToFile(self.pinIn.file.value, dtable)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "dmg":false,
              "file":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Mech Damage",
          "pins":[
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "dmg",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            5316,
            -482
          ],
          "type":"util/customLua"
        },
        "10051":{
          "alpha":0.75000000000000000000,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            170,
            58
          ],
          "commentText":"",
          "commentTitle":"Active flow",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withNodes",
          "pos":[
            4704,
            -98
          ],
          "simple":false,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "10052":{
          "alpha":1,
          "backgroundColor":[
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000,
            0.50000000000000000000
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"mech save files",
          "commentTitle":"now loads car",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            5194,
            504
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "10053":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devices = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\n-- Loop to fetch damage values and add them to table\n\nfor k,v in pairs(devices) do\ndtable[k] = {}\nfor _,dev in pairs(devices[k]) do\n\ntoFetch = \"damageTracker.getDamage('\" .. k .. \"', '\" .. dev .. \"')\"\ncfid = \"dmgtrk\" .. cfidval\n\nif self.pinIn.uid.value ~= nil then\ncfid = cfid .. self.pinIn.uid.value\nend\n\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\ndtable[k][dev] = extensions.vluaFetchModule.getVal(cfid)\ncfidval = cfidval + 1\nend\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.damageData.value = dtable"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "devices":false,
              "flow":false,
              "uid":false
            },
            "p_out":{
              "damageData":false,
              "flow":false,
              "ready":false
            }
          },
          "name":"Detailed Vehicle Damage",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "damageData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ],
            [
              "in",
              "string",
              "uid",
              null,
              ""
            ]
          ],
          "pos":[
            1270,
            638
          ],
          "type":"util/customLua"
        },
        "10054":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = self.pinIn.dmg.value\nextensions.mechDamageLoader.saveDamageToFile(self.pinIn.file.value, dtable)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "dmg":false,
              "file":false,
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Mech Damage",
          "pins":[
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "dmg",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            1102,
            820
          ],
          "type":"util/customLua"
        },
        "10055":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "frames":{
              "type":"number",
              "value":110
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "frames":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            892,
            680
          ],
          "type":"logic/frameDelay"
        },
        "10057":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2166,
            -1756
          ],
          "type":"ui/imgui/elemental/imText"
        },
        "10058":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerMoney"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3244,
            -2064
          ],
          "type":"types/genericValue"
        },
        "10059":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3244,
            -2190
          ],
          "type":"types/genericValue"
        },
        "10060":{
          "code":{
            "work":"local dtable = self.pinIn.data.value\nlocal key = self.pinIn.wid.value .. \"x\"\nif dtable[key] ~= nil then\nself.pinOut.x.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"y\"\nself.pinOut.y.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"w\"\nself.pinOut.w.value = tonumber(dtable[key])\nkey = self.pinIn.wid.value .. \"h\"\nself.pinOut.h.value = tonumber(dtable[key])\nelse\nself.pinOut.x.value = 100\nself.pinOut.y.value = 100\nself.pinOut.w.value = 200\nself.pinOut.h.value = 220\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "wid":{
              "type":"string",
              "value":"fuel"
            }
          },
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "wid":false
            },
            "p_out":{
              "flow":false,
              "h":false,
              "w":false,
              "x":false,
              "y":false
            }
          },
          "name":"Get IM Prefs",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "data",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wid",
              null,
              ""
            ],
            [
              "out",
              "number",
              "x",
              null,
              ""
            ],
            [
              "out",
              "number",
              "y",
              null,
              ""
            ],
            [
              "out",
              "number",
              "w",
              null,
              ""
            ],
            [
              "out",
              "number",
              "h",
              null,
              ""
            ]
          ],
          "pos":[
            1564,
            -944
          ],
          "type":"util/customLua"
        },
        "10061":{
          "alpha":1,
          "backgroundColor":[
            0.00000099999999747524,
            0.00000099998999303352,
            0.00000099998999303352,
            1
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"",
          "commentTitle":"Saves Part Edits",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            5614,
            -308
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "10063":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -620,
            2500
          ],
          "type":"vehicle/freeze"
        },
        "10064":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -2426,
            -342
          ],
          "type":"logic/compare"
        },
        "10065":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"racePlayerReady"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2202,
            -468
          ],
          "type":"types/genericValue"
        },
        "10066":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2426,
            -188
          ],
          "type":"vehicle/freeze"
        },
        "10067":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2244,
            -188
          ],
          "type":"vehicle/freeze"
        },
        "10068":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePlayerReady"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1628,
            -734
          ],
          "type":"types/genericValue"
        },
        "10073":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal id = self.pinIn.fetchID.value\nlocal toFetch = self.pinIn.toFetch.value\nlocal vecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. id .. \"'))\"\nif ve.queueLuaCommand ~= nil then\nve:queueLuaCommand(vecmd)\nself.pinOut.output.value = extensions.vluaFetchModule.getVal(id)\nend"
          },
          "customIcon":"simobject_lightning",
          "customName":"Fetch VLUA Variable",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "fetchID":{
              "type":"string",
              "value":"gy"
            },
            "toFetch":{
              "type":"string",
              "value":"sensors.gy"
            }
          },
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "fetchID":false,
              "flow":false,
              "toFetch":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Fetch VLUA Variable",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "toFetch",
              null,
              ""
            ],
            [
              "out",
              "string",
              "output",
              null,
              ""
            ],
            [
              "in",
              "string",
              "fetchID",
              null,
              ""
            ]
          ],
          "pos":[
            -284,
            1380
          ],
          "type":"util/customLua"
        },
        "10074":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local extensions = require(\"extensions\")\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal id = self.pinIn.fetchID.value\nlocal toFetch = self.pinIn.toFetch.value\nlocal vecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. id .. \"'))\"\nif ve.queueLuaCommand ~= nil then\nve:queueLuaCommand(vecmd)\nself.pinOut.output.value = extensions.vluaFetchModule.getVal(id)\nend"
          },
          "customIcon":"simobject_lightning",
          "customName":"Fetch VLUA Variable",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "fetchID":{
              "type":"string",
              "value":"gz"
            },
            "toFetch":{
              "type":"string",
              "value":"sensors.gz"
            }
          },
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "fetchID":false,
              "flow":false,
              "toFetch":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Fetch VLUA Variable",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "toFetch",
              null,
              ""
            ],
            [
              "out",
              "string",
              "output",
              null,
              ""
            ],
            [
              "in",
              "string",
              "fetchID",
              null,
              ""
            ]
          ],
          "pos":[
            -340,
            1548
          ],
          "type":"util/customLua"
        },
        "10075":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"gmax"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            178,
            1408
          ],
          "type":"types/genericValue"
        },
        "10076":{
          "customName":"Get G Force Max",
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"gmax"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1802,
            -6
          ],
          "type":"types/genericValue"
        },
        "10077":{
          "customName":"Get Player Health",
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerHealth"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            1802,
            92
          ],
          "type":"types/genericValue"
        },
        "10078":{
          "customName":"Set Health",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerHealth"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1354,
            -104
          ],
          "type":"types/genericValue"
        },
        "10079":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerHealth"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            136,
            1842
          ],
          "type":"types/genericValue"
        },
        "10080":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerHealth"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -326,
            1954
          ],
          "type":"types/genericValue"
        },
        "10082":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1376,
            1688
          ],
          "type":"vehicle/freeze"
        },
        "10083":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Sleep / Heal (8 Hours)"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            1998,
            64
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "10084":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3636,
            1226
          ],
          "type":"vehicle/freeze"
        },
        "10085":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3146,
            1002
          ],
          "type":"logic/flowSwitch"
        },
        "10086":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerIsWalking"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2664,
            694
          ],
          "type":"types/genericValue"
        },
        "10087":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerIsWalking"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3084,
            848
          ],
          "type":"types/genericValue"
        },
        "10088":{
          "data":{
            "restoreTod":true
          },
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "play":{
              "type":"bool",
              "value":true
            },
            "dayLength":{
              "type":"number",
              "value":86400
            },
            "dayScale":{
              "type":"number",
              "value":1
            },
            "nightScale":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "azimuthOverride":true,
              "dayLength":true,
              "dayScale":true,
              "flow":false,
              "nightScale":true,
              "play":false,
              "time":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1564,
            -118
          ],
          "type":"environment/setTimeOfDay"
        },
        "10089":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            654,
            596
          ],
          "type":"types/genericValue"
        },
        "10090":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            654,
            680
          ],
          "type":"types/genericValue"
        },
        "10091":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerHealth"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            654,
            764
          ],
          "type":"types/genericValue"
        },
        "10092":{
          "data":{
            "btnName":"Generic Getter"
          },
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -956,
            207
          ],
          "type":"events/interactiveButton"
        },
        "10093":{
          "alpha":1,
          "backgroundColor":[
            0.00000099999999747524,
            0.00000099998999303352,
            0.00000099998999303352,
            1
          ],
          "borderColor":[
            0.80000001192092895508,
            0.80000001192092895508,
            0.80000001192092895508,
            1
          ],
          "commentSize":[
            200,
            200
          ],
          "commentText":"and avoid saving \\n",
          "commentTitle":"Detect Walking Player",
          "data":{},
          "dynamicMode":"repeat",
          "moveMode":"withoutNodes",
          "pos":[
            4452,
            -350
          ],
          "simple":true,
          "textColor":[
            1,
            1,
            1,
            1
          ],
          "type":"debug/comment"
        },
        "10094":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":-1
            },
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3230,
            -1770
          ],
          "type":"types/genericValue"
        },
        "10095":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2678,
            -1392
          ],
          "type":"types/genericValue"
        },
        "10096":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2748,
            -1042
          ],
          "type":"types/genericValue"
        },
        "10097":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyBasePrice"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -802,
            -2078
          ],
          "type":"types/genericValue"
        },
        "10098":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyPartPrice"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -634,
            -2078
          ],
          "type":"types/genericValue"
        },
        "10099":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyScrapVal"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1306,
            -1952
          ],
          "type":"types/genericValue"
        },
        "10100":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyPaint"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1138,
            -1952
          ],
          "type":"types/genericValue"
        },
        "10101":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyBasePrice"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1838,
            -538
          ],
          "type":"types/genericValue"
        },
        "10102":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyPartPrice"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1992,
            -440
          ],
          "type":"types/genericValue"
        },
        "10104":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyScrapVal"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":false,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2748,
            -902
          ],
          "type":"types/genericValue"
        },
        "10105":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyBasePrice"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1642,
            -986
          ],
          "type":"types/genericValue"
        },
        "10106":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyPartPrice"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1642,
            -902
          ],
          "type":"types/genericValue"
        },
        "10107":{
          "customName":"Race For Slips?",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -522,
            -804
          ],
          "type":"logic/branch"
        },
        "10108":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCarCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2104,
            -1266
          ],
          "type":"types/genericValue"
        },
        "10109":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local currentdata = readFile(\"beamLR/mainData\")\nlocal dtable = {}\nfor k,v in string.gmatch(currentdata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\n\nif self.pinIn.money.value ~= nil then\ndtable[\"money\"] = self.pinIn.money.value\nend\n\nif self.pinIn.carCount.value ~= nil then\ndtable[\"carCount\"] = self.pinIn.carCount.value\nend\n\nif self.pinIn.health.value ~= nil then\ndtable[\"health\"] = self.pinIn.health.value\nend\n\nif self.pinIn.carUsed.value ~= nil then\ndtable[\"carUsed\"] = self.pinIn.carUsed.value\nend\n\nif self.pinIn.time.value ~= nil then\ndtable[\"time\"] = self.pinIn.time.value\nend\n\nlocal newdata = \"\"\n\nfor k,v in pairs(dtable) do\nnewdata = newdata .. k .. \"=\" .. v .. \"\\n\"\nend\n\nwriteFile(\"beamLR/mainData\", newdata)"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "carUsed":{
              "type":"number",
              "value":-1
            }
          },
          "hiddenPins":{
            "p_in":{
              "carCount":false,
              "carUsed":false,
              "flow":false,
              "health":true,
              "money":true,
              "time":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Main Data",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "money",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carCount",
              null,
              ""
            ],
            [
              "in",
              "number",
              "health",
              null,
              ""
            ],
            [
              "in",
              "number",
              "carUsed",
              null,
              ""
            ],
            [
              "in",
              "number",
              "time",
              null,
              ""
            ]
          ],
          "pos":[
            -1922,
            -1420
          ],
          "type":"util/customLua"
        },
        "10110":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1564,
            50
          ],
          "type":"vehicle/removeVehicle"
        },
        "10111":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":-1
            },
            "varName":{
              "type":"string",
              "value":"playerGarageSelectedCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1908,
            -1252
          ],
          "type":"types/genericValue"
        },
        "10114":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "shuffle":{
              "type":"bool",
              "value":true
            },
            "spawnGap":{
              "type":"number",
              "value":100
            },
            "spawnMode":{
              "type":"string",
              "value":"road"
            }
          },
          "hiddenPins":{
            "p_in":{
              "dontDelete":true,
              "flow":false,
              "group":false,
              "quantity":false,
              "randomColors":true,
              "reset":false,
              "shuffle":true,
              "spawnGap":true,
              "spawnMode":true,
              "startPos":true,
              "startRot":true
            },
            "p_out":{
              "flow":false,
              "loaded":false,
              "vehicleIds":false
            }
          },
          "pos":[
            -1152,
            806
          ],
          "type":"gameplay/traffic/trafficSpawnGroup"
        },
        "10116":{
          "data":{},
          "dynamicMode":"once",
          "hiddenPins":{
            "p_in":{
              "data":false,
              "flow":false,
              "reset":false
            },
            "p_out":{
              "vehicleIds":false,
              "activated":true,
              "flow":false,
              "total":true
            }
          },
          "pos":[
            -914,
            778
          ],
          "type":"gameplay/traffic/trafficActivate"
        },
        "10118":{
          "code":{
            "work":"self.pinOut.data.value = jsonReadFile(self.pinIn.file.value)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "file":{
              "type":"string",
              "value":"beamLR/spawngroups/cops.json"
            }
          },
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false
            },
            "p_out":{
              "data":false,
              "flow":false
            }
          },
          "name":"Load JSON Table",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ],
            [
              "out",
              "table",
              "data",
              null,
              ""
            ]
          ],
          "pos":[
            -1334,
            792
          ],
          "type":"util/customLua"
        },
        "10120":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"ticketCost"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2068,
            1142
          ],
          "type":"types/genericValue"
        },
        "10121":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"ticketText"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2250,
            1212
          ],
          "type":"types/genericValue"
        },
        "10124":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "customName":"Ticket Cost Data",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "filename":{
              "type":"string",
              "value":"beamLR/offenseCostData"
            }
          },
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            374,
            8
          ],
          "type":"util/customLua"
        },
        "10125":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":-1
            },
            "varName":{
              "type":"string",
              "value":"outstandingTicket"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2152,
            1562
          ],
          "type":"types/genericValue"
        },
        "10126":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"ticketMenuState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1998,
            386
          ],
          "type":"types/genericValue"
        },
        "10127":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local filedata = readFile(self.pinIn.filename.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\nself.pinOut.output.value = dtable"
          },
          "customName":"Infraction Names",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "filename":{
              "type":"string",
              "value":"beamLR/offenseNameData"
            }
          },
          "hiddenPins":{
            "p_in":{
              "filename":false,
              "flow":false
            },
            "p_out":{
              "flow":false,
              "output":false
            }
          },
          "name":"Load Data Table",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "string",
              "filename",
              null,
              ""
            ],
            [
              "out",
              "table",
              "output",
              null,
              ""
            ]
          ],
          "pos":[
            374,
            92
          ],
          "type":"util/customLua"
        },
        "10128":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "freeze":{
              "type":"bool",
              "value":false
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "freeze":false,
              "vehId":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            2404,
            1422
          ],
          "type":"vehicle/freeze"
        },
        "10129":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":-1
            },
            "varName":{
              "type":"string",
              "value":"playerGarageSelectedCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            3902,
            1940
          ],
          "type":"types/genericValue"
        },
        "10130":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Pay Ticket"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            3692,
            -286
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "10131":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value - self.pinIn.DX.value"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X-DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            4098,
            -104
          ],
          "type":"util/customLua"
        },
        "10132":{
          "code":{
            "work":"local filedata = readFile(self.pinIn.file.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\ndtable[self.pinIn.tkey.value] = self.pinIn.tval.value or 0\nlocal ndata = \"\"\nfor k,v in pairs(dtable) do\nndata = ndata .. k .. \"=\" .. dtable[k] .. \"\\n\"\nend\n\nprint(ndata)\n\nwriteFile(self.pinIn.file.value, ndata)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "tkey":{
              "type":"string",
              "value":"gas"
            }
          },
          "hiddenPins":{
            "p_in":{
              "tval":false,
              "file":false,
              "flow":false,
              "tkey":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Table Value",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ],
            [
              "in",
              "string",
              "tkey",
              null,
              ""
            ],
            [
              "in",
              "any",
              "tval",
              null,
              ""
            ]
          ],
          "pos":[
            3230,
            1422
          ],
          "type":"util/customLua"
        },
        "10133":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceLaps"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -970,
            -1952
          ],
          "type":"types/genericValue"
        },
        "10134":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceTriggers"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -802,
            -1952
          ],
          "type":"types/genericValue"
        },
        "10135":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceWaypoints"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -634,
            -1952
          ],
          "type":"types/genericValue"
        },
        "10136":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePlayerCPID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2790,
            22
          ],
          "type":"types/genericValue"
        },
        "10137":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePlayerLap"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2790,
            106
          ],
          "type":"types/genericValue"
        },
        "10138":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyTriggerID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3672,
            372
          ],
          "type":"types/genericValue"
        },
        "10139":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":true,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -3644,
            470
          ],
          "type":"logic/compare"
        },
        "10140":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal trigs = self.pinIn.trigs.value\nlocal ways = self.pinIn.wps.value\nlocal cid = self.pinIn.current.value\nlocal lap = self.pinIn.clap.value\nlocal count = self.pinIn.cpc.value\nlocal laps = self.pinIn.laps.value\nlocal ttable = extensions.blrutils.ssplit(trigs, \",\")\nlocal wtable = extensions.blrutils.ssplit(ways, \",\")\nlocal ntg = \"\"\nlocal nwa = \"\"\nlocal nid = 0\nlocal nla = 0\nlocal finish = false\n\nif cid == count then\nnid = 1\nntg = ttable[nid]\nnwa = wtable[nid]\nnla = lap + 1\nfinish = (laps == lap)\nelse\nnid = cid + 1\nntg = ttable[nid]\nnwa = wtable[nid]\nnla = lap\nend\n\nself.pinOut.nextTrig.value = ntg\nself.pinOut.nextWp.value = nwa\nself.pinOut.nextId.value = nid\nself.pinOut.newLap.value = nla\nself.pinOut.finished.value = finish\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "clap":false,
              "cpc":false,
              "current":false,
              "flow":false,
              "laps":false,
              "trigs":false,
              "wps":false
            },
            "p_out":{
              "finished":false,
              "flow":false,
              "newLap":false,
              "nextId":false,
              "nextTrig":false,
              "nextWp":false
            }
          },
          "name":"Race Next CP",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "cpc",
              null,
              ""
            ],
            [
              "in",
              "string",
              "trigs",
              null,
              ""
            ],
            [
              "in",
              "string",
              "wps",
              null,
              ""
            ],
            [
              "in",
              "number",
              "current",
              null,
              ""
            ],
            [
              "out",
              "string",
              "nextTrig",
              null,
              ""
            ],
            [
              "out",
              "string",
              "nextWp",
              null,
              ""
            ],
            [
              "out",
              "number",
              "nextId",
              null,
              ""
            ],
            [
              "out",
              "number",
              "newLap",
              null,
              ""
            ],
            [
              "in",
              "number",
              "clap",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "finished",
              null,
              ""
            ],
            [
              "in",
              "number",
              "laps",
              null,
              ""
            ]
          ],
          "pos":[
            -3000,
            316
          ],
          "type":"util/customLua"
        },
        "10141":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -2790,
            316
          ],
          "type":"logic/branch"
        },
        "10142":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePlayerCPID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2384,
            148
          ],
          "type":"types/genericValue"
        },
        "10143":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePlayerTriggerID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2188,
            120
          ],
          "type":"types/genericValue"
        },
        "10144":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePlayerLap"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1810,
            78
          ],
          "type":"types/genericValue"
        },
        "10145":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyCPID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2342,
            330
          ],
          "type":"types/genericValue"
        },
        "10146":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyTriggerID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2174,
            288
          ],
          "type":"types/genericValue"
        },
        "10147":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyLap"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2174,
            372
          ],
          "type":"types/genericValue"
        },
        "10148":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceAIWP"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2174,
            470
          ],
          "type":"types/genericValue"
        },
        "10149":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "name":false
            },
            "p_out":{
              "objID":false
            }
          },
          "pos":[
            -2538,
            246
          ],
          "type":"scene/idByName"
        },
        "10150":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyCPID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3420,
            498
          ],
          "type":"types/genericValue"
        },
        "10151":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyLap"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3238,
            498
          ],
          "type":"types/genericValue"
        },
        "10152":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceCPCount"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1306,
            -1826
          ],
          "type":"types/genericValue"
        },
        "10153":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local myObj = scenetree.findObjectById(self.pinIn.newPin.value)\nlocal objPos = {}\nif myObj ~= nil then\nobjPos = myObj:getPosition()\nend\nself.pinOut.pos.value = {objPos.x, objPos.y, objPos.z}"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "newPin":false
            },
            "p_out":{
              "flow":false,
              "pos":false
            }
          },
          "name":"Get Obj Pos",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "vec3",
              "pos",
              null,
              ""
            ],
            [
              "in",
              "number",
              "newPin",
              null,
              ""
            ]
          ],
          "pos":[
            -1614,
            22
          ],
          "type":"util/customLua"
        },
        "10154":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"racePlayerCPID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -3224,
            -566
          ],
          "type":"types/genericValue"
        },
        "10155":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"raceEnemyLap"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -3224,
            -496
          ],
          "type":"types/genericValue"
        },
        "10156":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"raceEnemyCPID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -3224,
            -426
          ],
          "type":"types/genericValue"
        },
        "10157":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePlayerTriggerID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1138,
            -1826
          ],
          "type":"types/genericValue"
        },
        "10158":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyTriggerID"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -970,
            -1826
          ],
          "type":"types/genericValue"
        },
        "10161":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "fadeInTime":{
              "type":"number",
              "value":-1
            },
            "fadeOutTime":{
              "type":"number",
              "value":-1
            },
            "file":{
              "type":"string",
              "value":"core/art/sound/ui_mission_complete_gold.ogg"
            },
            "pitch":{
              "type":"number",
              "value":1
            },
            "unique":{
              "type":"bool",
              "value":false
            },
            "volume":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "channel":true,
              "fadeInTime":true,
              "fadeOutTime":true,
              "file":false,
              "flow":false,
              "pitch":true,
              "reset":false,
              "unique":true,
              "volume":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1418,
            134
          ],
          "type":"audio/playOnce"
        },
        "10162":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "fadeInTime":{
              "type":"number",
              "value":-1
            },
            "fadeOutTime":{
              "type":"number",
              "value":-1
            },
            "file":{
              "type":"string",
              "value":"core/art/sound/ui_mission_complete_failed.ogg"
            },
            "pitch":{
              "type":"number",
              "value":1
            },
            "unique":{
              "type":"bool",
              "value":false
            },
            "volume":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "channel":true,
              "fadeInTime":true,
              "fadeOutTime":true,
              "file":false,
              "flow":false,
              "pitch":true,
              "reset":false,
              "unique":true,
              "volume":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1208,
            442
          ],
          "type":"audio/playOnce"
        },
        "10163":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePlayerLap"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1628,
            -650
          ],
          "type":"types/genericValue"
        },
        "10164":{
          "data":{
            "zOffset":0
          },
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "color":{
              "type":"color",
              "value":[
                0,
                0,
                0,
                1
              ]
            },
            "radius":{
              "type":"number",
              "value":5
            }
          },
          "hiddenPins":{
            "p_in":{
              "color":true,
              "fadeFarDist":true,
              "fadeNearDist":true,
              "flow":false,
              "markerType":true,
              "position":false,
              "radius":false,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1208,
            260
          ],
          "type":"scene/singleMarker"
        },
        "10165":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "name":false
            },
            "p_out":{
              "objID":false
            }
          },
          "pos":[
            -1432,
            218
          ],
          "type":"scene/idByName"
        },
        "10166":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"local myObj = scenetree.findObjectById(self.pinIn.newPin.value)\nlocal objPos = {}\nif myObj ~= nil then\nobjPos = myObj:getPosition()\nend\nself.pinOut.pos.value = {objPos.x, objPos.y, objPos.z}"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "newPin":false
            },
            "p_out":{
              "flow":false,
              "pos":false
            }
          },
          "name":"Get Obj Pos",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "vec3",
              "pos",
              null,
              ""
            ],
            [
              "in",
              "number",
              "newPin",
              null,
              ""
            ]
          ],
          "pos":[
            -1390,
            316
          ],
          "type":"util/customLua"
        },
        "10167":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePlayerInitStatus"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2790,
            204
          ],
          "type":"types/genericValue"
        },
        "10168":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"racePlayerInitStatus"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1796,
            204
          ],
          "type":"types/genericValue"
        },
        "10169":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":-1
            },
            "varName":{
              "type":"string",
              "value":"racePlayerInitStatus"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -270,
            -1378
          ],
          "type":"types/genericValue"
        },
        "10170":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePlayerReady"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2804,
            -664
          ],
          "type":"types/genericValue"
        },
        "10171":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":-1
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            -2636,
            -678
          ],
          "type":"logic/compare"
        },
        "10172":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "condition":false,
              "flow":false
            },
            "p_out":{
              "False":false,
              "True":false,
              "flow":true
            }
          },
          "pos":[
            -1054,
            1702
          ],
          "type":"logic/branch"
        },
        "10173":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"uiRepairCost"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1152,
            -3044
          ],
          "type":"types/genericValue"
        },
        "10174":{
          "customName":"Set League",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceLeague"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1242,
            -104
          ],
          "type":"types/genericValue"
        },
        "10176":{
          "customName":"League Update",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"leagueProgressUpdate"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -494,
            -300
          ],
          "type":"types/genericValue"
        },
        "10177":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = extensions.mechDamageLoader.getIntegrityDevices()\nself.pinOut.devices.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"Integrity Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            5792,
            -580
          ],
          "type":"util/customLua"
        },
        "10178":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal itable = self.pinIn.iteg.value\nlocal file = self.pinIn.file.value\nextensions.mechDamageLoader.saveIntegrityToFile(file, itable)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "iteg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "iteg",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            5778,
            -314
          ],
          "type":"util/customLua"
        },
        "10179":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal itable = self.pinIn.iteg.value\nlocal file = self.pinIn.file.value\nextensions.mechDamageLoader.saveIntegrityToFile(file, itable)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "iteg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "iteg",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            1326,
            918
          ],
          "type":"util/customLua"
        },
        "10180":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyifile"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -634,
            -1826
          ],
          "type":"types/genericValue"
        },
        "10181":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyifile"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2538,
            -1028
          ],
          "type":"types/genericValue"
        },
        "10182":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal dtable = extensions.mechDamageLoader.getIntegrityDevices()\nself.pinOut.devices.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "devices":false,
              "flow":false
            }
          },
          "name":"Integrity Devices",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "out",
              "table",
              "devices",
              null,
              ""
            ]
          ],
          "pos":[
            3902,
            1422
          ],
          "type":"util/customLua"
        },
        "10183":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal toFetch = \"\"\nlocal devtable = self.pinIn.devices.value\nlocal vecmd = \"\"\nlocal dtable = {}\nlocal ve = scenetree.findObjectById(self.pinIn.veid.value)\nlocal cfid = \"\"\nlocal cfidval = 0\n\nlocal itmd = \"\"\nlocal itsd = \"\"\nlocal splitres = {}\n\n\nif ve.queueLuaCommand ~= nil then\nself.pinOut.ready.value = true\n\nfor _,v in pairs(devtable) do\n\nif v == \"odometer\" then \ntoFetch = \"electrics.values.odometer\"\nelseif string.match(v,\"integrity\") then\nsplitres = extensions.blrutils.ssplit(v, \".\")\nitmd = splitres[2]\nitsd = splitres[3]\nif itsd ~= nil then\ntoFetch = \"powertrain.getDevice('\" .. itmd .. \"'):getPartCondition('\" .. itsd .. \"')\"\nelse\ntoFetch = \"powertrain.getDevice('\" .. itmd .. \"'):getPartCondition()\"\nend\nend\n\n\ncfid = \"integ\" .. cfidval\n\nif self.pinIn.uid.value ~= nil then\ncfid = cfid .. self.pinIn.uid.value\nend\n\n-- Fetching main damage tracker value\nvecmd = \"obj:queueGameEngineLua(string.format('extensions.vluaFetchModule.fetch(%s,%q)', \" .. toFetch .. \",'\" .. cfid ..\"'))\"\nve:queueLuaCommand(vecmd)\ndtable[v] = extensions.vluaFetchModule.getVal(cfid)\n\n\ncfidval = cfidval + 1\nend\n\nelse\n\nself.pinOut.ready.value = false\n\nend\n\nself.pinOut.integrityData.value = dtable",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "uid":{
              "type":"string",
              "value":"impteg"
            }
          },
          "hiddenPins":{
            "p_in":{
              "veid":false,
              "devices":false,
              "flow":false,
              "uid":false
            },
            "p_out":{
              "flow":false,
              "integrityData":false,
              "ready":false
            }
          },
          "name":"Detailed Vehicle Integrity",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "table",
              "devices",
              null,
              ""
            ],
            [
              "in",
              "string",
              "uid",
              null,
              ""
            ],
            [
              "out",
              "table",
              "integrityData",
              null,
              ""
            ],
            [
              "out",
              "bool",
              "ready",
              null,
              ""
            ]
          ],
          "pos":[
            3860,
            1534
          ],
          "type":"util/customLua"
        },
        "10184":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal itable = self.pinIn.iteg.value\nlocal file = self.pinIn.file.value\ndump(itable)\nextensions.mechDamageLoader.saveIntegrityToFile(file, itable)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "iteg":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Save Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "table",
              "iteg",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            3594,
            1758
          ],
          "type":"util/customLua"
        },
        "10185":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal veid = self.pinIn.veid.value\nlocal file = self.pinIn.file.value\nextensions.mechDamageLoader.loadIntegrityFromFile(file,veid)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "file":false,
              "flow":false,
              "veid":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Load Integrity Data",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "veid",
              null,
              ""
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ]
          ],
          "pos":[
            -900,
            -300
          ],
          "type":"util/customLua"
        },
        "10186":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyifile"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1068,
            -272
          ],
          "type":"types/genericValue"
        },
        "10187":{
          "code":{
            "work":"self.pinOut.filename.value = \"beamLR/garage/car\" .. self.pinIn.carid.value\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "carid":false,
              "flow":false
            },
            "p_out":{
              "filename":false,
              "flow":false
            }
          },
          "name":"Get Garage Car File",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "number",
              "carid",
              null,
              ""
            ],
            [
              "out",
              "string",
              "filename",
              null,
              ""
            ]
          ],
          "pos":[
            234,
            -2120
          ],
          "type":"util/customLua"
        },
        "10188":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            234,
            -2246
          ],
          "type":"types/genericValue"
        },
        "10189":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"trafficEnableFlag"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -550,
            1128
          ],
          "type":"types/genericValue"
        },
        "10190":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"triggerFilterPlayerTrigName"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            178,
            -342
          ],
          "type":"types/genericValue"
        },
        "10191":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal idtable = {station = 1, repair = 2, usedcarshop = 3, partshop = 4,  garage=5,race=6}\nlocal tname = self.pinIn.name.value\nlocal tdata = self.pinIn.tdata.value\n\nif tdata[tname] == nil then\nself.pinOut.typeName.value = \"empty\"\nself.pinOut.typeID.value = -1\nself.pinOut.extras.value = \"none\"\nelse\nlocal tsplit = extensions.blrutils.ssplit(tdata[tname], \",\")\nlocal type = tsplit[1]\nlocal extras = tsplit[2]\nif type ~= nil then\nself.pinOut.typeName.value = type\nself.pinOut.typeID.value = idtable[type]\nif extras ~= nil then\nself.pinOut.extras.value = \"beamLR/mapdata/\" .. extensions.blrutils.getLevelName() .. \"/triggerData/\" .. extras\nelse\nself.pinOut.extras.value = \"none\"\nend\nelse\nself.pinOut.typeName.value = \"empty\"\nself.pinOut.typeID.value = -1\nself.pinOut.extras.value = \"none\"\nend\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "name":false,
              "tdata":false
            },
            "p_out":{
              "typeName":false,
              "extras":false,
              "flow":false,
              "typeID":false
            }
          },
          "name":"Trigger Name To Type",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "typeName",
              null,
              ""
            ],
            [
              "out",
              "number",
              "typeID",
              null,
              ""
            ],
            [
              "in",
              "table",
              "tdata",
              null,
              ""
            ],
            [
              "out",
              "string",
              "extras",
              null,
              ""
            ]
          ],
          "pos":[
            -46,
            -1224
          ],
          "type":"util/customLua"
        },
        "10192":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceUseTraffic"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1306,
            -1700
          ],
          "type":"types/genericValue"
        },
        "10193":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nextensions.blrglobals.blrFlagSet(self.pinIn.name.value, self.pinIn.flag.value)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "flag":{
              "type":"bool",
              "value":true
            },
            "name":{
              "type":"string",
              "value":"trafficEnable"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flag":false,
              "flow":false,
              "name":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLR Flag Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "in",
              "bool",
              "flag",
              null,
              ""
            ]
          ],
          "pos":[
            -494,
            -580
          ],
          "type":"util/customLua"
        },
        "10194":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal k = self.pinIn.key.value\nlocal v = self.pinIn.val.value\nextensions.blrglobals.fgSetVal(k,v)",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "key":{
              "type":"string",
              "value":"codo"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "key":false,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"BLRGlobal Set",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "key",
              null,
              ""
            ],
            [
              "in",
              "any",
              "val",
              null,
              ""
            ]
          ],
          "pos":[
            2348,
            -272
          ],
          "type":"util/customLua"
        },
        "10195":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceClub"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2300,
            -2064
          ],
          "type":"types/genericValue"
        },
        "10196":{
          "customName":"League",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceLeague"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            626,
            -1182
          ],
          "type":"types/genericValue"
        },
        "10197":{
          "customName":"Club",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceClub"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            780,
            -1182
          ],
          "type":"types/genericValue"
        },
        "10198":{
          "customName":"OPSP",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceOPSP"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            836,
            -1406
          ],
          "type":"types/genericValue"
        },
        "10199":{
          "customName":"OPSR",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceOPSR"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            976,
            -1406
          ],
          "type":"types/genericValue"
        },
        "10200":{
          "customName":"PSTART",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePSTART"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            808,
            -1308
          ],
          "type":"types/genericValue"
        },
        "10201":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceOPSP"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1992,
            -342
          ],
          "type":"types/genericValue"
        },
        "10202":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceOPSR"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1838,
            -342
          ],
          "type":"types/genericValue"
        },
        "10203":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePSTART"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2412,
            -650
          ],
          "type":"types/genericValue"
        },
        "10204":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyPaint"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1838,
            -440
          ],
          "type":"types/genericValue"
        },
        "10205":{
          "customName":"Player Start Marker",
          "data":{
            "zOffset":0
          },
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "color":{
              "type":"color",
              "value":[
                0.99999946399999994906,
                1,
                0.99998998599999977532,
                1
              ]
            },
            "radius":{
              "type":"number",
              "value":2
            }
          },
          "hiddenPins":{
            "p_in":{
              "color":true,
              "fadeFarDist":true,
              "fadeNearDist":true,
              "flow":false,
              "markerType":true,
              "position":false,
              "radius":true,
              "reset":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2244,
            -678
          ],
          "type":"scene/singleMarker"
        },
        "10206":{
          "customName":"PSTRIG",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePSTrig"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            976,
            -1308
          ],
          "type":"types/genericValue"
        },
        "10207":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePSTrig"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2650,
            -342
          ],
          "type":"types/genericValue"
        },
        "10209":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal idtable = {station = 1, repair = 2, usedcarshop = 3, partshop = 4,  garage=5,race=6}\nlocal tname = self.pinIn.name.value\nlocal tdata = self.pinIn.tdata.value\n\nif tdata[tname] == nil then\nself.pinOut.typeName.value = \"empty\"\nself.pinOut.typeID.value = -1\nself.pinOut.extras.value = \"none\"\nelse\nlocal tsplit = extensions.blrutils.ssplit(tdata[tname], \",\")\nlocal type = tsplit[1]\nlocal extras = tsplit[2]\nif type ~= nil then\nself.pinOut.typeName.value = type\nself.pinOut.typeID.value = idtable[type]\nif extras ~= nil then\nself.pinOut.extras.value = \"beamLR/mapdata/\" .. extensions.blrutils.getLevelName() .. \"/triggerData/\" .. extras\nelse\nself.pinOut.extras.value = \"none\"\nend\nelse\nself.pinOut.typeName.value = \"empty\"\nself.pinOut.typeID.value = -1\nself.pinOut.extras.value = \"none\"\nend\nend",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "name":false,
              "tdata":false
            },
            "p_out":{
              "typeName":false,
              "extras":false,
              "flow":false,
              "typeID":false
            }
          },
          "name":"Trigger Name To Type",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "name",
              null,
              ""
            ],
            [
              "out",
              "string",
              "typeName",
              null,
              ""
            ],
            [
              "out",
              "number",
              "typeID",
              null,
              ""
            ],
            [
              "in",
              "table",
              "tdata",
              null,
              ""
            ],
            [
              "out",
              "string",
              "extras",
              null,
              ""
            ]
          ],
          "pos":[
            150,
            -1322
          ],
          "type":"util/customLua"
        },
        "10210":{
          "count":1,
          "customName":"Player Enter",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "value_1":{
              "type":"string",
              "value":"race"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "value":false,
              "value_1":false
            },
            "p_out":{
              "flow":false,
              "match_1":false,
              "none":false
            }
          },
          "pos":[
            178,
            -1140
          ],
          "type":"logic/switchcase"
        },
        "10211":{
          "customName":"Queue Update",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"leagueProgressUpdate"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            962,
            -1126
          ],
          "type":"types/genericValue"
        },
        "10212":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceClubName"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1222,
            -1462
          ],
          "type":"types/genericValue"
        },
        "10213":{
          "customName":"CNAME",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceClubName"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            976,
            -1224
          ],
          "type":"types/genericValue"
        },
        "10214":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"waitmsgState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":false,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -130,
            890
          ],
          "type":"types/genericValue"
        },
        "10215":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerCurrentCar"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2664,
            876
          ],
          "type":"types/genericValue"
        },
        "10216":{
          "code":{
            "work":"local filedata = readFile(self.pinIn.file.value)\nlocal dtable = {}\nfor k,v in string.gmatch(filedata, \"([^%c]+)=([^%c]+)\") do\n    dtable[k] = v\nend\ndtable[self.pinIn.tkey.value] = self.pinIn.tval.value or 0\nlocal ndata = \"\"\nfor k,v in pairs(dtable) do\nndata = ndata .. k .. \"=\" .. dtable[k] .. \"\\n\"\nend\n\nprint(ndata)\n\nwriteFile(self.pinIn.file.value, ndata)\n",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "tkey":{
              "type":"string",
              "value":"damage"
            }
          },
          "hiddenPins":{
            "p_in":{
              "tval":false,
              "file":false,
              "flow":false,
              "tkey":true
            },
            "p_out":{
              "flow":false
            }
          },
          "name":"Update Table Value",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "file",
              null,
              ""
            ],
            [
              "in",
              "string",
              "tkey",
              null,
              ""
            ],
            [
              "in",
              "any",
              "tval",
              null,
              ""
            ]
          ],
          "pos":[
            3426,
            1422
          ],
          "type":"util/customLua"
        },
        "10217":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"==",
          "pos":[
            5568,
            190
          ],
          "type":"logic/compare"
        },
        "10218":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":0
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":">",
          "pos":[
            1326,
            1086
          ],
          "type":"logic/compare"
        },
        "10219":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            374,
            1114
          ],
          "type":"logic/flowSwitch"
        },
        "10220":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerIsWalking"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            430,
            -608
          ],
          "type":"types/genericValue"
        },
        "10222":{
          "code":{
            "work":"local extensions = require(\"extensions\")\nlocal wps = self.pinIn.wplist.value\nlocal dtable = extensions.blrutils.ssplit(wps, \",\")\nwps = wps .. \",\" .. dtable[1]\nself.pinOut.path.value = wps",
            "_executionStarted":"",
            "_executionStopped":"",
            "onPreRender":""
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "wplist":false
            },
            "p_out":{
              "flow":false,
              "path":false
            }
          },
          "name":"AI Race Path",
          "pins":[
            [
              "in",
              "flow",
              "flow",
              null,
              "Inflow for this node.",
              true
            ],
            [
              "out",
              "flow",
              "flow",
              null,
              "Outflow for this node.",
              true
            ],
            [
              "in",
              "string",
              "wplist",
              null,
              ""
            ],
            [
              "out",
              "string",
              "path",
              null,
              ""
            ]
          ],
          "pos":[
            -1152,
            -440
          ],
          "type":"util/customLua"
        },
        "10223":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceWinner"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2188,
            22
          ],
          "type":"types/genericValue"
        },
        "10224":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceWinner"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2566,
            330
          ],
          "type":"types/genericValue"
        },
        "10225":{
          "customName":"Velocity Check",
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "B":{
              "type":"number",
              "value":4.50000000000000000000
            }
          },
          "hiddenPins":{
            "p_in":{
              "A":false,
              "B":false,
              "flow":false
            },
            "p_out":{
              "value":true,
              "false":false,
              "flow":false,
              "true":false
            }
          },
          "opSymbol":"<=",
          "pos":[
            -2636,
            -468
          ],
          "type":"logic/compare"
        },
        "10226":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyAvoid"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1138,
            -1700
          ],
          "type":"types/genericValue"
        },
        "10227":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyAvoid"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1992,
            -244
          ],
          "type":"types/genericValue"
        },
        "10228":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceEnemyPaint"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":false
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2552,
            -902
          ],
          "type":"types/genericValue"
        },
        "10229":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"racePartReward"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -802,
            -1700
          ],
          "type":"types/genericValue"
        },
        "10230":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"raceRepReward"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -970,
            -1700
          ],
          "type":"types/genericValue"
        },
        "10231":{
          "customName":"Set Rep",
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerRep"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            1396,
            -104
          ],
          "type":"types/genericValue"
        },
        "10232":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Cancel"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            -2342,
            -3814
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "10233":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"challengeUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2160,
            -3786
          ],
          "type":"types/genericValue"
        },
        "10234":{
          "count":2,
          "customName":"Challenge",
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            962,
            -594
          ],
          "type":"logic/and"
        },
        "10235":{
          "count":2,
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow_1":false,
              "flow_2":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            920,
            -398
          ],
          "type":"logic/and"
        },
        "10236":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"missionState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            388,
            -342
          ],
          "type":"types/genericValue"
        },
        "10237":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"challengeInProgress"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            388,
            -286
          ],
          "type":"types/genericValue"
        },
        "10238":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"challengeUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2370,
            -3590
          ],
          "type":"types/genericValue"
        },
        "10239":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":2
            },
            "varName":{
              "type":"string",
              "value":"challengeUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2132,
            -3702
          ],
          "type":"types/genericValue"
        },
        "10240":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":1
            },
            "varName":{
              "type":"string",
              "value":"challengeInProgress"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2020,
            -3688
          ],
          "type":"types/genericValue"
        },
        "10241":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"challengeInProgress"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2300,
            -3590
          ],
          "type":"types/genericValue"
        },
        "10242":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "off":false,
              "on":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2468,
            -3240
          ],
          "type":"logic/flowSwitch"
        },
        "10243":{
          "data":{},
          "dynamicMode":"once",
          "hardcodedPins":{
            "fadeInTime":{
              "type":"number",
              "value":-1
            },
            "fadeOutTime":{
              "type":"number",
              "value":-1
            },
            "file":{
              "type":"string",
              "value":"event:UI_Checkpoint"
            },
            "pitch":{
              "type":"number",
              "value":1
            },
            "unique":{
              "type":"bool",
              "value":false
            },
            "volume":{
              "type":"number",
              "value":1
            }
          },
          "hiddenPins":{
            "p_in":{
              "channel":true,
              "fadeInTime":true,
              "fadeOutTime":true,
              "file":true,
              "flow":false,
              "pitch":true,
              "reset":false,
              "unique":true,
              "volume":true
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2062,
            -3212
          ],
          "type":"audio/playOnce"
        },
        "10244":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"challengeInProgress"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -2804,
            -3030
          ],
          "type":"types/genericValue"
        },
        "10245":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "text":{
              "type":"string",
              "value":"Claim Reward"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "text":false
            },
            "p_out":{
              "up":true,
              "down":false,
              "flow":false,
              "hold":true
            }
          },
          "pos":[
            -2370,
            -3464
          ],
          "type":"ui/imgui/elemental/imButton"
        },
        "10246":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":-1
            },
            "varName":{
              "type":"string",
              "value":"challengeCheckpoint"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2230,
            -3590
          ],
          "type":"types/genericValue"
        },
        "10247":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":-1
            },
            "varName":{
              "type":"string",
              "value":"challengeCheckpoint"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2062,
            -3464
          ],
          "type":"types/genericValue"
        },
        "10248":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"challengeUIState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2188,
            -3464
          ],
          "type":"types/genericValue"
        },
        "10249":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"challengeInProgress"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2132,
            -3464
          ],
          "type":"types/genericValue"
        },
        "10250":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerRep"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -1866,
            -3394
          ],
          "type":"types/genericValue"
        },
        "10251":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value + self.pinIn.DX.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X+DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            -1866,
            -3184
          ],
          "type":"util/customLua"
        },
        "10252":{
          "code":{
            "_executionStarted":"",
            "_executionStopped":"",
            "work":"self.pinOut.Y.value = self.pinIn.X.value + self.pinIn.DX.value\n"
          },
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "DX":false,
              "X":false,
              "flow":false
            },
            "p_out":{
              "Y":false,
              "flow":false
            }
          },
          "name":"Y=X+DX",
          "pins":[
            [
              "in",
              "flow",
              "flow"
            ],
            [
              "out",
              "flow",
              "flow"
            ],
            [
              "in",
              "number",
              "X",
              null,
              ""
            ],
            [
              "in",
              "number",
              "DX",
              null,
              ""
            ],
            [
              "out",
              "number",
              "Y",
              null,
              ""
            ]
          ],
          "pos":[
            -1866,
            -3100
          ],
          "type":"util/customLua"
        },
        "10253":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"playerRep"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2062,
            -3100
          ],
          "type":"types/genericValue"
        },
        "10254":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":true,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"challengeComplete"
            }
          },
          "hiddenPins":{
            "p_in":{
              "flow":false,
              "suffix":true,
              "varName":true
            },
            "p_out":{
              "flow":false,
              "val":false
            }
          },
          "pos":[
            -3140,
            -3198
          ],
          "type":"types/genericValue"
        },
        "10255":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "val":{
              "type":"number",
              "value":0
            },
            "varName":{
              "type":"string",
              "value":"challengeComplete"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2006,
            -3814
          ],
          "type":"types/genericValue"
        },
        "10256":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"groundMarkersState"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2804,
            1324
          ],
          "type":"types/genericValue"
        },
        "10257":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"groundMarkersWP"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -1516,
            -2582
          ],
          "type":"types/genericValue"
        },
        "10258":{
          "data":{},
          "dynamicMode":"repeat",
          "getter":false,
          "global":true,
          "hardcodedPins":{
            "varName":{
              "type":"string",
              "value":"groundMarkersWP"
            }
          },
          "hiddenPins":{
            "p_in":{
              "varName":true,
              "flow":false,
              "suffix":true,
              "val":false
            },
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            -2524,
            -3520
          ],
          "type":"types/genericValue"
        },
        "10259":{
          "data":{},
          "dynamicMode":"repeat",
          "hardcodedPins":{
            "spawnMode":{
              "type":"string",
              "value":"road"
            },
            "randomColors":{
              "type":"bool",
              "value":true
            },
            "shuffle":{
              "type":"bool",
              "value":true
            },
            "spawnGap":{
              "type":"number",
              "value":100
            }
          },
          "hiddenPins":{
            "p_in":{
              "dontDelete":true,
              "flow":false,
              "group":false,
              "quantity":false,
              "randomColors":true,
              "reset":false,
              "shuffle":true,
              "spawnGap":true,
              "spawnMode":true,
              "startPos":true,
              "startRot":true
            },
            "p_out":{
              "flow":false,
              "loaded":false,
              "vehicleIds":false
            }
          },
          "pos":[
            -1152,
            960
          ],
          "type":"gameplay/traffic/trafficSpawnGroup"
        }
      },
      "showTab":true,
      "type":"graph",
      "variables":{
        "customVariableOrder":{},
        "list":{}
      },
      "viewPos":[
        114.52613067626953125000,
        -975.72534179687500000000
      ],
      "viewZoom":0.25000000000000000000
    },
    "3":{
      "description":"This is the description for graph States",
      "dirty":false,
      "isStateGraph":true,
      "links":[
        [
          5,
          "flow",
          4,
          "flow",
          false
        ],
        [
          4,
          "success",
          6,
          "flow",
          false
        ],
        [
          4,
          "fail",
          6,
          "flow",
          false
        ]
      ],
      "name":"States",
      "nodes":{
        "4":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{
              "fail":false,
              "success":false
            }
          },
          "pins":[
            [
              "out",
              "state",
              "success",
              null,
              "This is a flow pin."
            ],
            [
              "out",
              "state",
              "fail",
              null,
              "This is a flow pin."
            ],
            [
              "in",
              "state",
              "flow",
              null,
              "This is a flow pin."
            ]
          ],
          "pos":[
            374,
            -6
          ],
          "targetGraphId":1,
          "type":"states/stateNode"
        },
        "5":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{},
            "p_out":{
              "flow":false
            }
          },
          "pos":[
            150,
            8
          ],
          "type":"states/stateEntry"
        },
        "6":{
          "data":{},
          "dynamicMode":"repeat",
          "hiddenPins":{
            "p_in":{
              "flow":false
            },
            "p_out":{}
          },
          "pins":[
            [
              "in",
              "state",
              "flow",
              null,
              "This is a flow pin."
            ]
          ],
          "pos":[
            724,
            8
          ],
          "transitionName":"",
          "type":"states/stateExit"
        }
      },
      "showTab":true,
      "type":"graph",
      "variables":{
        "customVariableOrder":{},
        "list":{}
      },
      "viewPos":[
        44.94361114501953125000,
        -201.60905456542968750000
      ],
      "viewZoom":1
    }
  },
  "isScenario":true,
  "macros":{},
  "name":"Utah Persistent Career ",
  "savedDir":"/beamLR/",
  "savedFilename":"wipflowgraphRANDOMSHOP0.26.flow.json",
  "stateGraphId":3,
  "variables":{
    "customVariableOrder":[
      "playerMoney",
      "playerCarCount",
      "gasCost",
      "carStorePage",
      "missionGiverUIState",
      "missionState",
      "currentMissionDestid",
      "currentMissionDesc",
      "currentMissionReward",
      "currentMissionDestpos",
      "playerGarageUIState",
      "playerCarTable",
      "playerGarageSelectedCar",
      "playerCurrentCar",
      "saveSystemState",
      "carShopSelectedSlot",
      "currentRepairCost",
      "uiTriggerState",
      "raceInProgress",
      "raceMenuPage",
      "raceWinner",
      "raceEnemyID",
      "raceDestID",
      "raceWager",
      "raceForSlips",
      "raceAIWP",
      "raceDesc",
      "raceCount",
      "raceEnemyModel",
      "raceEnemyConfig",
      "raceEnemyRisk",
      "triggerFilterStatus",
      "triggerFilterPlayerTrigID",
      "racePlayerReady",
      "gmax",
      "playerHealth",
      "playerCurrentCarModel",
      "playerIsWalking",
      "raceEnemyBasePrice",
      "raceEnemyPartPrice",
      "raceEnemyScrapVal",
      "raceEnemyPaint",
      "outstandingTicket",
      "ticketCost",
      "ticketText",
      "ticketMenuState",
      "racePlayerCPID",
      "racePlayerTriggerID",
      "racePlayerLap",
      "raceEnemyCPID",
      "raceEnemyTriggerID",
      "raceEnemyLap",
      "raceLaps",
      "raceTriggers",
      "raceWaypoints",
      "raceCPCount",
      "racePlayerInitStatus",
      "playerDamage",
      "raceLeague",
      "leagueProgressUpdate",
      "raceEnemyifile",
      "trafficEnableFlag",
      "triggerFilterPlayerTrigName",
      "raceUseTraffic",
      "uiRepairCost",
      "triggerDataPath",
      "raceClub",
      "raceOPSP",
      "raceOPSR",
      "racePSTART",
      "racePSTrig",
      "raceClubName",
      "waitmsgState",
      "raceEnemyAvoid",
      "racePartReward",
      "raceRepReward",
      "playerRep",
      "challengeInProgress",
      "challengeUIState",
      "challengeCheckpoint",
      "challengeComplete",
      "groundMarkersWP",
      "groundMarkersState"
    ],
    "list":[
      {
        "index":30,
        "mergeStrat":"last",
        "name":"raceEnemyConfig",
        "type":"string",
        "value":""
      },
      {
        "index":31,
        "mergeStrat":"max",
        "name":"raceEnemyRisk",
        "type":"number",
        "value":0
      },
      {
        "index":56,
        "mergeStrat":"max",
        "name":"raceCPCount",
        "type":"number",
        "value":0
      },
      {
        "index":78,
        "mergeStrat":"max",
        "name":"challengeInProgress",
        "type":"number",
        "value":0
      },
      {
        "index":27,
        "mergeStrat":"last",
        "name":"raceDesc",
        "type":"string",
        "value":""
      },
      {
        "index":9,
        "mergeStrat":"max",
        "name":"currentMissionReward",
        "type":"number",
        "value":0
      },
      {
        "index":12,
        "mergeStrat":"last",
        "name":"playerCarTable",
        "type":"string",
        "value":""
      },
      {
        "index":15,
        "mergeStrat":"max",
        "name":"saveSystemState",
        "type":"number",
        "value":0
      },
      {
        "index":32,
        "mergeStrat":"max",
        "name":"triggerFilterStatus",
        "type":"number",
        "value":0
      },
      {
        "index":4,
        "mergeStrat":"max",
        "name":"carStorePage",
        "type":"number",
        "value":0
      },
      {
        "index":49,
        "mergeStrat":"max",
        "name":"racePlayerLap",
        "type":"number",
        "value":0
      },
      {
        "index":23,
        "mergeStrat":"max",
        "name":"raceDestID",
        "type":"number",
        "value":0
      },
      {
        "index":57,
        "mergeStrat":"max",
        "name":"racePlayerInitStatus",
        "type":"number",
        "value":0
      },
      {
        "index":8,
        "mergeStrat":"last",
        "name":"currentMissionDesc",
        "type":"string",
        "value":""
      },
      {
        "index":35,
        "mergeStrat":"max",
        "name":"gmax",
        "type":"number",
        "value":0
      },
      {
        "index":19,
        "mergeStrat":"last",
        "name":"raceInProgress",
        "type":"number",
        "value":0
      },
      {
        "index":73,
        "mergeStrat":"max",
        "name":"waitmsgState",
        "type":"number",
        "value":0
      },
      {
        "index":33,
        "mergeStrat":"max",
        "name":"triggerFilterPlayerTrigID",
        "type":"number",
        "value":0
      },
      {
        "index":61,
        "mergeStrat":"last",
        "name":"raceEnemyifile",
        "type":"string",
        "value":""
      },
      {
        "index":63,
        "mergeStrat":"last",
        "name":"triggerFilterPlayerTrigName",
        "type":"string",
        "value":""
      },
      {
        "index":43,
        "mergeStrat":"max",
        "name":"outstandingTicket",
        "type":"number",
        "value":-1
      },
      {
        "index":60,
        "mergeStrat":"max",
        "name":"leagueProgressUpdate",
        "type":"number",
        "value":0
      },
      {
        "index":18,
        "mergeStrat":"max",
        "name":"uiTriggerState",
        "type":"number",
        "value":0
      },
      {
        "index":77,
        "mergeStrat":"last",
        "name":"playerRep",
        "type":"number",
        "value":0
      },
      {
        "index":34,
        "mergeStrat":"max",
        "name":"racePlayerReady",
        "type":"number",
        "value":0
      },
      {
        "index":10,
        "mergeStrat":"last",
        "name":"currentMissionDestpos",
        "type":"vec3",
        "value":[
          0,
          0,
          0
        ]
      },
      {
        "index":67,
        "mergeStrat":"last",
        "name":"raceClub",
        "type":"string",
        "value":""
      },
      {
        "index":83,
        "mergeStrat":"last",
        "name":"groundMarkersState",
        "type":"number",
        "value":0
      },
      {
        "index":1,
        "mergeStrat":"max",
        "name":"playerMoney",
        "type":"number",
        "value":0
      },
      {
        "index":68,
        "mergeStrat":"last",
        "name":"raceOPSP",
        "type":"vec3",
        "value":[
          0,
          0,
          0
        ]
      },
      {
        "index":21,
        "mergeStrat":"max",
        "name":"raceWinner",
        "type":"number",
        "value":0
      },
      {
        "index":69,
        "mergeStrat":"last",
        "name":"raceOPSR",
        "type":"quat",
        "value":[
          0,
          0,
          0,
          0
        ]
      },
      {
        "index":75,
        "mergeStrat":"last",
        "name":"racePartReward",
        "type":"string",
        "value":""
      },
      {
        "index":70,
        "mergeStrat":"last",
        "name":"racePSTART",
        "type":"vec3",
        "value":[
          0,
          0,
          0
        ]
      },
      {
        "index":39,
        "mergeStrat":"max",
        "name":"raceEnemyBasePrice",
        "type":"number",
        "value":0
      },
      {
        "index":40,
        "mergeStrat":"last",
        "name":"raceEnemyPartPrice",
        "type":"number",
        "value":0
      },
      {
        "index":7,
        "mergeStrat":"max",
        "name":"currentMissionDestid",
        "type":"number",
        "value":0
      },
      {
        "index":41,
        "mergeStrat":"last",
        "name":"raceEnemyScrapVal",
        "type":"number",
        "value":0
      },
      {
        "index":5,
        "mergeStrat":"max",
        "name":"missionGiverUIState",
        "type":"number",
        "value":0
      },
      {
        "index":13,
        "mergeStrat":"max",
        "name":"playerGarageSelectedCar",
        "type":"number",
        "value":0
      },
      {
        "index":71,
        "mergeStrat":"last",
        "name":"racePSTrig",
        "type":"string",
        "value":""
      },
      {
        "index":64,
        "mergeStrat":"max",
        "name":"raceUseTraffic",
        "type":"number",
        "value":0
      },
      {
        "index":6,
        "mergeStrat":"max",
        "name":"missionState",
        "type":"number",
        "value":0
      },
      {
        "index":44,
        "mergeStrat":"max",
        "name":"ticketCost",
        "type":"number",
        "value":0
      },
      {
        "index":72,
        "mergeStrat":"last",
        "name":"raceClubName",
        "type":"string",
        "value":""
      },
      {
        "index":38,
        "mergeStrat":"max",
        "name":"playerIsWalking",
        "type":"number",
        "value":0
      },
      {
        "index":45,
        "mergeStrat":"last",
        "name":"ticketText",
        "type":"string",
        "value":""
      },
      {
        "index":14,
        "mergeStrat":"max",
        "name":"playerCurrentCar",
        "type":"number",
        "value":0
      },
      {
        "index":2,
        "mergeStrat":"max",
        "name":"playerCarCount",
        "type":"number",
        "value":1
      },
      {
        "index":62,
        "mergeStrat":"last",
        "name":"trafficEnableFlag",
        "type":"number",
        "value":0
      },
      {
        "index":28,
        "mergeStrat":"max",
        "name":"raceCount",
        "type":"number",
        "value":0
      },
      {
        "index":82,
        "mergeStrat":"last",
        "name":"groundMarkersWP",
        "type":"string",
        "value":""
      },
      {
        "index":81,
        "mergeStrat":"max",
        "name":"challengeComplete",
        "type":"number",
        "value":0
      },
      {
        "index":37,
        "mergeStrat":"last",
        "name":"playerCurrentCarModel",
        "type":"string",
        "value":""
      },
      {
        "index":79,
        "mergeStrat":"max",
        "name":"challengeUIState",
        "type":"number",
        "value":0
      },
      {
        "index":58,
        "mergeStrat":"max",
        "name":"playerDamage",
        "type":"number",
        "value":-1
      },
      {
        "index":76,
        "mergeStrat":"max",
        "name":"raceRepReward",
        "type":"number",
        "value":0
      },
      {
        "index":65,
        "mergeStrat":"max",
        "name":"uiRepairCost",
        "type":"number",
        "value":-1
      },
      {
        "index":36,
        "mergeStrat":"max",
        "name":"playerHealth",
        "type":"number",
        "value":0
      },
      {
        "index":20,
        "mergeStrat":"max",
        "name":"raceMenuPage",
        "type":"number",
        "value":0
      },
      {
        "index":52,
        "mergeStrat":"max",
        "name":"raceEnemyLap",
        "type":"number",
        "value":0
      },
      {
        "index":74,
        "mergeStrat":"max",
        "name":"raceEnemyAvoid",
        "type":"number",
        "value":0
      },
      {
        "index":53,
        "mergeStrat":"max",
        "name":"raceLaps",
        "type":"number",
        "value":0
      },
      {
        "index":22,
        "mergeStrat":"max",
        "name":"raceEnemyID",
        "type":"number",
        "value":0
      },
      {
        "index":54,
        "mergeStrat":"last",
        "name":"raceTriggers",
        "type":"string",
        "value":""
      },
      {
        "index":3,
        "mergeStrat":"max",
        "name":"gasCost",
        "type":"number",
        "value":10
      },
      {
        "index":55,
        "mergeStrat":"last",
        "name":"raceWaypoints",
        "type":"string",
        "value":""
      },
      {
        "index":26,
        "mergeStrat":"last",
        "name":"raceAIWP",
        "type":"string",
        "value":""
      },
      {
        "index":47,
        "mergeStrat":"max",
        "name":"racePlayerCPID",
        "type":"number",
        "value":0
      },
      {
        "index":11,
        "mergeStrat":"max",
        "name":"playerGarageUIState",
        "type":"number",
        "value":0
      },
      {
        "index":24,
        "mergeStrat":"max",
        "name":"raceWager",
        "type":"number",
        "value":0
      },
      {
        "index":51,
        "mergeStrat":"max",
        "name":"raceEnemyTriggerID",
        "type":"number",
        "value":0
      },
      {
        "index":80,
        "mergeStrat":"max",
        "name":"challengeCheckpoint",
        "type":"number",
        "value":-1
      },
      {
        "index":16,
        "mergeStrat":"max",
        "name":"carShopSelectedSlot",
        "type":"number",
        "value":0
      },
      {
        "index":25,
        "mergeStrat":"max",
        "name":"raceForSlips",
        "type":"number",
        "value":0
      },
      {
        "index":17,
        "mergeStrat":"max",
        "name":"currentRepairCost",
        "type":"number",
        "value":0
      },
      {
        "index":42,
        "mergeStrat":"last",
        "name":"raceEnemyPaint",
        "type":"string",
        "value":""
      },
      {
        "index":48,
        "mergeStrat":"max",
        "name":"racePlayerTriggerID",
        "type":"number",
        "value":0
      },
      {
        "index":46,
        "mergeStrat":"max",
        "name":"ticketMenuState",
        "type":"number",
        "value":0
      },
      {
        "index":59,
        "mergeStrat":"last",
        "name":"raceLeague",
        "type":"string",
        "value":""
      },
      {
        "index":50,
        "mergeStrat":"max",
        "name":"raceEnemyCPID",
        "type":"number",
        "value":0
      },
      {
        "index":29,
        "mergeStrat":"last",
        "name":"raceEnemyModel",
        "type":"string",
        "value":""
      },
      {
        "index":66,
        "mergeStrat":"last",
        "name":"triggerDataPath",
        "type":"string",
        "value":""
      }
    ]
  },
  "version":0.20000000000000001110
}